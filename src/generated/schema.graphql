### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AggregateBaseSettings {
  _avg: BaseSettingsAvgAggregateOutputType
  _count: BaseSettingsCountAggregateOutputType
  _max: BaseSettingsMaxAggregateOutputType
  _min: BaseSettingsMinAggregateOutputType
  _sum: BaseSettingsSumAggregateOutputType
}

type AggregateInventory {
  _avg: InventoryAvgAggregateOutputType
  _count: InventoryCountAggregateOutputType
  _max: InventoryMaxAggregateOutputType
  _min: InventoryMinAggregateOutputType
  _sum: InventorySumAggregateOutputType
}

type AggregateProduct {
  _avg: ProductAvgAggregateOutputType
  _count: ProductCountAggregateOutputType
  _max: ProductMaxAggregateOutputType
  _min: ProductMinAggregateOutputType
  _sum: ProductSumAggregateOutputType
}

type AggregatePromocodes {
  _avg: PromocodesAvgAggregateOutputType
  _count: PromocodesCountAggregateOutputType
  _max: PromocodesMaxAggregateOutputType
  _min: PromocodesMinAggregateOutputType
  _sum: PromocodesSumAggregateOutputType
}

type AggregatePurchase {
  _avg: PurchaseAvgAggregateOutputType
  _count: PurchaseCountAggregateOutputType
  _max: PurchaseMaxAggregateOutputType
  _min: PurchaseMinAggregateOutputType
  _sum: PurchaseSumAggregateOutputType
}

type AggregateServer {
  _avg: ServerAvgAggregateOutputType
  _count: ServerCountAggregateOutputType
  _max: ServerMaxAggregateOutputType
  _min: ServerMinAggregateOutputType
  _sum: ServerSumAggregateOutputType
}

type AggregateServerType {
  _avg: ServerTypeAvgAggregateOutputType
  _count: ServerTypeCountAggregateOutputType
  _max: ServerTypeMaxAggregateOutputType
  _min: ServerTypeMinAggregateOutputType
  _sum: ServerTypeSumAggregateOutputType
}

type AggregateToken {
  _avg: TokenAvgAggregateOutputType
  _count: TokenCountAggregateOutputType
  _max: TokenMaxAggregateOutputType
  _min: TokenMinAggregateOutputType
  _sum: TokenSumAggregateOutputType
}

type AggregateTransaction {
  _avg: TransactionAvgAggregateOutputType
  _count: TransactionCountAggregateOutputType
  _max: TransactionMaxAggregateOutputType
  _min: TransactionMinAggregateOutputType
  _sum: TransactionSumAggregateOutputType
}

type AggregateTransfers {
  _avg: TransfersAvgAggregateOutputType
  _count: TransfersCountAggregateOutputType
  _max: TransfersMaxAggregateOutputType
  _min: TransfersMinAggregateOutputType
  _sum: TransfersSumAggregateOutputType
}

type AggregateUrlSettings {
  _avg: UrlSettingsAvgAggregateOutputType
  _count: UrlSettingsCountAggregateOutputType
  _max: UrlSettingsMaxAggregateOutputType
  _min: UrlSettingsMinAggregateOutputType
  _sum: UrlSettingsSumAggregateOutputType
}

type AggregateUser {
  _avg: UserAvgAggregateOutputType
  _count: UserCountAggregateOutputType
  _max: UserMaxAggregateOutputType
  _min: UserMinAggregateOutputType
  _sum: UserSumAggregateOutputType
}

type BaseSettingsAvgAggregateOutputType {
  id: Float
  startBalance: Float
}

type BaseSettingsCountAggregateOutputType {
  IPWhiteList: Int!
  _all: Int!
  apiKey: Int!
  header: Int!
  id: Int!
  mainPage: Int!
  panelURLs: Int!
  saleMode: Int!
  startBalance: Int!
}

type BaseSettingsMaxAggregateOutputType {
  IPWhiteList: String
  apiKey: String
  header: String
  id: Int
  mainPage: String
  saleMode: Boolean
  startBalance: Int
}

type BaseSettingsMinAggregateOutputType {
  IPWhiteList: String
  apiKey: String
  header: String
  id: Int
  mainPage: String
  saleMode: Boolean
  startBalance: Int
}

enum BaseSettingsScalarFieldEnum {
  IPWhiteList
  apiKey
  header
  id
  mainPage
  panelURLs
  saleMode
  startBalance
}

type BaseSettingsSumAggregateOutputType {
  id: Int
  startBalance: Int
}

type BatchPayload {
  count: Int!
}

"""BigInt custom scalar type"""
scalar BigInt

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input BoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input BoolNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedBoolNullableFilter
  _min: NestedBoolNullableFilter
  equals: Boolean
  not: NestedBoolNullableWithAggregatesFilter
}

input BoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

"""Date custom scalar type"""
scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime]
}

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime]
}

input DateTimeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedDateTimeNullableFilter
  _min: NestedDateTimeNullableFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableWithAggregatesFilter
  notIn: [DateTime]
}

input DateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTime]
}

"""Decimal custom scalar type"""
scalar Decimal

enum EButtonColor {
  BLUE
  GREEN
}

enum EStatusOfProductInInventory {
  INVENTORY
  ON_SERVER
}

enum EStatusOfRefill {
  DENIED
  FALSE
  SUCCESS
}

enum ETypeOfProduct {
  CARDS
  CURRENCY
  GAME_ITEM
  HTTP_REQUEST
  SERVICE
  SETS_OF_PRODUCTS
}

enum ETypeOfURL {
  CUSTOM_PAGE
  DROPDOWN_LIST
  EXTERNAL_LINK
  SITE_SECTION
}

type Enum {
  fields: [String!]!
  name: String!
}

input EnumEButtonColorFieldUpdateOperationsInput {
  set: EButtonColor
}

input EnumEButtonColorFilter {
  equals: EButtonColor
  in: [EButtonColor]
  not: NestedEnumEButtonColorFilter
  notIn: [EButtonColor]
}

input EnumEButtonColorWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumEButtonColorFilter
  _min: NestedEnumEButtonColorFilter
  equals: EButtonColor
  in: [EButtonColor]
  not: NestedEnumEButtonColorWithAggregatesFilter
  notIn: [EButtonColor]
}

input EnumEStatusOfProductInInventoryFieldUpdateOperationsInput {
  set: EStatusOfProductInInventory
}

input EnumEStatusOfProductInInventoryFilter {
  equals: EStatusOfProductInInventory
  in: [EStatusOfProductInInventory]
  not: NestedEnumEStatusOfProductInInventoryFilter
  notIn: [EStatusOfProductInInventory]
}

input EnumEStatusOfProductInInventoryWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumEStatusOfProductInInventoryFilter
  _min: NestedEnumEStatusOfProductInInventoryFilter
  equals: EStatusOfProductInInventory
  in: [EStatusOfProductInInventory]
  not: NestedEnumEStatusOfProductInInventoryWithAggregatesFilter
  notIn: [EStatusOfProductInInventory]
}

input EnumEStatusOfRefillFieldUpdateOperationsInput {
  set: EStatusOfRefill
}

input EnumEStatusOfRefillFilter {
  equals: EStatusOfRefill
  in: [EStatusOfRefill]
  not: NestedEnumEStatusOfRefillFilter
  notIn: [EStatusOfRefill]
}

input EnumEStatusOfRefillWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumEStatusOfRefillFilter
  _min: NestedEnumEStatusOfRefillFilter
  equals: EStatusOfRefill
  in: [EStatusOfRefill]
  not: NestedEnumEStatusOfRefillWithAggregatesFilter
  notIn: [EStatusOfRefill]
}

input EnumETypeOfProductFieldUpdateOperationsInput {
  set: ETypeOfProduct
}

input EnumETypeOfProductFilter {
  equals: ETypeOfProduct
  in: [ETypeOfProduct]
  not: NestedEnumETypeOfProductFilter
  notIn: [ETypeOfProduct]
}

input EnumETypeOfProductWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumETypeOfProductFilter
  _min: NestedEnumETypeOfProductFilter
  equals: ETypeOfProduct
  in: [ETypeOfProduct]
  not: NestedEnumETypeOfProductWithAggregatesFilter
  notIn: [ETypeOfProduct]
}

input EnumETypeOfURLFieldUpdateOperationsInput {
  set: ETypeOfURL
}

input EnumETypeOfURLFilter {
  equals: ETypeOfURL
  in: [ETypeOfURL]
  not: NestedEnumETypeOfURLFilter
  notIn: [ETypeOfURL]
}

input EnumETypeOfURLWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumETypeOfURLFilter
  _min: NestedEnumETypeOfURLFilter
  equals: ETypeOfURL
  in: [ETypeOfURL]
  not: NestedEnumETypeOfURLWithAggregatesFilter
  notIn: [ETypeOfURL]
}

input EnumUSER_ROLEFieldUpdateOperationsInput {
  set: USER_ROLE
}

input EnumUSER_ROLEFilter {
  equals: USER_ROLE
  in: [USER_ROLE]
  not: NestedEnumUSER_ROLEFilter
  notIn: [USER_ROLE]
}

input EnumUSER_ROLEWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumUSER_ROLEFilter
  _min: NestedEnumUSER_ROLEFilter
  equals: USER_ROLE
  in: [USER_ROLE]
  not: NestedEnumUSER_ROLEWithAggregatesFilter
  notIn: [USER_ROLE]
}

type Field {
  create: Boolean!
  editor: Boolean!
  filter: Boolean!
  id: String!
  isId: Boolean!
  kind: KindEnum!
  list: Boolean!
  name: String!
  order: Int!
  read: Boolean!
  relationField: Boolean
  required: Boolean!
  sort: Boolean!
  title: String!
  type: String!
  unique: Boolean!
  update: Boolean!
  upload: Boolean!
}

input FloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  not: NestedFloatNullableFilter
  notIn: [Float]
}

input FloatNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedFloatNullableFilter
  _min: NestedFloatNullableFilter
  _sum: NestedFloatNullableFilter
  equals: Float
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  not: NestedFloatNullableWithAggregatesFilter
  notIn: [Float]
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int]
}

input IntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedIntNullableFilter
  _min: NestedIntNullableFilter
  _sum: NestedIntNullableFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntNullableWithAggregatesFilter
  notIn: [Int]
}

input IntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int]
}

type Inventory {
  amount: Int!
  createdAt: DateTime!
  dateOfReceive: DateTime
  historyOfPurchaseId: Int!
  id: Int!
  product: Product!
  productId: Int!
  purchase: Purchase!
  server: Server
  serverId: Int
  serverName: String
  serverType: ServerType
  serverTypeId: Int
  status: EStatusOfProductInInventory!
  user: User!
  userId: Int!
}

type InventoryAvgAggregateOutputType {
  amount: Float
  historyOfPurchaseId: Float
  id: Float
  productId: Float
  serverId: Float
  serverTypeId: Float
  userId: Float
}

input InventoryAvgOrderByAggregateInput {
  amount: SortOrder
  historyOfPurchaseId: SortOrder
  id: SortOrder
  productId: SortOrder
  serverId: SortOrder
  serverTypeId: SortOrder
  userId: SortOrder
}

type InventoryCountAggregateOutputType {
  _all: Int!
  amount: Int!
  createdAt: Int!
  dateOfReceive: Int!
  historyOfPurchaseId: Int!
  id: Int!
  productId: Int!
  serverId: Int!
  serverName: Int!
  serverTypeId: Int!
  status: Int!
  userId: Int!
}

input InventoryCountOrderByAggregateInput {
  amount: SortOrder
  createdAt: SortOrder
  dateOfReceive: SortOrder
  historyOfPurchaseId: SortOrder
  id: SortOrder
  productId: SortOrder
  serverId: SortOrder
  serverName: SortOrder
  serverTypeId: SortOrder
  status: SortOrder
  userId: SortOrder
}

input InventoryCreateInput {
  amount: Int!
  createdAt: DateTime
  dateOfReceive: DateTime
  product: ProductCreateNestedOneWithoutInventoryInput!
  purchase: PurchaseCreateNestedOneWithoutInventoryInput!
  server: ServerCreateNestedOneWithoutInventoryInput
  serverName: String
  serverType: ServerTypeCreateNestedOneWithoutInventoryInput
  status: EStatusOfProductInInventory
  user: UserCreateNestedOneWithoutInventoryInput!
}

input InventoryCreateManyInput {
  amount: Int!
  createdAt: DateTime
  dateOfReceive: DateTime
  historyOfPurchaseId: Int!
  id: Int
  productId: Int!
  serverId: Int
  serverName: String
  serverTypeId: Int
  status: EStatusOfProductInInventory
  userId: Int!
}

input InventoryCreateManyProductInput {
  amount: Int!
  createdAt: DateTime
  dateOfReceive: DateTime
  historyOfPurchaseId: Int!
  id: Int
  serverId: Int
  serverName: String
  serverTypeId: Int
  status: EStatusOfProductInInventory
  userId: Int!
}

input InventoryCreateManyProductInputEnvelope {
  data: InventoryCreateManyProductInput!
  skipDuplicates: Boolean
}

input InventoryCreateManyPurchaseInput {
  amount: Int!
  createdAt: DateTime
  dateOfReceive: DateTime
  id: Int
  productId: Int!
  serverId: Int
  serverName: String
  serverTypeId: Int
  status: EStatusOfProductInInventory
  userId: Int!
}

input InventoryCreateManyPurchaseInputEnvelope {
  data: InventoryCreateManyPurchaseInput!
  skipDuplicates: Boolean
}

input InventoryCreateManyServerInput {
  amount: Int!
  createdAt: DateTime
  dateOfReceive: DateTime
  historyOfPurchaseId: Int!
  id: Int
  productId: Int!
  serverName: String
  serverTypeId: Int
  status: EStatusOfProductInInventory
  userId: Int!
}

input InventoryCreateManyServerInputEnvelope {
  data: InventoryCreateManyServerInput!
  skipDuplicates: Boolean
}

input InventoryCreateManyServerTypeInput {
  amount: Int!
  createdAt: DateTime
  dateOfReceive: DateTime
  historyOfPurchaseId: Int!
  id: Int
  productId: Int!
  serverId: Int
  serverName: String
  status: EStatusOfProductInInventory
  userId: Int!
}

input InventoryCreateManyServerTypeInputEnvelope {
  data: InventoryCreateManyServerTypeInput!
  skipDuplicates: Boolean
}

input InventoryCreateManyUserInput {
  amount: Int!
  createdAt: DateTime
  dateOfReceive: DateTime
  historyOfPurchaseId: Int!
  id: Int
  productId: Int!
  serverId: Int
  serverName: String
  serverTypeId: Int
  status: EStatusOfProductInInventory
}

input InventoryCreateManyUserInputEnvelope {
  data: InventoryCreateManyUserInput!
  skipDuplicates: Boolean
}

input InventoryCreateNestedManyWithoutProductInput {
  connect: [InventoryWhereUniqueInput]
  connectOrCreate: [InventoryCreateOrConnectWithoutProductInput]
  create: [InventoryCreateWithoutProductInput]
  createMany: InventoryCreateManyProductInputEnvelope
}

input InventoryCreateNestedManyWithoutPurchaseInput {
  connect: [InventoryWhereUniqueInput]
  connectOrCreate: [InventoryCreateOrConnectWithoutPurchaseInput]
  create: [InventoryCreateWithoutPurchaseInput]
  createMany: InventoryCreateManyPurchaseInputEnvelope
}

input InventoryCreateNestedManyWithoutServerInput {
  connect: [InventoryWhereUniqueInput]
  connectOrCreate: [InventoryCreateOrConnectWithoutServerInput]
  create: [InventoryCreateWithoutServerInput]
  createMany: InventoryCreateManyServerInputEnvelope
}

input InventoryCreateNestedManyWithoutServerTypeInput {
  connect: [InventoryWhereUniqueInput]
  connectOrCreate: [InventoryCreateOrConnectWithoutServerTypeInput]
  create: [InventoryCreateWithoutServerTypeInput]
  createMany: InventoryCreateManyServerTypeInputEnvelope
}

input InventoryCreateNestedManyWithoutUserInput {
  connect: [InventoryWhereUniqueInput]
  connectOrCreate: [InventoryCreateOrConnectWithoutUserInput]
  create: [InventoryCreateWithoutUserInput]
  createMany: InventoryCreateManyUserInputEnvelope
}

input InventoryCreateOrConnectWithoutProductInput {
  create: InventoryUncheckedCreateWithoutProductInput!
  where: InventoryWhereUniqueInput!
}

input InventoryCreateOrConnectWithoutPurchaseInput {
  create: InventoryUncheckedCreateWithoutPurchaseInput!
  where: InventoryWhereUniqueInput!
}

input InventoryCreateOrConnectWithoutServerInput {
  create: InventoryUncheckedCreateWithoutServerInput!
  where: InventoryWhereUniqueInput!
}

input InventoryCreateOrConnectWithoutServerTypeInput {
  create: InventoryUncheckedCreateWithoutServerTypeInput!
  where: InventoryWhereUniqueInput!
}

input InventoryCreateOrConnectWithoutUserInput {
  create: InventoryUncheckedCreateWithoutUserInput!
  where: InventoryWhereUniqueInput!
}

input InventoryCreateWithoutProductInput {
  amount: Int!
  createdAt: DateTime
  dateOfReceive: DateTime
  purchase: PurchaseCreateNestedOneWithoutInventoryInput!
  server: ServerCreateNestedOneWithoutInventoryInput
  serverName: String
  serverType: ServerTypeCreateNestedOneWithoutInventoryInput
  status: EStatusOfProductInInventory
  user: UserCreateNestedOneWithoutInventoryInput!
}

input InventoryCreateWithoutPurchaseInput {
  amount: Int!
  createdAt: DateTime
  dateOfReceive: DateTime
  product: ProductCreateNestedOneWithoutInventoryInput!
  server: ServerCreateNestedOneWithoutInventoryInput
  serverName: String
  serverType: ServerTypeCreateNestedOneWithoutInventoryInput
  status: EStatusOfProductInInventory
  user: UserCreateNestedOneWithoutInventoryInput!
}

input InventoryCreateWithoutServerInput {
  amount: Int!
  createdAt: DateTime
  dateOfReceive: DateTime
  product: ProductCreateNestedOneWithoutInventoryInput!
  purchase: PurchaseCreateNestedOneWithoutInventoryInput!
  serverName: String
  serverType: ServerTypeCreateNestedOneWithoutInventoryInput
  status: EStatusOfProductInInventory
  user: UserCreateNestedOneWithoutInventoryInput!
}

input InventoryCreateWithoutServerTypeInput {
  amount: Int!
  createdAt: DateTime
  dateOfReceive: DateTime
  product: ProductCreateNestedOneWithoutInventoryInput!
  purchase: PurchaseCreateNestedOneWithoutInventoryInput!
  server: ServerCreateNestedOneWithoutInventoryInput
  serverName: String
  status: EStatusOfProductInInventory
  user: UserCreateNestedOneWithoutInventoryInput!
}

input InventoryCreateWithoutUserInput {
  amount: Int!
  createdAt: DateTime
  dateOfReceive: DateTime
  product: ProductCreateNestedOneWithoutInventoryInput!
  purchase: PurchaseCreateNestedOneWithoutInventoryInput!
  server: ServerCreateNestedOneWithoutInventoryInput
  serverName: String
  serverType: ServerTypeCreateNestedOneWithoutInventoryInput
  status: EStatusOfProductInInventory
}

input InventoryListRelationFilter {
  every: InventoryWhereInput
  none: InventoryWhereInput
  some: InventoryWhereInput
}

type InventoryMaxAggregateOutputType {
  amount: Int
  createdAt: DateTime
  dateOfReceive: DateTime
  historyOfPurchaseId: Int
  id: Int
  productId: Int
  serverId: Int
  serverName: String
  serverTypeId: Int
  status: EStatusOfProductInInventory
  userId: Int
}

input InventoryMaxOrderByAggregateInput {
  amount: SortOrder
  createdAt: SortOrder
  dateOfReceive: SortOrder
  historyOfPurchaseId: SortOrder
  id: SortOrder
  productId: SortOrder
  serverId: SortOrder
  serverName: SortOrder
  serverTypeId: SortOrder
  status: SortOrder
  userId: SortOrder
}

type InventoryMinAggregateOutputType {
  amount: Int
  createdAt: DateTime
  dateOfReceive: DateTime
  historyOfPurchaseId: Int
  id: Int
  productId: Int
  serverId: Int
  serverName: String
  serverTypeId: Int
  status: EStatusOfProductInInventory
  userId: Int
}

input InventoryMinOrderByAggregateInput {
  amount: SortOrder
  createdAt: SortOrder
  dateOfReceive: SortOrder
  historyOfPurchaseId: SortOrder
  id: SortOrder
  productId: SortOrder
  serverId: SortOrder
  serverName: SortOrder
  serverTypeId: SortOrder
  status: SortOrder
  userId: SortOrder
}

input InventoryOrderByRelationAggregateInput {
  _count: SortOrder
}

input InventoryOrderByWithAggregationInput {
  _avg: InventoryAvgOrderByAggregateInput
  _count: InventoryCountOrderByAggregateInput
  _max: InventoryMaxOrderByAggregateInput
  _min: InventoryMinOrderByAggregateInput
  _sum: InventorySumOrderByAggregateInput
  amount: SortOrder
  createdAt: SortOrder
  dateOfReceive: SortOrder
  historyOfPurchaseId: SortOrder
  id: SortOrder
  productId: SortOrder
  serverId: SortOrder
  serverName: SortOrder
  serverTypeId: SortOrder
  status: SortOrder
  userId: SortOrder
}

input InventoryOrderByWithRelationInput {
  amount: SortOrder
  createdAt: SortOrder
  dateOfReceive: SortOrder
  historyOfPurchaseId: SortOrder
  id: SortOrder
  product: ProductOrderByWithRelationInput
  productId: SortOrder
  purchase: PurchaseOrderByWithRelationInput
  server: ServerOrderByWithRelationInput
  serverId: SortOrder
  serverName: SortOrder
  serverType: ServerTypeOrderByWithRelationInput
  serverTypeId: SortOrder
  status: SortOrder
  user: UserOrderByWithRelationInput
  userId: SortOrder
}

enum InventoryScalarFieldEnum {
  amount
  createdAt
  dateOfReceive
  historyOfPurchaseId
  id
  productId
  serverId
  serverName
  serverTypeId
  status
  userId
}

input InventoryScalarWhereInput {
  AND: [InventoryScalarWhereInput]
  NOT: [InventoryScalarWhereInput]
  OR: [InventoryScalarWhereInput]
  amount: IntFilter
  createdAt: DateTimeFilter
  dateOfReceive: DateTimeNullableFilter
  historyOfPurchaseId: IntFilter
  id: IntFilter
  productId: IntFilter
  serverId: IntNullableFilter
  serverName: StringNullableFilter
  serverTypeId: IntNullableFilter
  status: EnumEStatusOfProductInInventoryFilter
  userId: IntFilter
}

input InventoryScalarWhereWithAggregatesInput {
  AND: [InventoryScalarWhereWithAggregatesInput]
  NOT: [InventoryScalarWhereWithAggregatesInput]
  OR: [InventoryScalarWhereWithAggregatesInput]
  amount: IntWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  dateOfReceive: DateTimeNullableWithAggregatesFilter
  historyOfPurchaseId: IntWithAggregatesFilter
  id: IntWithAggregatesFilter
  productId: IntWithAggregatesFilter
  serverId: IntNullableWithAggregatesFilter
  serverName: StringNullableWithAggregatesFilter
  serverTypeId: IntNullableWithAggregatesFilter
  status: EnumEStatusOfProductInInventoryWithAggregatesFilter
  userId: IntWithAggregatesFilter
}

type InventorySumAggregateOutputType {
  amount: Int
  historyOfPurchaseId: Int
  id: Int
  productId: Int
  serverId: Int
  serverTypeId: Int
  userId: Int
}

input InventorySumOrderByAggregateInput {
  amount: SortOrder
  historyOfPurchaseId: SortOrder
  id: SortOrder
  productId: SortOrder
  serverId: SortOrder
  serverTypeId: SortOrder
  userId: SortOrder
}

input InventoryUncheckedCreateInput {
  amount: Int!
  createdAt: DateTime
  dateOfReceive: DateTime
  historyOfPurchaseId: Int!
  id: Int
  productId: Int!
  serverId: Int
  serverName: String
  serverTypeId: Int
  status: EStatusOfProductInInventory
  userId: Int!
}

input InventoryUncheckedCreateNestedManyWithoutProductInput {
  connect: [InventoryWhereUniqueInput]
  connectOrCreate: [InventoryCreateOrConnectWithoutProductInput]
  create: [InventoryCreateWithoutProductInput]
  createMany: InventoryCreateManyProductInputEnvelope
}

input InventoryUncheckedCreateNestedManyWithoutPurchaseInput {
  connect: [InventoryWhereUniqueInput]
  connectOrCreate: [InventoryCreateOrConnectWithoutPurchaseInput]
  create: [InventoryCreateWithoutPurchaseInput]
  createMany: InventoryCreateManyPurchaseInputEnvelope
}

input InventoryUncheckedCreateNestedManyWithoutServerInput {
  connect: [InventoryWhereUniqueInput]
  connectOrCreate: [InventoryCreateOrConnectWithoutServerInput]
  create: [InventoryCreateWithoutServerInput]
  createMany: InventoryCreateManyServerInputEnvelope
}

input InventoryUncheckedCreateNestedManyWithoutServerTypeInput {
  connect: [InventoryWhereUniqueInput]
  connectOrCreate: [InventoryCreateOrConnectWithoutServerTypeInput]
  create: [InventoryCreateWithoutServerTypeInput]
  createMany: InventoryCreateManyServerTypeInputEnvelope
}

input InventoryUncheckedCreateNestedManyWithoutUserInput {
  connect: [InventoryWhereUniqueInput]
  connectOrCreate: [InventoryCreateOrConnectWithoutUserInput]
  create: [InventoryCreateWithoutUserInput]
  createMany: InventoryCreateManyUserInputEnvelope
}

input InventoryUncheckedCreateWithoutProductInput {
  amount: Int!
  createdAt: DateTime
  dateOfReceive: DateTime
  historyOfPurchaseId: Int!
  id: Int
  serverId: Int
  serverName: String
  serverTypeId: Int
  status: EStatusOfProductInInventory
  userId: Int!
}

input InventoryUncheckedCreateWithoutPurchaseInput {
  amount: Int!
  createdAt: DateTime
  dateOfReceive: DateTime
  id: Int
  productId: Int!
  serverId: Int
  serverName: String
  serverTypeId: Int
  status: EStatusOfProductInInventory
  userId: Int!
}

input InventoryUncheckedCreateWithoutServerInput {
  amount: Int!
  createdAt: DateTime
  dateOfReceive: DateTime
  historyOfPurchaseId: Int!
  id: Int
  productId: Int!
  serverName: String
  serverTypeId: Int
  status: EStatusOfProductInInventory
  userId: Int!
}

input InventoryUncheckedCreateWithoutServerTypeInput {
  amount: Int!
  createdAt: DateTime
  dateOfReceive: DateTime
  historyOfPurchaseId: Int!
  id: Int
  productId: Int!
  serverId: Int
  serverName: String
  status: EStatusOfProductInInventory
  userId: Int!
}

input InventoryUncheckedCreateWithoutUserInput {
  amount: Int!
  createdAt: DateTime
  dateOfReceive: DateTime
  historyOfPurchaseId: Int!
  id: Int
  productId: Int!
  serverId: Int
  serverName: String
  serverTypeId: Int
  status: EStatusOfProductInInventory
}

input InventoryUncheckedUpdateInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dateOfReceive: NullableDateTimeFieldUpdateOperationsInput
  historyOfPurchaseId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  productId: IntFieldUpdateOperationsInput
  serverId: NullableIntFieldUpdateOperationsInput
  serverName: NullableStringFieldUpdateOperationsInput
  serverTypeId: NullableIntFieldUpdateOperationsInput
  status: EnumEStatusOfProductInInventoryFieldUpdateOperationsInput
  userId: IntFieldUpdateOperationsInput
}

input InventoryUncheckedUpdateManyInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dateOfReceive: NullableDateTimeFieldUpdateOperationsInput
  historyOfPurchaseId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  productId: IntFieldUpdateOperationsInput
  serverId: NullableIntFieldUpdateOperationsInput
  serverName: NullableStringFieldUpdateOperationsInput
  serverTypeId: NullableIntFieldUpdateOperationsInput
  status: EnumEStatusOfProductInInventoryFieldUpdateOperationsInput
  userId: IntFieldUpdateOperationsInput
}

input InventoryUncheckedUpdateManyWithoutInventoryInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dateOfReceive: NullableDateTimeFieldUpdateOperationsInput
  historyOfPurchaseId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  productId: IntFieldUpdateOperationsInput
  serverId: NullableIntFieldUpdateOperationsInput
  serverName: NullableStringFieldUpdateOperationsInput
  serverTypeId: NullableIntFieldUpdateOperationsInput
  status: EnumEStatusOfProductInInventoryFieldUpdateOperationsInput
}

input InventoryUncheckedUpdateManyWithoutProductInput {
  connect: [InventoryWhereUniqueInput]
  connectOrCreate: [InventoryCreateOrConnectWithoutProductInput]
  create: [InventoryCreateWithoutProductInput]
  createMany: InventoryCreateManyProductInputEnvelope
  delete: [InventoryWhereUniqueInput]
  deleteMany: [InventoryScalarWhereInput]
  disconnect: [InventoryWhereUniqueInput]
  set: [InventoryWhereUniqueInput]
  update: [InventoryUpdateWithWhereUniqueWithoutProductInput]
  updateMany: [InventoryUpdateManyWithWhereWithoutProductInput]
  upsert: [InventoryUpsertWithWhereUniqueWithoutProductInput]
}

input InventoryUncheckedUpdateManyWithoutPurchaseInput {
  connect: [InventoryWhereUniqueInput]
  connectOrCreate: [InventoryCreateOrConnectWithoutPurchaseInput]
  create: [InventoryCreateWithoutPurchaseInput]
  createMany: InventoryCreateManyPurchaseInputEnvelope
  delete: [InventoryWhereUniqueInput]
  deleteMany: [InventoryScalarWhereInput]
  disconnect: [InventoryWhereUniqueInput]
  set: [InventoryWhereUniqueInput]
  update: [InventoryUpdateWithWhereUniqueWithoutPurchaseInput]
  updateMany: [InventoryUpdateManyWithWhereWithoutPurchaseInput]
  upsert: [InventoryUpsertWithWhereUniqueWithoutPurchaseInput]
}

input InventoryUncheckedUpdateManyWithoutServerInput {
  connect: [InventoryWhereUniqueInput]
  connectOrCreate: [InventoryCreateOrConnectWithoutServerInput]
  create: [InventoryCreateWithoutServerInput]
  createMany: InventoryCreateManyServerInputEnvelope
  delete: [InventoryWhereUniqueInput]
  deleteMany: [InventoryScalarWhereInput]
  disconnect: [InventoryWhereUniqueInput]
  set: [InventoryWhereUniqueInput]
  update: [InventoryUpdateWithWhereUniqueWithoutServerInput]
  updateMany: [InventoryUpdateManyWithWhereWithoutServerInput]
  upsert: [InventoryUpsertWithWhereUniqueWithoutServerInput]
}

input InventoryUncheckedUpdateManyWithoutServerTypeInput {
  connect: [InventoryWhereUniqueInput]
  connectOrCreate: [InventoryCreateOrConnectWithoutServerTypeInput]
  create: [InventoryCreateWithoutServerTypeInput]
  createMany: InventoryCreateManyServerTypeInputEnvelope
  delete: [InventoryWhereUniqueInput]
  deleteMany: [InventoryScalarWhereInput]
  disconnect: [InventoryWhereUniqueInput]
  set: [InventoryWhereUniqueInput]
  update: [InventoryUpdateWithWhereUniqueWithoutServerTypeInput]
  updateMany: [InventoryUpdateManyWithWhereWithoutServerTypeInput]
  upsert: [InventoryUpsertWithWhereUniqueWithoutServerTypeInput]
}

input InventoryUncheckedUpdateManyWithoutUserInput {
  connect: [InventoryWhereUniqueInput]
  connectOrCreate: [InventoryCreateOrConnectWithoutUserInput]
  create: [InventoryCreateWithoutUserInput]
  createMany: InventoryCreateManyUserInputEnvelope
  delete: [InventoryWhereUniqueInput]
  deleteMany: [InventoryScalarWhereInput]
  disconnect: [InventoryWhereUniqueInput]
  set: [InventoryWhereUniqueInput]
  update: [InventoryUpdateWithWhereUniqueWithoutUserInput]
  updateMany: [InventoryUpdateManyWithWhereWithoutUserInput]
  upsert: [InventoryUpsertWithWhereUniqueWithoutUserInput]
}

input InventoryUncheckedUpdateWithoutProductInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dateOfReceive: NullableDateTimeFieldUpdateOperationsInput
  historyOfPurchaseId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  serverId: NullableIntFieldUpdateOperationsInput
  serverName: NullableStringFieldUpdateOperationsInput
  serverTypeId: NullableIntFieldUpdateOperationsInput
  status: EnumEStatusOfProductInInventoryFieldUpdateOperationsInput
  userId: IntFieldUpdateOperationsInput
}

input InventoryUncheckedUpdateWithoutPurchaseInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dateOfReceive: NullableDateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  productId: IntFieldUpdateOperationsInput
  serverId: NullableIntFieldUpdateOperationsInput
  serverName: NullableStringFieldUpdateOperationsInput
  serverTypeId: NullableIntFieldUpdateOperationsInput
  status: EnumEStatusOfProductInInventoryFieldUpdateOperationsInput
  userId: IntFieldUpdateOperationsInput
}

input InventoryUncheckedUpdateWithoutServerInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dateOfReceive: NullableDateTimeFieldUpdateOperationsInput
  historyOfPurchaseId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  productId: IntFieldUpdateOperationsInput
  serverName: NullableStringFieldUpdateOperationsInput
  serverTypeId: NullableIntFieldUpdateOperationsInput
  status: EnumEStatusOfProductInInventoryFieldUpdateOperationsInput
  userId: IntFieldUpdateOperationsInput
}

input InventoryUncheckedUpdateWithoutServerTypeInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dateOfReceive: NullableDateTimeFieldUpdateOperationsInput
  historyOfPurchaseId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  productId: IntFieldUpdateOperationsInput
  serverId: NullableIntFieldUpdateOperationsInput
  serverName: NullableStringFieldUpdateOperationsInput
  status: EnumEStatusOfProductInInventoryFieldUpdateOperationsInput
  userId: IntFieldUpdateOperationsInput
}

input InventoryUncheckedUpdateWithoutUserInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dateOfReceive: NullableDateTimeFieldUpdateOperationsInput
  historyOfPurchaseId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  productId: IntFieldUpdateOperationsInput
  serverId: NullableIntFieldUpdateOperationsInput
  serverName: NullableStringFieldUpdateOperationsInput
  serverTypeId: NullableIntFieldUpdateOperationsInput
  status: EnumEStatusOfProductInInventoryFieldUpdateOperationsInput
}

input InventoryUpdateInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dateOfReceive: NullableDateTimeFieldUpdateOperationsInput
  product: ProductUpdateOneRequiredWithoutInventoryInput
  purchase: PurchaseUpdateOneRequiredWithoutInventoryInput
  server: ServerUpdateOneWithoutInventoryInput
  serverName: NullableStringFieldUpdateOperationsInput
  serverType: ServerTypeUpdateOneWithoutInventoryInput
  status: EnumEStatusOfProductInInventoryFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutInventoryInput
}

input InventoryUpdateManyMutationInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dateOfReceive: NullableDateTimeFieldUpdateOperationsInput
  serverName: NullableStringFieldUpdateOperationsInput
  status: EnumEStatusOfProductInInventoryFieldUpdateOperationsInput
}

input InventoryUpdateManyWithWhereWithoutProductInput {
  data: InventoryUncheckedUpdateManyWithoutInventoryInput!
  where: InventoryScalarWhereInput!
}

input InventoryUpdateManyWithWhereWithoutPurchaseInput {
  data: InventoryUncheckedUpdateManyWithoutInventoryInput!
  where: InventoryScalarWhereInput!
}

input InventoryUpdateManyWithWhereWithoutServerInput {
  data: InventoryUncheckedUpdateManyWithoutInventoryInput!
  where: InventoryScalarWhereInput!
}

input InventoryUpdateManyWithWhereWithoutServerTypeInput {
  data: InventoryUncheckedUpdateManyWithoutInventoryInput!
  where: InventoryScalarWhereInput!
}

input InventoryUpdateManyWithWhereWithoutUserInput {
  data: InventoryUncheckedUpdateManyWithoutInventoryInput!
  where: InventoryScalarWhereInput!
}

input InventoryUpdateManyWithoutProductInput {
  connect: [InventoryWhereUniqueInput]
  connectOrCreate: [InventoryCreateOrConnectWithoutProductInput]
  create: [InventoryCreateWithoutProductInput]
  createMany: InventoryCreateManyProductInputEnvelope
  delete: [InventoryWhereUniqueInput]
  deleteMany: [InventoryScalarWhereInput]
  disconnect: [InventoryWhereUniqueInput]
  set: [InventoryWhereUniqueInput]
  update: [InventoryUpdateWithWhereUniqueWithoutProductInput]
  updateMany: [InventoryUpdateManyWithWhereWithoutProductInput]
  upsert: [InventoryUpsertWithWhereUniqueWithoutProductInput]
}

input InventoryUpdateManyWithoutPurchaseInput {
  connect: [InventoryWhereUniqueInput]
  connectOrCreate: [InventoryCreateOrConnectWithoutPurchaseInput]
  create: [InventoryCreateWithoutPurchaseInput]
  createMany: InventoryCreateManyPurchaseInputEnvelope
  delete: [InventoryWhereUniqueInput]
  deleteMany: [InventoryScalarWhereInput]
  disconnect: [InventoryWhereUniqueInput]
  set: [InventoryWhereUniqueInput]
  update: [InventoryUpdateWithWhereUniqueWithoutPurchaseInput]
  updateMany: [InventoryUpdateManyWithWhereWithoutPurchaseInput]
  upsert: [InventoryUpsertWithWhereUniqueWithoutPurchaseInput]
}

input InventoryUpdateManyWithoutServerInput {
  connect: [InventoryWhereUniqueInput]
  connectOrCreate: [InventoryCreateOrConnectWithoutServerInput]
  create: [InventoryCreateWithoutServerInput]
  createMany: InventoryCreateManyServerInputEnvelope
  delete: [InventoryWhereUniqueInput]
  deleteMany: [InventoryScalarWhereInput]
  disconnect: [InventoryWhereUniqueInput]
  set: [InventoryWhereUniqueInput]
  update: [InventoryUpdateWithWhereUniqueWithoutServerInput]
  updateMany: [InventoryUpdateManyWithWhereWithoutServerInput]
  upsert: [InventoryUpsertWithWhereUniqueWithoutServerInput]
}

input InventoryUpdateManyWithoutServerTypeInput {
  connect: [InventoryWhereUniqueInput]
  connectOrCreate: [InventoryCreateOrConnectWithoutServerTypeInput]
  create: [InventoryCreateWithoutServerTypeInput]
  createMany: InventoryCreateManyServerTypeInputEnvelope
  delete: [InventoryWhereUniqueInput]
  deleteMany: [InventoryScalarWhereInput]
  disconnect: [InventoryWhereUniqueInput]
  set: [InventoryWhereUniqueInput]
  update: [InventoryUpdateWithWhereUniqueWithoutServerTypeInput]
  updateMany: [InventoryUpdateManyWithWhereWithoutServerTypeInput]
  upsert: [InventoryUpsertWithWhereUniqueWithoutServerTypeInput]
}

input InventoryUpdateManyWithoutUserInput {
  connect: [InventoryWhereUniqueInput]
  connectOrCreate: [InventoryCreateOrConnectWithoutUserInput]
  create: [InventoryCreateWithoutUserInput]
  createMany: InventoryCreateManyUserInputEnvelope
  delete: [InventoryWhereUniqueInput]
  deleteMany: [InventoryScalarWhereInput]
  disconnect: [InventoryWhereUniqueInput]
  set: [InventoryWhereUniqueInput]
  update: [InventoryUpdateWithWhereUniqueWithoutUserInput]
  updateMany: [InventoryUpdateManyWithWhereWithoutUserInput]
  upsert: [InventoryUpsertWithWhereUniqueWithoutUserInput]
}

input InventoryUpdateWithWhereUniqueWithoutProductInput {
  data: InventoryUncheckedUpdateWithoutProductInput!
  where: InventoryWhereUniqueInput!
}

input InventoryUpdateWithWhereUniqueWithoutPurchaseInput {
  data: InventoryUncheckedUpdateWithoutPurchaseInput!
  where: InventoryWhereUniqueInput!
}

input InventoryUpdateWithWhereUniqueWithoutServerInput {
  data: InventoryUncheckedUpdateWithoutServerInput!
  where: InventoryWhereUniqueInput!
}

input InventoryUpdateWithWhereUniqueWithoutServerTypeInput {
  data: InventoryUncheckedUpdateWithoutServerTypeInput!
  where: InventoryWhereUniqueInput!
}

input InventoryUpdateWithWhereUniqueWithoutUserInput {
  data: InventoryUncheckedUpdateWithoutUserInput!
  where: InventoryWhereUniqueInput!
}

input InventoryUpdateWithoutProductInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dateOfReceive: NullableDateTimeFieldUpdateOperationsInput
  purchase: PurchaseUpdateOneRequiredWithoutInventoryInput
  server: ServerUpdateOneWithoutInventoryInput
  serverName: NullableStringFieldUpdateOperationsInput
  serverType: ServerTypeUpdateOneWithoutInventoryInput
  status: EnumEStatusOfProductInInventoryFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutInventoryInput
}

input InventoryUpdateWithoutPurchaseInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dateOfReceive: NullableDateTimeFieldUpdateOperationsInput
  product: ProductUpdateOneRequiredWithoutInventoryInput
  server: ServerUpdateOneWithoutInventoryInput
  serverName: NullableStringFieldUpdateOperationsInput
  serverType: ServerTypeUpdateOneWithoutInventoryInput
  status: EnumEStatusOfProductInInventoryFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutInventoryInput
}

input InventoryUpdateWithoutServerInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dateOfReceive: NullableDateTimeFieldUpdateOperationsInput
  product: ProductUpdateOneRequiredWithoutInventoryInput
  purchase: PurchaseUpdateOneRequiredWithoutInventoryInput
  serverName: NullableStringFieldUpdateOperationsInput
  serverType: ServerTypeUpdateOneWithoutInventoryInput
  status: EnumEStatusOfProductInInventoryFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutInventoryInput
}

input InventoryUpdateWithoutServerTypeInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dateOfReceive: NullableDateTimeFieldUpdateOperationsInput
  product: ProductUpdateOneRequiredWithoutInventoryInput
  purchase: PurchaseUpdateOneRequiredWithoutInventoryInput
  server: ServerUpdateOneWithoutInventoryInput
  serverName: NullableStringFieldUpdateOperationsInput
  status: EnumEStatusOfProductInInventoryFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutInventoryInput
}

input InventoryUpdateWithoutUserInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dateOfReceive: NullableDateTimeFieldUpdateOperationsInput
  product: ProductUpdateOneRequiredWithoutInventoryInput
  purchase: PurchaseUpdateOneRequiredWithoutInventoryInput
  server: ServerUpdateOneWithoutInventoryInput
  serverName: NullableStringFieldUpdateOperationsInput
  serverType: ServerTypeUpdateOneWithoutInventoryInput
  status: EnumEStatusOfProductInInventoryFieldUpdateOperationsInput
}

input InventoryUpsertWithWhereUniqueWithoutProductInput {
  create: InventoryUncheckedCreateWithoutProductInput!
  update: InventoryUncheckedUpdateWithoutProductInput!
  where: InventoryWhereUniqueInput!
}

input InventoryUpsertWithWhereUniqueWithoutPurchaseInput {
  create: InventoryUncheckedCreateWithoutPurchaseInput!
  update: InventoryUncheckedUpdateWithoutPurchaseInput!
  where: InventoryWhereUniqueInput!
}

input InventoryUpsertWithWhereUniqueWithoutServerInput {
  create: InventoryUncheckedCreateWithoutServerInput!
  update: InventoryUncheckedUpdateWithoutServerInput!
  where: InventoryWhereUniqueInput!
}

input InventoryUpsertWithWhereUniqueWithoutServerTypeInput {
  create: InventoryUncheckedCreateWithoutServerTypeInput!
  update: InventoryUncheckedUpdateWithoutServerTypeInput!
  where: InventoryWhereUniqueInput!
}

input InventoryUpsertWithWhereUniqueWithoutUserInput {
  create: InventoryUncheckedCreateWithoutUserInput!
  update: InventoryUncheckedUpdateWithoutUserInput!
  where: InventoryWhereUniqueInput!
}

input InventoryWhereInput {
  AND: [InventoryWhereInput]
  NOT: [InventoryWhereInput]
  OR: [InventoryWhereInput]
  amount: IntFilter
  createdAt: DateTimeFilter
  dateOfReceive: DateTimeNullableFilter
  historyOfPurchaseId: IntFilter
  id: IntFilter
  product: ProductWhereInput
  productId: IntFilter
  purchase: PurchaseWhereInput
  server: ServerWhereInput
  serverId: IntNullableFilter
  serverName: StringNullableFilter
  serverType: ServerTypeWhereInput
  serverTypeId: IntNullableFilter
  status: EnumEStatusOfProductInInventoryFilter
  user: UserWhereInput
  userId: IntFilter
}

input InventoryWhereUniqueInput {
  id: Int
}

"""Json custom scalar type"""
scalar Json

enum JsonNullValueFilter {
  AnyNull
  DbNull
  JsonNull
}

input JsonNullableFilter {
  equals: Json
  not: Json
}

input JsonNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedJsonNullableFilter
  _min: NestedJsonNullableFilter
  equals: Json
  not: Json
}

enum KindEnum {
  enum
  object
  scalar
}

type Model {
  create: Boolean!
  delete: Boolean!
  displayFields: [String!]!
  fields: [Field!]!
  id: String!
  idField: String!
  name: String!
  update: Boolean!
}

type Mutation {
  createOneBaseSettings: baseSettings!
  createOneInventory(data: InventoryCreateInput!): Inventory!
  createOneProduct(data: ProductCreateInput!): Product!
  createOnePromocodes(data: PromocodesCreateInput!): Promocodes!
  createOnePurchase(data: PurchaseCreateInput!): Purchase!
  createOneServer(data: ServerCreateInput!): Server!
  createOneServerType(data: ServerTypeCreateInput!): ServerType!
  createOneToken(data: TokenCreateInput!): Token!
  createOneTransaction(data: TransactionCreateInput!): Transaction!
  createOneTransfers(data: TransfersCreateInput!): Transfers!
  createOneUrlSettings: urlSettings!
  createOneUser(data: UserCreateInput!): User!
  deleteManyBaseSettings: BatchPayload!
  deleteManyInventory(where: InventoryWhereInput): BatchPayload!
  deleteManyProduct(where: ProductWhereInput): BatchPayload!
  deleteManyPromocodes(where: PromocodesWhereInput): BatchPayload!
  deleteManyPurchase(where: PurchaseWhereInput): BatchPayload!
  deleteManyServer(where: ServerWhereInput): BatchPayload!
  deleteManyServerType(where: ServerTypeWhereInput): BatchPayload!
  deleteManyToken(where: TokenWhereInput): BatchPayload!
  deleteManyTransaction(where: TransactionWhereInput): BatchPayload!
  deleteManyTransfers(where: TransfersWhereInput): BatchPayload!
  deleteManyUrlSettings: BatchPayload!
  deleteManyUser(where: UserWhereInput): BatchPayload!
  deleteOneBaseSettings: baseSettings
  deleteOneInventory(where: InventoryWhereUniqueInput!): Inventory
  deleteOneProduct(where: ProductWhereUniqueInput!): Product
  deleteOnePromocodes(where: PromocodesWhereUniqueInput!): Promocodes
  deleteOnePurchase(where: PurchaseWhereUniqueInput!): Purchase
  deleteOneServer(where: ServerWhereUniqueInput!): Server
  deleteOneServerType(where: ServerTypeWhereUniqueInput!): ServerType
  deleteOneToken(where: TokenWhereUniqueInput!): Token
  deleteOneTransaction(where: TransactionWhereUniqueInput!): Transaction
  deleteOneTransfers(where: TransfersWhereUniqueInput!): Transfers
  deleteOneUrlSettings: urlSettings
  deleteOneUser(where: UserWhereUniqueInput!): User
  updateField(data: UpdateFieldInput!, id: String!, modelId: String!): Field!
  updateManyBaseSettings: BatchPayload!
  updateManyInventory(data: InventoryUpdateManyMutationInput!, where: InventoryWhereInput): BatchPayload!
  updateManyProduct(data: ProductUpdateManyMutationInput!, where: ProductWhereInput): BatchPayload!
  updateManyPromocodes(data: PromocodesUpdateManyMutationInput!, where: PromocodesWhereInput): BatchPayload!
  updateManyPurchase(data: PurchaseUpdateManyMutationInput!, where: PurchaseWhereInput): BatchPayload!
  updateManyServer(data: ServerUpdateManyMutationInput!, where: ServerWhereInput): BatchPayload!
  updateManyServerType(data: ServerTypeUpdateManyMutationInput!, where: ServerTypeWhereInput): BatchPayload!
  updateManyToken(data: TokenUpdateManyMutationInput!, where: TokenWhereInput): BatchPayload!
  updateManyTransaction(data: TransactionUpdateManyMutationInput!, where: TransactionWhereInput): BatchPayload!
  updateManyTransfers(data: TransfersUpdateManyMutationInput!, where: TransfersWhereInput): BatchPayload!
  updateManyUrlSettings: BatchPayload!
  updateManyUser(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  updateModel(data: UpdateModelInput!, id: String!): Model!
  updateOneBaseSettings: baseSettings!
  updateOneInventory(data: InventoryUpdateInput!, where: InventoryWhereUniqueInput!): Inventory!
  updateOneProduct(data: ProductUpdateInput!, where: ProductWhereUniqueInput!): Product!
  updateOnePromocodes(data: PromocodesUpdateInput!, where: PromocodesWhereUniqueInput!): Promocodes!
  updateOnePurchase(data: PurchaseUpdateInput!, where: PurchaseWhereUniqueInput!): Purchase!
  updateOneServer(data: ServerUpdateInput!, where: ServerWhereUniqueInput!): Server!
  updateOneServerType(data: ServerTypeUpdateInput!, where: ServerTypeWhereUniqueInput!): ServerType!
  updateOneToken(data: TokenUpdateInput!, where: TokenWhereUniqueInput!): Token!
  updateOneTransaction(data: TransactionUpdateInput!, where: TransactionWhereUniqueInput!): Transaction!
  updateOneTransfers(data: TransfersUpdateInput!, where: TransfersWhereUniqueInput!): Transfers!
  updateOneUrlSettings: urlSettings!
  updateOneUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User!
  upsertOneBaseSettings: baseSettings!
  upsertOneInventory(create: InventoryCreateInput!, update: InventoryUpdateInput!, where: InventoryWhereUniqueInput!): Inventory!
  upsertOneProduct(create: ProductCreateInput!, update: ProductUpdateInput!, where: ProductWhereUniqueInput!): Product!
  upsertOnePromocodes(create: PromocodesCreateInput!, update: PromocodesUpdateInput!, where: PromocodesWhereUniqueInput!): Promocodes!
  upsertOnePurchase(create: PurchaseCreateInput!, update: PurchaseUpdateInput!, where: PurchaseWhereUniqueInput!): Purchase!
  upsertOneServer(create: ServerCreateInput!, update: ServerUpdateInput!, where: ServerWhereUniqueInput!): Server!
  upsertOneServerType(create: ServerTypeCreateInput!, update: ServerTypeUpdateInput!, where: ServerTypeWhereUniqueInput!): ServerType!
  upsertOneToken(create: TokenCreateInput!, update: TokenUpdateInput!, where: TokenWhereUniqueInput!): Token!
  upsertOneTransaction(create: TransactionCreateInput!, update: TransactionUpdateInput!, where: TransactionWhereUniqueInput!): Transaction!
  upsertOneTransfers(create: TransfersCreateInput!, update: TransfersUpdateInput!, where: TransfersWhereUniqueInput!): Transfers!
  upsertOneUrlSettings: urlSettings!
  upsertOneUser(create: UserCreateInput!, update: UserUpdateInput!, where: UserWhereUniqueInput!): User!
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input NestedBoolNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedBoolNullableFilter
  _min: NestedBoolNullableFilter
  equals: Boolean
  not: NestedBoolNullableWithAggregatesFilter
}

input NestedBoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime]
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime]
}

input NestedDateTimeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedDateTimeNullableFilter
  _min: NestedDateTimeNullableFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableWithAggregatesFilter
  notIn: [DateTime]
}

input NestedDateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTime]
}

input NestedEnumEButtonColorFilter {
  equals: EButtonColor
  in: [EButtonColor]
  not: NestedEnumEButtonColorFilter
  notIn: [EButtonColor]
}

input NestedEnumEButtonColorWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumEButtonColorFilter
  _min: NestedEnumEButtonColorFilter
  equals: EButtonColor
  in: [EButtonColor]
  not: NestedEnumEButtonColorWithAggregatesFilter
  notIn: [EButtonColor]
}

input NestedEnumEStatusOfProductInInventoryFilter {
  equals: EStatusOfProductInInventory
  in: [EStatusOfProductInInventory]
  not: NestedEnumEStatusOfProductInInventoryFilter
  notIn: [EStatusOfProductInInventory]
}

input NestedEnumEStatusOfProductInInventoryWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumEStatusOfProductInInventoryFilter
  _min: NestedEnumEStatusOfProductInInventoryFilter
  equals: EStatusOfProductInInventory
  in: [EStatusOfProductInInventory]
  not: NestedEnumEStatusOfProductInInventoryWithAggregatesFilter
  notIn: [EStatusOfProductInInventory]
}

input NestedEnumEStatusOfRefillFilter {
  equals: EStatusOfRefill
  in: [EStatusOfRefill]
  not: NestedEnumEStatusOfRefillFilter
  notIn: [EStatusOfRefill]
}

input NestedEnumEStatusOfRefillWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumEStatusOfRefillFilter
  _min: NestedEnumEStatusOfRefillFilter
  equals: EStatusOfRefill
  in: [EStatusOfRefill]
  not: NestedEnumEStatusOfRefillWithAggregatesFilter
  notIn: [EStatusOfRefill]
}

input NestedEnumETypeOfProductFilter {
  equals: ETypeOfProduct
  in: [ETypeOfProduct]
  not: NestedEnumETypeOfProductFilter
  notIn: [ETypeOfProduct]
}

input NestedEnumETypeOfProductWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumETypeOfProductFilter
  _min: NestedEnumETypeOfProductFilter
  equals: ETypeOfProduct
  in: [ETypeOfProduct]
  not: NestedEnumETypeOfProductWithAggregatesFilter
  notIn: [ETypeOfProduct]
}

input NestedEnumETypeOfURLFilter {
  equals: ETypeOfURL
  in: [ETypeOfURL]
  not: NestedEnumETypeOfURLFilter
  notIn: [ETypeOfURL]
}

input NestedEnumETypeOfURLWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumETypeOfURLFilter
  _min: NestedEnumETypeOfURLFilter
  equals: ETypeOfURL
  in: [ETypeOfURL]
  not: NestedEnumETypeOfURLWithAggregatesFilter
  notIn: [ETypeOfURL]
}

input NestedEnumUSER_ROLEFilter {
  equals: USER_ROLE
  in: [USER_ROLE]
  not: NestedEnumUSER_ROLEFilter
  notIn: [USER_ROLE]
}

input NestedEnumUSER_ROLEWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumUSER_ROLEFilter
  _min: NestedEnumUSER_ROLEFilter
  equals: USER_ROLE
  in: [USER_ROLE]
  not: NestedEnumUSER_ROLEWithAggregatesFilter
  notIn: [USER_ROLE]
}

input NestedFloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float]
}

input NestedFloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  not: NestedFloatNullableFilter
  notIn: [Float]
}

input NestedFloatNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedFloatNullableFilter
  _min: NestedFloatNullableFilter
  _sum: NestedFloatNullableFilter
  equals: Float
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  not: NestedFloatNullableWithAggregatesFilter
  notIn: [Float]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int]
}

input NestedIntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedIntNullableFilter
  _min: NestedIntNullableFilter
  _sum: NestedIntNullableFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntNullableWithAggregatesFilter
  notIn: [Int]
}

input NestedIntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int]
}

input NestedJsonNullableFilter {
  equals: Json
  not: Json
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String]
  startsWith: String
}

input NestedStringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String]
  startsWith: String
}

input NestedStringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String]
  startsWith: String
}

input NullableBoolFieldUpdateOperationsInput {
  set: Boolean
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableFloatFieldUpdateOperationsInput {
  decrement: Float
  divide: Float
  increment: Float
  multiply: Float
  set: Float
}

input NullableIntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

enum NullableJsonNullValueInput {
  DbNull
  JsonNull
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Product {
  Inventory(cursor: InventoryWhereUniqueInput, distinct: InventoryScalarFieldEnum, orderBy: InventoryOrderByWithRelationInput, skip: Int, take: Int, where: InventoryWhereInput): [Inventory!]!
  Purchase(cursor: PurchaseWhereUniqueInput, distinct: PurchaseScalarFieldEnum, orderBy: PurchaseOrderByWithRelationInput, skip: Int, take: Int, where: PurchaseWhereInput): [Purchase!]!
  _count: ProductCountOutputType
  amount: Int!
  autoactivation: Boolean!
  blockSize: Int!
  buttonColor: EButtonColor!
  description: String
  discount: Float
  height: Int
  hidden: Boolean!
  iconButton: String
  id: Int!
  image: String
  isBackgroundColor: Boolean!
  isBackgroundImage: Boolean!
  isChangeAmount: Boolean!
  maxCountOfSale: Int
  name: String!
  nameID: String
  number: Int
  price: Int!
  productContent: Json
  saleDeadline: DateTime
  saleDiscount: Float
  serverType: ServerType
  serverTypeId: Int
  textButton: String
  type: ETypeOfProduct!
}

type ProductAvgAggregateOutputType {
  amount: Float
  blockSize: Float
  discount: Float
  height: Float
  id: Float
  maxCountOfSale: Float
  number: Float
  price: Float
  saleDiscount: Float
  serverTypeId: Float
}

input ProductAvgOrderByAggregateInput {
  amount: SortOrder
  blockSize: SortOrder
  discount: SortOrder
  height: SortOrder
  id: SortOrder
  maxCountOfSale: SortOrder
  number: SortOrder
  price: SortOrder
  saleDiscount: SortOrder
  serverTypeId: SortOrder
}

type ProductCountAggregateOutputType {
  _all: Int!
  amount: Int!
  autoactivation: Int!
  blockSize: Int!
  buttonColor: Int!
  description: Int!
  discount: Int!
  height: Int!
  hidden: Int!
  iconButton: Int!
  id: Int!
  image: Int!
  isBackgroundColor: Int!
  isBackgroundImage: Int!
  isChangeAmount: Int!
  maxCountOfSale: Int!
  name: Int!
  nameID: Int!
  number: Int!
  price: Int!
  productContent: Int!
  saleDeadline: Int!
  saleDiscount: Int!
  serverTypeId: Int!
  textButton: Int!
  type: Int!
}

input ProductCountOrderByAggregateInput {
  amount: SortOrder
  autoactivation: SortOrder
  blockSize: SortOrder
  buttonColor: SortOrder
  description: SortOrder
  discount: SortOrder
  height: SortOrder
  hidden: SortOrder
  iconButton: SortOrder
  id: SortOrder
  image: SortOrder
  isBackgroundColor: SortOrder
  isBackgroundImage: SortOrder
  isChangeAmount: SortOrder
  maxCountOfSale: SortOrder
  name: SortOrder
  nameID: SortOrder
  number: SortOrder
  price: SortOrder
  productContent: SortOrder
  saleDeadline: SortOrder
  saleDiscount: SortOrder
  serverTypeId: SortOrder
  textButton: SortOrder
  type: SortOrder
}

type ProductCountOutputType {
  Inventory: Int!
  Purchase: Int!
}

input ProductCreateInput {
  Inventory: InventoryCreateNestedManyWithoutProductInput
  Purchase: PurchaseCreateNestedManyWithoutProductInput
  amount: Int
  autoactivation: Boolean
  blockSize: Int
  buttonColor: EButtonColor
  description: String
  discount: Float
  height: Int
  hidden: Boolean
  iconButton: String
  image: String
  isBackgroundColor: Boolean
  isBackgroundImage: Boolean
  isChangeAmount: Boolean
  maxCountOfSale: Int
  name: String!
  nameID: String
  number: Int
  price: Int!
  productContent: Json
  saleDeadline: DateTime
  saleDiscount: Float
  serverType: ServerTypeCreateNestedOneWithoutProductInput
  textButton: String
  type: ETypeOfProduct
}

input ProductCreateManyInput {
  amount: Int
  autoactivation: Boolean
  blockSize: Int
  buttonColor: EButtonColor
  description: String
  discount: Float
  height: Int
  hidden: Boolean
  iconButton: String
  id: Int
  image: String
  isBackgroundColor: Boolean
  isBackgroundImage: Boolean
  isChangeAmount: Boolean
  maxCountOfSale: Int
  name: String!
  nameID: String
  number: Int
  price: Int!
  productContent: Json
  saleDeadline: DateTime
  saleDiscount: Float
  serverTypeId: Int
  textButton: String
  type: ETypeOfProduct
}

input ProductCreateManyServerTypeInput {
  amount: Int
  autoactivation: Boolean
  blockSize: Int
  buttonColor: EButtonColor
  description: String
  discount: Float
  height: Int
  hidden: Boolean
  iconButton: String
  id: Int
  image: String
  isBackgroundColor: Boolean
  isBackgroundImage: Boolean
  isChangeAmount: Boolean
  maxCountOfSale: Int
  name: String!
  nameID: String
  number: Int
  price: Int!
  productContent: Json
  saleDeadline: DateTime
  saleDiscount: Float
  textButton: String
  type: ETypeOfProduct
}

input ProductCreateManyServerTypeInputEnvelope {
  data: ProductCreateManyServerTypeInput!
  skipDuplicates: Boolean
}

input ProductCreateNestedManyWithoutServerTypeInput {
  connect: [ProductWhereUniqueInput]
  connectOrCreate: [ProductCreateOrConnectWithoutServerTypeInput]
  create: [ProductCreateWithoutServerTypeInput]
  createMany: ProductCreateManyServerTypeInputEnvelope
}

input ProductCreateNestedOneWithoutInventoryInput {
  connect: ProductWhereUniqueInput
  connectOrCreate: ProductCreateOrConnectWithoutInventoryInput
  create: ProductUncheckedCreateWithoutInventoryInput
}

input ProductCreateNestedOneWithoutPurchaseInput {
  connect: ProductWhereUniqueInput
  connectOrCreate: ProductCreateOrConnectWithoutPurchaseInput
  create: ProductUncheckedCreateWithoutPurchaseInput
}

input ProductCreateOrConnectWithoutInventoryInput {
  create: ProductUncheckedCreateWithoutInventoryInput!
  where: ProductWhereUniqueInput!
}

input ProductCreateOrConnectWithoutPurchaseInput {
  create: ProductUncheckedCreateWithoutPurchaseInput!
  where: ProductWhereUniqueInput!
}

input ProductCreateOrConnectWithoutServerTypeInput {
  create: ProductUncheckedCreateWithoutServerTypeInput!
  where: ProductWhereUniqueInput!
}

input ProductCreateWithoutInventoryInput {
  Purchase: PurchaseCreateNestedManyWithoutProductInput
  amount: Int
  autoactivation: Boolean
  blockSize: Int
  buttonColor: EButtonColor
  description: String
  discount: Float
  height: Int
  hidden: Boolean
  iconButton: String
  image: String
  isBackgroundColor: Boolean
  isBackgroundImage: Boolean
  isChangeAmount: Boolean
  maxCountOfSale: Int
  name: String!
  nameID: String
  number: Int
  price: Int!
  productContent: Json
  saleDeadline: DateTime
  saleDiscount: Float
  serverType: ServerTypeCreateNestedOneWithoutProductInput
  textButton: String
  type: ETypeOfProduct
}

input ProductCreateWithoutPurchaseInput {
  Inventory: InventoryCreateNestedManyWithoutProductInput
  amount: Int
  autoactivation: Boolean
  blockSize: Int
  buttonColor: EButtonColor
  description: String
  discount: Float
  height: Int
  hidden: Boolean
  iconButton: String
  image: String
  isBackgroundColor: Boolean
  isBackgroundImage: Boolean
  isChangeAmount: Boolean
  maxCountOfSale: Int
  name: String!
  nameID: String
  number: Int
  price: Int!
  productContent: Json
  saleDeadline: DateTime
  saleDiscount: Float
  serverType: ServerTypeCreateNestedOneWithoutProductInput
  textButton: String
  type: ETypeOfProduct
}

input ProductCreateWithoutServerTypeInput {
  Inventory: InventoryCreateNestedManyWithoutProductInput
  Purchase: PurchaseCreateNestedManyWithoutProductInput
  amount: Int
  autoactivation: Boolean
  blockSize: Int
  buttonColor: EButtonColor
  description: String
  discount: Float
  height: Int
  hidden: Boolean
  iconButton: String
  image: String
  isBackgroundColor: Boolean
  isBackgroundImage: Boolean
  isChangeAmount: Boolean
  maxCountOfSale: Int
  name: String!
  nameID: String
  number: Int
  price: Int!
  productContent: Json
  saleDeadline: DateTime
  saleDiscount: Float
  textButton: String
  type: ETypeOfProduct
}

input ProductListRelationFilter {
  every: ProductWhereInput
  none: ProductWhereInput
  some: ProductWhereInput
}

type ProductMaxAggregateOutputType {
  amount: Int
  autoactivation: Boolean
  blockSize: Int
  buttonColor: EButtonColor
  description: String
  discount: Float
  height: Int
  hidden: Boolean
  iconButton: String
  id: Int
  image: String
  isBackgroundColor: Boolean
  isBackgroundImage: Boolean
  isChangeAmount: Boolean
  maxCountOfSale: Int
  name: String
  nameID: String
  number: Int
  price: Int
  saleDeadline: DateTime
  saleDiscount: Float
  serverTypeId: Int
  textButton: String
  type: ETypeOfProduct
}

input ProductMaxOrderByAggregateInput {
  amount: SortOrder
  autoactivation: SortOrder
  blockSize: SortOrder
  buttonColor: SortOrder
  description: SortOrder
  discount: SortOrder
  height: SortOrder
  hidden: SortOrder
  iconButton: SortOrder
  id: SortOrder
  image: SortOrder
  isBackgroundColor: SortOrder
  isBackgroundImage: SortOrder
  isChangeAmount: SortOrder
  maxCountOfSale: SortOrder
  name: SortOrder
  nameID: SortOrder
  number: SortOrder
  price: SortOrder
  saleDeadline: SortOrder
  saleDiscount: SortOrder
  serverTypeId: SortOrder
  textButton: SortOrder
  type: SortOrder
}

type ProductMinAggregateOutputType {
  amount: Int
  autoactivation: Boolean
  blockSize: Int
  buttonColor: EButtonColor
  description: String
  discount: Float
  height: Int
  hidden: Boolean
  iconButton: String
  id: Int
  image: String
  isBackgroundColor: Boolean
  isBackgroundImage: Boolean
  isChangeAmount: Boolean
  maxCountOfSale: Int
  name: String
  nameID: String
  number: Int
  price: Int
  saleDeadline: DateTime
  saleDiscount: Float
  serverTypeId: Int
  textButton: String
  type: ETypeOfProduct
}

input ProductMinOrderByAggregateInput {
  amount: SortOrder
  autoactivation: SortOrder
  blockSize: SortOrder
  buttonColor: SortOrder
  description: SortOrder
  discount: SortOrder
  height: SortOrder
  hidden: SortOrder
  iconButton: SortOrder
  id: SortOrder
  image: SortOrder
  isBackgroundColor: SortOrder
  isBackgroundImage: SortOrder
  isChangeAmount: SortOrder
  maxCountOfSale: SortOrder
  name: SortOrder
  nameID: SortOrder
  number: SortOrder
  price: SortOrder
  saleDeadline: SortOrder
  saleDiscount: SortOrder
  serverTypeId: SortOrder
  textButton: SortOrder
  type: SortOrder
}

input ProductOrderByRelationAggregateInput {
  _count: SortOrder
}

input ProductOrderByWithAggregationInput {
  _avg: ProductAvgOrderByAggregateInput
  _count: ProductCountOrderByAggregateInput
  _max: ProductMaxOrderByAggregateInput
  _min: ProductMinOrderByAggregateInput
  _sum: ProductSumOrderByAggregateInput
  amount: SortOrder
  autoactivation: SortOrder
  blockSize: SortOrder
  buttonColor: SortOrder
  description: SortOrder
  discount: SortOrder
  height: SortOrder
  hidden: SortOrder
  iconButton: SortOrder
  id: SortOrder
  image: SortOrder
  isBackgroundColor: SortOrder
  isBackgroundImage: SortOrder
  isChangeAmount: SortOrder
  maxCountOfSale: SortOrder
  name: SortOrder
  nameID: SortOrder
  number: SortOrder
  price: SortOrder
  productContent: SortOrder
  saleDeadline: SortOrder
  saleDiscount: SortOrder
  serverTypeId: SortOrder
  textButton: SortOrder
  type: SortOrder
}

input ProductOrderByWithRelationInput {
  Inventory: InventoryOrderByRelationAggregateInput
  Purchase: PurchaseOrderByRelationAggregateInput
  amount: SortOrder
  autoactivation: SortOrder
  blockSize: SortOrder
  buttonColor: SortOrder
  description: SortOrder
  discount: SortOrder
  height: SortOrder
  hidden: SortOrder
  iconButton: SortOrder
  id: SortOrder
  image: SortOrder
  isBackgroundColor: SortOrder
  isBackgroundImage: SortOrder
  isChangeAmount: SortOrder
  maxCountOfSale: SortOrder
  name: SortOrder
  nameID: SortOrder
  number: SortOrder
  price: SortOrder
  productContent: SortOrder
  saleDeadline: SortOrder
  saleDiscount: SortOrder
  serverType: ServerTypeOrderByWithRelationInput
  serverTypeId: SortOrder
  textButton: SortOrder
  type: SortOrder
}

input ProductRelationFilter {
  is: ProductWhereInput
  isNot: ProductWhereInput
}

enum ProductScalarFieldEnum {
  amount
  autoactivation
  blockSize
  buttonColor
  description
  discount
  height
  hidden
  iconButton
  id
  image
  isBackgroundColor
  isBackgroundImage
  isChangeAmount
  maxCountOfSale
  name
  nameID
  number
  price
  productContent
  saleDeadline
  saleDiscount
  serverTypeId
  textButton
  type
}

input ProductScalarWhereInput {
  AND: [ProductScalarWhereInput]
  NOT: [ProductScalarWhereInput]
  OR: [ProductScalarWhereInput]
  amount: IntFilter
  autoactivation: BoolFilter
  blockSize: IntFilter
  buttonColor: EnumEButtonColorFilter
  description: StringNullableFilter
  discount: FloatNullableFilter
  height: IntNullableFilter
  hidden: BoolFilter
  iconButton: StringNullableFilter
  id: IntFilter
  image: StringNullableFilter
  isBackgroundColor: BoolFilter
  isBackgroundImage: BoolFilter
  isChangeAmount: BoolFilter
  maxCountOfSale: IntNullableFilter
  name: StringFilter
  nameID: StringNullableFilter
  number: IntNullableFilter
  price: IntFilter
  productContent: JsonNullableFilter
  saleDeadline: DateTimeNullableFilter
  saleDiscount: FloatNullableFilter
  serverTypeId: IntNullableFilter
  textButton: StringNullableFilter
  type: EnumETypeOfProductFilter
}

input ProductScalarWhereWithAggregatesInput {
  AND: [ProductScalarWhereWithAggregatesInput]
  NOT: [ProductScalarWhereWithAggregatesInput]
  OR: [ProductScalarWhereWithAggregatesInput]
  amount: IntWithAggregatesFilter
  autoactivation: BoolWithAggregatesFilter
  blockSize: IntWithAggregatesFilter
  buttonColor: EnumEButtonColorWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  discount: FloatNullableWithAggregatesFilter
  height: IntNullableWithAggregatesFilter
  hidden: BoolWithAggregatesFilter
  iconButton: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  isBackgroundColor: BoolWithAggregatesFilter
  isBackgroundImage: BoolWithAggregatesFilter
  isChangeAmount: BoolWithAggregatesFilter
  maxCountOfSale: IntNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
  nameID: StringNullableWithAggregatesFilter
  number: IntNullableWithAggregatesFilter
  price: IntWithAggregatesFilter
  productContent: JsonNullableWithAggregatesFilter
  saleDeadline: DateTimeNullableWithAggregatesFilter
  saleDiscount: FloatNullableWithAggregatesFilter
  serverTypeId: IntNullableWithAggregatesFilter
  textButton: StringNullableWithAggregatesFilter
  type: EnumETypeOfProductWithAggregatesFilter
}

type ProductSumAggregateOutputType {
  amount: Int
  blockSize: Int
  discount: Float
  height: Int
  id: Int
  maxCountOfSale: Int
  number: Int
  price: Int
  saleDiscount: Float
  serverTypeId: Int
}

input ProductSumOrderByAggregateInput {
  amount: SortOrder
  blockSize: SortOrder
  discount: SortOrder
  height: SortOrder
  id: SortOrder
  maxCountOfSale: SortOrder
  number: SortOrder
  price: SortOrder
  saleDiscount: SortOrder
  serverTypeId: SortOrder
}

input ProductUncheckedCreateInput {
  Inventory: InventoryUncheckedCreateNestedManyWithoutProductInput
  Purchase: PurchaseUncheckedCreateNestedManyWithoutProductInput
  amount: Int
  autoactivation: Boolean
  blockSize: Int
  buttonColor: EButtonColor
  description: String
  discount: Float
  height: Int
  hidden: Boolean
  iconButton: String
  id: Int
  image: String
  isBackgroundColor: Boolean
  isBackgroundImage: Boolean
  isChangeAmount: Boolean
  maxCountOfSale: Int
  name: String!
  nameID: String
  number: Int
  price: Int!
  productContent: Json
  saleDeadline: DateTime
  saleDiscount: Float
  serverTypeId: Int
  textButton: String
  type: ETypeOfProduct
}

input ProductUncheckedCreateNestedManyWithoutServerTypeInput {
  connect: [ProductWhereUniqueInput]
  connectOrCreate: [ProductCreateOrConnectWithoutServerTypeInput]
  create: [ProductCreateWithoutServerTypeInput]
  createMany: ProductCreateManyServerTypeInputEnvelope
}

input ProductUncheckedCreateWithoutInventoryInput {
  Purchase: PurchaseUncheckedCreateNestedManyWithoutProductInput
  amount: Int
  autoactivation: Boolean
  blockSize: Int
  buttonColor: EButtonColor
  description: String
  discount: Float
  height: Int
  hidden: Boolean
  iconButton: String
  id: Int
  image: String
  isBackgroundColor: Boolean
  isBackgroundImage: Boolean
  isChangeAmount: Boolean
  maxCountOfSale: Int
  name: String!
  nameID: String
  number: Int
  price: Int!
  productContent: Json
  saleDeadline: DateTime
  saleDiscount: Float
  serverTypeId: Int
  textButton: String
  type: ETypeOfProduct
}

input ProductUncheckedCreateWithoutPurchaseInput {
  Inventory: InventoryUncheckedCreateNestedManyWithoutProductInput
  amount: Int
  autoactivation: Boolean
  blockSize: Int
  buttonColor: EButtonColor
  description: String
  discount: Float
  height: Int
  hidden: Boolean
  iconButton: String
  id: Int
  image: String
  isBackgroundColor: Boolean
  isBackgroundImage: Boolean
  isChangeAmount: Boolean
  maxCountOfSale: Int
  name: String!
  nameID: String
  number: Int
  price: Int!
  productContent: Json
  saleDeadline: DateTime
  saleDiscount: Float
  serverTypeId: Int
  textButton: String
  type: ETypeOfProduct
}

input ProductUncheckedCreateWithoutServerTypeInput {
  Inventory: InventoryUncheckedCreateNestedManyWithoutProductInput
  Purchase: PurchaseUncheckedCreateNestedManyWithoutProductInput
  amount: Int
  autoactivation: Boolean
  blockSize: Int
  buttonColor: EButtonColor
  description: String
  discount: Float
  height: Int
  hidden: Boolean
  iconButton: String
  id: Int
  image: String
  isBackgroundColor: Boolean
  isBackgroundImage: Boolean
  isChangeAmount: Boolean
  maxCountOfSale: Int
  name: String!
  nameID: String
  number: Int
  price: Int!
  productContent: Json
  saleDeadline: DateTime
  saleDiscount: Float
  textButton: String
  type: ETypeOfProduct
}

input ProductUncheckedUpdateInput {
  Inventory: InventoryUncheckedUpdateManyWithoutProductInput
  Purchase: PurchaseUncheckedUpdateManyWithoutProductInput
  amount: IntFieldUpdateOperationsInput
  autoactivation: BoolFieldUpdateOperationsInput
  blockSize: IntFieldUpdateOperationsInput
  buttonColor: EnumEButtonColorFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  discount: NullableFloatFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  hidden: BoolFieldUpdateOperationsInput
  iconButton: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isBackgroundColor: BoolFieldUpdateOperationsInput
  isBackgroundImage: BoolFieldUpdateOperationsInput
  isChangeAmount: BoolFieldUpdateOperationsInput
  maxCountOfSale: NullableIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  nameID: NullableStringFieldUpdateOperationsInput
  number: NullableIntFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  productContent: Json
  saleDeadline: NullableDateTimeFieldUpdateOperationsInput
  saleDiscount: NullableFloatFieldUpdateOperationsInput
  serverTypeId: NullableIntFieldUpdateOperationsInput
  textButton: NullableStringFieldUpdateOperationsInput
  type: EnumETypeOfProductFieldUpdateOperationsInput
}

input ProductUncheckedUpdateManyInput {
  amount: IntFieldUpdateOperationsInput
  autoactivation: BoolFieldUpdateOperationsInput
  blockSize: IntFieldUpdateOperationsInput
  buttonColor: EnumEButtonColorFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  discount: NullableFloatFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  hidden: BoolFieldUpdateOperationsInput
  iconButton: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isBackgroundColor: BoolFieldUpdateOperationsInput
  isBackgroundImage: BoolFieldUpdateOperationsInput
  isChangeAmount: BoolFieldUpdateOperationsInput
  maxCountOfSale: NullableIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  nameID: NullableStringFieldUpdateOperationsInput
  number: NullableIntFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  productContent: Json
  saleDeadline: NullableDateTimeFieldUpdateOperationsInput
  saleDiscount: NullableFloatFieldUpdateOperationsInput
  serverTypeId: NullableIntFieldUpdateOperationsInput
  textButton: NullableStringFieldUpdateOperationsInput
  type: EnumETypeOfProductFieldUpdateOperationsInput
}

input ProductUncheckedUpdateManyWithoutProductInput {
  amount: IntFieldUpdateOperationsInput
  autoactivation: BoolFieldUpdateOperationsInput
  blockSize: IntFieldUpdateOperationsInput
  buttonColor: EnumEButtonColorFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  discount: NullableFloatFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  hidden: BoolFieldUpdateOperationsInput
  iconButton: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isBackgroundColor: BoolFieldUpdateOperationsInput
  isBackgroundImage: BoolFieldUpdateOperationsInput
  isChangeAmount: BoolFieldUpdateOperationsInput
  maxCountOfSale: NullableIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  nameID: NullableStringFieldUpdateOperationsInput
  number: NullableIntFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  productContent: Json
  saleDeadline: NullableDateTimeFieldUpdateOperationsInput
  saleDiscount: NullableFloatFieldUpdateOperationsInput
  textButton: NullableStringFieldUpdateOperationsInput
  type: EnumETypeOfProductFieldUpdateOperationsInput
}

input ProductUncheckedUpdateManyWithoutServerTypeInput {
  connect: [ProductWhereUniqueInput]
  connectOrCreate: [ProductCreateOrConnectWithoutServerTypeInput]
  create: [ProductCreateWithoutServerTypeInput]
  createMany: ProductCreateManyServerTypeInputEnvelope
  delete: [ProductWhereUniqueInput]
  deleteMany: [ProductScalarWhereInput]
  disconnect: [ProductWhereUniqueInput]
  set: [ProductWhereUniqueInput]
  update: [ProductUpdateWithWhereUniqueWithoutServerTypeInput]
  updateMany: [ProductUpdateManyWithWhereWithoutServerTypeInput]
  upsert: [ProductUpsertWithWhereUniqueWithoutServerTypeInput]
}

input ProductUncheckedUpdateWithoutInventoryInput {
  Purchase: PurchaseUncheckedUpdateManyWithoutProductInput
  amount: IntFieldUpdateOperationsInput
  autoactivation: BoolFieldUpdateOperationsInput
  blockSize: IntFieldUpdateOperationsInput
  buttonColor: EnumEButtonColorFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  discount: NullableFloatFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  hidden: BoolFieldUpdateOperationsInput
  iconButton: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isBackgroundColor: BoolFieldUpdateOperationsInput
  isBackgroundImage: BoolFieldUpdateOperationsInput
  isChangeAmount: BoolFieldUpdateOperationsInput
  maxCountOfSale: NullableIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  nameID: NullableStringFieldUpdateOperationsInput
  number: NullableIntFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  productContent: Json
  saleDeadline: NullableDateTimeFieldUpdateOperationsInput
  saleDiscount: NullableFloatFieldUpdateOperationsInput
  serverTypeId: NullableIntFieldUpdateOperationsInput
  textButton: NullableStringFieldUpdateOperationsInput
  type: EnumETypeOfProductFieldUpdateOperationsInput
}

input ProductUncheckedUpdateWithoutPurchaseInput {
  Inventory: InventoryUncheckedUpdateManyWithoutProductInput
  amount: IntFieldUpdateOperationsInput
  autoactivation: BoolFieldUpdateOperationsInput
  blockSize: IntFieldUpdateOperationsInput
  buttonColor: EnumEButtonColorFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  discount: NullableFloatFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  hidden: BoolFieldUpdateOperationsInput
  iconButton: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isBackgroundColor: BoolFieldUpdateOperationsInput
  isBackgroundImage: BoolFieldUpdateOperationsInput
  isChangeAmount: BoolFieldUpdateOperationsInput
  maxCountOfSale: NullableIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  nameID: NullableStringFieldUpdateOperationsInput
  number: NullableIntFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  productContent: Json
  saleDeadline: NullableDateTimeFieldUpdateOperationsInput
  saleDiscount: NullableFloatFieldUpdateOperationsInput
  serverTypeId: NullableIntFieldUpdateOperationsInput
  textButton: NullableStringFieldUpdateOperationsInput
  type: EnumETypeOfProductFieldUpdateOperationsInput
}

input ProductUncheckedUpdateWithoutServerTypeInput {
  Inventory: InventoryUncheckedUpdateManyWithoutProductInput
  Purchase: PurchaseUncheckedUpdateManyWithoutProductInput
  amount: IntFieldUpdateOperationsInput
  autoactivation: BoolFieldUpdateOperationsInput
  blockSize: IntFieldUpdateOperationsInput
  buttonColor: EnumEButtonColorFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  discount: NullableFloatFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  hidden: BoolFieldUpdateOperationsInput
  iconButton: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isBackgroundColor: BoolFieldUpdateOperationsInput
  isBackgroundImage: BoolFieldUpdateOperationsInput
  isChangeAmount: BoolFieldUpdateOperationsInput
  maxCountOfSale: NullableIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  nameID: NullableStringFieldUpdateOperationsInput
  number: NullableIntFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  productContent: Json
  saleDeadline: NullableDateTimeFieldUpdateOperationsInput
  saleDiscount: NullableFloatFieldUpdateOperationsInput
  textButton: NullableStringFieldUpdateOperationsInput
  type: EnumETypeOfProductFieldUpdateOperationsInput
}

input ProductUpdateInput {
  Inventory: InventoryUpdateManyWithoutProductInput
  Purchase: PurchaseUpdateManyWithoutProductInput
  amount: IntFieldUpdateOperationsInput
  autoactivation: BoolFieldUpdateOperationsInput
  blockSize: IntFieldUpdateOperationsInput
  buttonColor: EnumEButtonColorFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  discount: NullableFloatFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  hidden: BoolFieldUpdateOperationsInput
  iconButton: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isBackgroundColor: BoolFieldUpdateOperationsInput
  isBackgroundImage: BoolFieldUpdateOperationsInput
  isChangeAmount: BoolFieldUpdateOperationsInput
  maxCountOfSale: NullableIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  nameID: NullableStringFieldUpdateOperationsInput
  number: NullableIntFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  productContent: Json
  saleDeadline: NullableDateTimeFieldUpdateOperationsInput
  saleDiscount: NullableFloatFieldUpdateOperationsInput
  serverType: ServerTypeUpdateOneWithoutProductInput
  textButton: NullableStringFieldUpdateOperationsInput
  type: EnumETypeOfProductFieldUpdateOperationsInput
}

input ProductUpdateManyMutationInput {
  amount: IntFieldUpdateOperationsInput
  autoactivation: BoolFieldUpdateOperationsInput
  blockSize: IntFieldUpdateOperationsInput
  buttonColor: EnumEButtonColorFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  discount: NullableFloatFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  hidden: BoolFieldUpdateOperationsInput
  iconButton: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isBackgroundColor: BoolFieldUpdateOperationsInput
  isBackgroundImage: BoolFieldUpdateOperationsInput
  isChangeAmount: BoolFieldUpdateOperationsInput
  maxCountOfSale: NullableIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  nameID: NullableStringFieldUpdateOperationsInput
  number: NullableIntFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  productContent: Json
  saleDeadline: NullableDateTimeFieldUpdateOperationsInput
  saleDiscount: NullableFloatFieldUpdateOperationsInput
  textButton: NullableStringFieldUpdateOperationsInput
  type: EnumETypeOfProductFieldUpdateOperationsInput
}

input ProductUpdateManyWithWhereWithoutServerTypeInput {
  data: ProductUncheckedUpdateManyWithoutProductInput!
  where: ProductScalarWhereInput!
}

input ProductUpdateManyWithoutServerTypeInput {
  connect: [ProductWhereUniqueInput]
  connectOrCreate: [ProductCreateOrConnectWithoutServerTypeInput]
  create: [ProductCreateWithoutServerTypeInput]
  createMany: ProductCreateManyServerTypeInputEnvelope
  delete: [ProductWhereUniqueInput]
  deleteMany: [ProductScalarWhereInput]
  disconnect: [ProductWhereUniqueInput]
  set: [ProductWhereUniqueInput]
  update: [ProductUpdateWithWhereUniqueWithoutServerTypeInput]
  updateMany: [ProductUpdateManyWithWhereWithoutServerTypeInput]
  upsert: [ProductUpsertWithWhereUniqueWithoutServerTypeInput]
}

input ProductUpdateOneRequiredWithoutInventoryInput {
  connect: ProductWhereUniqueInput
  connectOrCreate: ProductCreateOrConnectWithoutInventoryInput
  create: ProductUncheckedCreateWithoutInventoryInput
  update: ProductUncheckedUpdateWithoutInventoryInput
  upsert: ProductUpsertWithoutInventoryInput
}

input ProductUpdateOneRequiredWithoutPurchaseInput {
  connect: ProductWhereUniqueInput
  connectOrCreate: ProductCreateOrConnectWithoutPurchaseInput
  create: ProductUncheckedCreateWithoutPurchaseInput
  update: ProductUncheckedUpdateWithoutPurchaseInput
  upsert: ProductUpsertWithoutPurchaseInput
}

input ProductUpdateWithWhereUniqueWithoutServerTypeInput {
  data: ProductUncheckedUpdateWithoutServerTypeInput!
  where: ProductWhereUniqueInput!
}

input ProductUpdateWithoutInventoryInput {
  Purchase: PurchaseUpdateManyWithoutProductInput
  amount: IntFieldUpdateOperationsInput
  autoactivation: BoolFieldUpdateOperationsInput
  blockSize: IntFieldUpdateOperationsInput
  buttonColor: EnumEButtonColorFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  discount: NullableFloatFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  hidden: BoolFieldUpdateOperationsInput
  iconButton: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isBackgroundColor: BoolFieldUpdateOperationsInput
  isBackgroundImage: BoolFieldUpdateOperationsInput
  isChangeAmount: BoolFieldUpdateOperationsInput
  maxCountOfSale: NullableIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  nameID: NullableStringFieldUpdateOperationsInput
  number: NullableIntFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  productContent: Json
  saleDeadline: NullableDateTimeFieldUpdateOperationsInput
  saleDiscount: NullableFloatFieldUpdateOperationsInput
  serverType: ServerTypeUpdateOneWithoutProductInput
  textButton: NullableStringFieldUpdateOperationsInput
  type: EnumETypeOfProductFieldUpdateOperationsInput
}

input ProductUpdateWithoutPurchaseInput {
  Inventory: InventoryUpdateManyWithoutProductInput
  amount: IntFieldUpdateOperationsInput
  autoactivation: BoolFieldUpdateOperationsInput
  blockSize: IntFieldUpdateOperationsInput
  buttonColor: EnumEButtonColorFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  discount: NullableFloatFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  hidden: BoolFieldUpdateOperationsInput
  iconButton: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isBackgroundColor: BoolFieldUpdateOperationsInput
  isBackgroundImage: BoolFieldUpdateOperationsInput
  isChangeAmount: BoolFieldUpdateOperationsInput
  maxCountOfSale: NullableIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  nameID: NullableStringFieldUpdateOperationsInput
  number: NullableIntFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  productContent: Json
  saleDeadline: NullableDateTimeFieldUpdateOperationsInput
  saleDiscount: NullableFloatFieldUpdateOperationsInput
  serverType: ServerTypeUpdateOneWithoutProductInput
  textButton: NullableStringFieldUpdateOperationsInput
  type: EnumETypeOfProductFieldUpdateOperationsInput
}

input ProductUpdateWithoutServerTypeInput {
  Inventory: InventoryUpdateManyWithoutProductInput
  Purchase: PurchaseUpdateManyWithoutProductInput
  amount: IntFieldUpdateOperationsInput
  autoactivation: BoolFieldUpdateOperationsInput
  blockSize: IntFieldUpdateOperationsInput
  buttonColor: EnumEButtonColorFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  discount: NullableFloatFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  hidden: BoolFieldUpdateOperationsInput
  iconButton: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isBackgroundColor: BoolFieldUpdateOperationsInput
  isBackgroundImage: BoolFieldUpdateOperationsInput
  isChangeAmount: BoolFieldUpdateOperationsInput
  maxCountOfSale: NullableIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  nameID: NullableStringFieldUpdateOperationsInput
  number: NullableIntFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  productContent: Json
  saleDeadline: NullableDateTimeFieldUpdateOperationsInput
  saleDiscount: NullableFloatFieldUpdateOperationsInput
  textButton: NullableStringFieldUpdateOperationsInput
  type: EnumETypeOfProductFieldUpdateOperationsInput
}

input ProductUpsertWithWhereUniqueWithoutServerTypeInput {
  create: ProductUncheckedCreateWithoutServerTypeInput!
  update: ProductUncheckedUpdateWithoutServerTypeInput!
  where: ProductWhereUniqueInput!
}

input ProductUpsertWithoutInventoryInput {
  create: ProductUncheckedCreateWithoutInventoryInput!
  update: ProductUncheckedUpdateWithoutInventoryInput!
}

input ProductUpsertWithoutPurchaseInput {
  create: ProductUncheckedCreateWithoutPurchaseInput!
  update: ProductUncheckedUpdateWithoutPurchaseInput!
}

input ProductWhereInput {
  AND: [ProductWhereInput]
  Inventory: InventoryListRelationFilter
  NOT: [ProductWhereInput]
  OR: [ProductWhereInput]
  Purchase: PurchaseListRelationFilter
  amount: IntFilter
  autoactivation: BoolFilter
  blockSize: IntFilter
  buttonColor: EnumEButtonColorFilter
  description: StringNullableFilter
  discount: FloatNullableFilter
  height: IntNullableFilter
  hidden: BoolFilter
  iconButton: StringNullableFilter
  id: IntFilter
  image: StringNullableFilter
  isBackgroundColor: BoolFilter
  isBackgroundImage: BoolFilter
  isChangeAmount: BoolFilter
  maxCountOfSale: IntNullableFilter
  name: StringFilter
  nameID: StringNullableFilter
  number: IntNullableFilter
  price: IntFilter
  productContent: JsonNullableFilter
  saleDeadline: DateTimeNullableFilter
  saleDiscount: FloatNullableFilter
  serverType: ServerTypeWhereInput
  serverTypeId: IntNullableFilter
  textButton: StringNullableFilter
  type: EnumETypeOfProductFilter
}

input ProductWhereUniqueInput {
  id: Int
}

type Promocodes {
  countOfActivation: Int!
  createdAt: DateTime!
  depositBonus: Int
  discountAmount: Int
  endDate: DateTime!
  groupId: String!
  id: Int!
  itemSet: String
  limitActivation: Int!
  name: String!
  plusBonusBalance: Int
  startDate: DateTime!
}

type PromocodesAvgAggregateOutputType {
  countOfActivation: Float
  depositBonus: Float
  discountAmount: Float
  id: Float
  limitActivation: Float
  plusBonusBalance: Float
}

input PromocodesAvgOrderByAggregateInput {
  countOfActivation: SortOrder
  depositBonus: SortOrder
  discountAmount: SortOrder
  id: SortOrder
  limitActivation: SortOrder
  plusBonusBalance: SortOrder
}

type PromocodesCountAggregateOutputType {
  _all: Int!
  countOfActivation: Int!
  createdAt: Int!
  depositBonus: Int!
  discountAmount: Int!
  endDate: Int!
  groupId: Int!
  id: Int!
  itemSet: Int!
  limitActivation: Int!
  name: Int!
  plusBonusBalance: Int!
  startDate: Int!
}

input PromocodesCountOrderByAggregateInput {
  countOfActivation: SortOrder
  createdAt: SortOrder
  depositBonus: SortOrder
  discountAmount: SortOrder
  endDate: SortOrder
  groupId: SortOrder
  id: SortOrder
  itemSet: SortOrder
  limitActivation: SortOrder
  name: SortOrder
  plusBonusBalance: SortOrder
  startDate: SortOrder
}

input PromocodesCreateInput {
  countOfActivation: Int!
  createdAt: DateTime
  depositBonus: Int
  discountAmount: Int
  endDate: DateTime!
  groupId: String
  itemSet: String
  limitActivation: Int!
  name: String!
  plusBonusBalance: Int
  startDate: DateTime!
}

input PromocodesCreateManyInput {
  countOfActivation: Int!
  createdAt: DateTime
  depositBonus: Int
  discountAmount: Int
  endDate: DateTime!
  groupId: String
  id: Int
  itemSet: String
  limitActivation: Int!
  name: String!
  plusBonusBalance: Int
  startDate: DateTime!
}

type PromocodesMaxAggregateOutputType {
  countOfActivation: Int
  createdAt: DateTime
  depositBonus: Int
  discountAmount: Int
  endDate: DateTime
  groupId: String
  id: Int
  itemSet: String
  limitActivation: Int
  name: String
  plusBonusBalance: Int
  startDate: DateTime
}

input PromocodesMaxOrderByAggregateInput {
  countOfActivation: SortOrder
  createdAt: SortOrder
  depositBonus: SortOrder
  discountAmount: SortOrder
  endDate: SortOrder
  groupId: SortOrder
  id: SortOrder
  itemSet: SortOrder
  limitActivation: SortOrder
  name: SortOrder
  plusBonusBalance: SortOrder
  startDate: SortOrder
}

type PromocodesMinAggregateOutputType {
  countOfActivation: Int
  createdAt: DateTime
  depositBonus: Int
  discountAmount: Int
  endDate: DateTime
  groupId: String
  id: Int
  itemSet: String
  limitActivation: Int
  name: String
  plusBonusBalance: Int
  startDate: DateTime
}

input PromocodesMinOrderByAggregateInput {
  countOfActivation: SortOrder
  createdAt: SortOrder
  depositBonus: SortOrder
  discountAmount: SortOrder
  endDate: SortOrder
  groupId: SortOrder
  id: SortOrder
  itemSet: SortOrder
  limitActivation: SortOrder
  name: SortOrder
  plusBonusBalance: SortOrder
  startDate: SortOrder
}

input PromocodesOrderByWithAggregationInput {
  _avg: PromocodesAvgOrderByAggregateInput
  _count: PromocodesCountOrderByAggregateInput
  _max: PromocodesMaxOrderByAggregateInput
  _min: PromocodesMinOrderByAggregateInput
  _sum: PromocodesSumOrderByAggregateInput
  countOfActivation: SortOrder
  createdAt: SortOrder
  depositBonus: SortOrder
  discountAmount: SortOrder
  endDate: SortOrder
  groupId: SortOrder
  id: SortOrder
  itemSet: SortOrder
  limitActivation: SortOrder
  name: SortOrder
  plusBonusBalance: SortOrder
  startDate: SortOrder
}

input PromocodesOrderByWithRelationInput {
  countOfActivation: SortOrder
  createdAt: SortOrder
  depositBonus: SortOrder
  discountAmount: SortOrder
  endDate: SortOrder
  groupId: SortOrder
  id: SortOrder
  itemSet: SortOrder
  limitActivation: SortOrder
  name: SortOrder
  plusBonusBalance: SortOrder
  startDate: SortOrder
}

enum PromocodesScalarFieldEnum {
  countOfActivation
  createdAt
  depositBonus
  discountAmount
  endDate
  groupId
  id
  itemSet
  limitActivation
  name
  plusBonusBalance
  startDate
}

input PromocodesScalarWhereWithAggregatesInput {
  AND: [PromocodesScalarWhereWithAggregatesInput]
  NOT: [PromocodesScalarWhereWithAggregatesInput]
  OR: [PromocodesScalarWhereWithAggregatesInput]
  countOfActivation: IntWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  depositBonus: IntNullableWithAggregatesFilter
  discountAmount: IntNullableWithAggregatesFilter
  endDate: DateTimeWithAggregatesFilter
  groupId: StringWithAggregatesFilter
  id: IntWithAggregatesFilter
  itemSet: StringNullableWithAggregatesFilter
  limitActivation: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
  plusBonusBalance: IntNullableWithAggregatesFilter
  startDate: DateTimeWithAggregatesFilter
}

type PromocodesSumAggregateOutputType {
  countOfActivation: Int
  depositBonus: Int
  discountAmount: Int
  id: Int
  limitActivation: Int
  plusBonusBalance: Int
}

input PromocodesSumOrderByAggregateInput {
  countOfActivation: SortOrder
  depositBonus: SortOrder
  discountAmount: SortOrder
  id: SortOrder
  limitActivation: SortOrder
  plusBonusBalance: SortOrder
}

input PromocodesUncheckedCreateInput {
  countOfActivation: Int!
  createdAt: DateTime
  depositBonus: Int
  discountAmount: Int
  endDate: DateTime!
  groupId: String
  id: Int
  itemSet: String
  limitActivation: Int!
  name: String!
  plusBonusBalance: Int
  startDate: DateTime!
}

input PromocodesUncheckedUpdateInput {
  countOfActivation: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  depositBonus: NullableIntFieldUpdateOperationsInput
  discountAmount: NullableIntFieldUpdateOperationsInput
  endDate: DateTimeFieldUpdateOperationsInput
  groupId: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  itemSet: NullableStringFieldUpdateOperationsInput
  limitActivation: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  plusBonusBalance: NullableIntFieldUpdateOperationsInput
  startDate: DateTimeFieldUpdateOperationsInput
}

input PromocodesUncheckedUpdateManyInput {
  countOfActivation: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  depositBonus: NullableIntFieldUpdateOperationsInput
  discountAmount: NullableIntFieldUpdateOperationsInput
  endDate: DateTimeFieldUpdateOperationsInput
  groupId: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  itemSet: NullableStringFieldUpdateOperationsInput
  limitActivation: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  plusBonusBalance: NullableIntFieldUpdateOperationsInput
  startDate: DateTimeFieldUpdateOperationsInput
}

input PromocodesUpdateInput {
  countOfActivation: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  depositBonus: NullableIntFieldUpdateOperationsInput
  discountAmount: NullableIntFieldUpdateOperationsInput
  endDate: DateTimeFieldUpdateOperationsInput
  groupId: StringFieldUpdateOperationsInput
  itemSet: NullableStringFieldUpdateOperationsInput
  limitActivation: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  plusBonusBalance: NullableIntFieldUpdateOperationsInput
  startDate: DateTimeFieldUpdateOperationsInput
}

input PromocodesUpdateManyMutationInput {
  countOfActivation: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  depositBonus: NullableIntFieldUpdateOperationsInput
  discountAmount: NullableIntFieldUpdateOperationsInput
  endDate: DateTimeFieldUpdateOperationsInput
  groupId: StringFieldUpdateOperationsInput
  itemSet: NullableStringFieldUpdateOperationsInput
  limitActivation: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  plusBonusBalance: NullableIntFieldUpdateOperationsInput
  startDate: DateTimeFieldUpdateOperationsInput
}

input PromocodesWhereInput {
  AND: [PromocodesWhereInput]
  NOT: [PromocodesWhereInput]
  OR: [PromocodesWhereInput]
  countOfActivation: IntFilter
  createdAt: DateTimeFilter
  depositBonus: IntNullableFilter
  discountAmount: IntNullableFilter
  endDate: DateTimeFilter
  groupId: StringFilter
  id: IntFilter
  itemSet: StringNullableFilter
  limitActivation: IntFilter
  name: StringFilter
  plusBonusBalance: IntNullableFilter
  startDate: DateTimeFilter
}

input PromocodesWhereUniqueInput {
  id: Int
}

type Purchase {
  Inventory(cursor: InventoryWhereUniqueInput, distinct: InventoryScalarFieldEnum, orderBy: InventoryOrderByWithRelationInput, skip: Int, take: Int, where: InventoryWhereInput): [Inventory!]!
  _count: PurchaseCountOutputType
  amount: Int!
  createdAt: DateTime!
  id: Int!
  lostBonusBalance: Int!
  lostMainBalance: Int!
  product: Product!
  productId: Int!
  refund: Boolean!
  user: User
  userId: Int
}

type PurchaseAvgAggregateOutputType {
  amount: Float
  id: Float
  lostBonusBalance: Float
  lostMainBalance: Float
  productId: Float
  userId: Float
}

input PurchaseAvgOrderByAggregateInput {
  amount: SortOrder
  id: SortOrder
  lostBonusBalance: SortOrder
  lostMainBalance: SortOrder
  productId: SortOrder
  userId: SortOrder
}

type PurchaseCountAggregateOutputType {
  _all: Int!
  amount: Int!
  createdAt: Int!
  id: Int!
  lostBonusBalance: Int!
  lostMainBalance: Int!
  productId: Int!
  refund: Int!
  userId: Int!
}

input PurchaseCountOrderByAggregateInput {
  amount: SortOrder
  createdAt: SortOrder
  id: SortOrder
  lostBonusBalance: SortOrder
  lostMainBalance: SortOrder
  productId: SortOrder
  refund: SortOrder
  userId: SortOrder
}

type PurchaseCountOutputType {
  Inventory: Int!
}

input PurchaseCreateInput {
  Inventory: InventoryCreateNestedManyWithoutPurchaseInput
  amount: Int!
  createdAt: DateTime
  lostBonusBalance: Int!
  lostMainBalance: Int!
  product: ProductCreateNestedOneWithoutPurchaseInput!
  refund: Boolean!
  user: UserCreateNestedOneWithoutPurchaseInput
}

input PurchaseCreateManyInput {
  amount: Int!
  createdAt: DateTime
  id: Int
  lostBonusBalance: Int!
  lostMainBalance: Int!
  productId: Int!
  refund: Boolean!
  userId: Int
}

input PurchaseCreateManyProductInput {
  amount: Int!
  createdAt: DateTime
  id: Int
  lostBonusBalance: Int!
  lostMainBalance: Int!
  refund: Boolean!
  userId: Int
}

input PurchaseCreateManyProductInputEnvelope {
  data: PurchaseCreateManyProductInput!
  skipDuplicates: Boolean
}

input PurchaseCreateManyUserInput {
  amount: Int!
  createdAt: DateTime
  id: Int
  lostBonusBalance: Int!
  lostMainBalance: Int!
  productId: Int!
  refund: Boolean!
}

input PurchaseCreateManyUserInputEnvelope {
  data: PurchaseCreateManyUserInput!
  skipDuplicates: Boolean
}

input PurchaseCreateNestedManyWithoutProductInput {
  connect: [PurchaseWhereUniqueInput]
  connectOrCreate: [PurchaseCreateOrConnectWithoutProductInput]
  create: [PurchaseCreateWithoutProductInput]
  createMany: PurchaseCreateManyProductInputEnvelope
}

input PurchaseCreateNestedManyWithoutUserInput {
  connect: [PurchaseWhereUniqueInput]
  connectOrCreate: [PurchaseCreateOrConnectWithoutUserInput]
  create: [PurchaseCreateWithoutUserInput]
  createMany: PurchaseCreateManyUserInputEnvelope
}

input PurchaseCreateNestedOneWithoutInventoryInput {
  connect: PurchaseWhereUniqueInput
  connectOrCreate: PurchaseCreateOrConnectWithoutInventoryInput
  create: PurchaseUncheckedCreateWithoutInventoryInput
}

input PurchaseCreateOrConnectWithoutInventoryInput {
  create: PurchaseUncheckedCreateWithoutInventoryInput!
  where: PurchaseWhereUniqueInput!
}

input PurchaseCreateOrConnectWithoutProductInput {
  create: PurchaseUncheckedCreateWithoutProductInput!
  where: PurchaseWhereUniqueInput!
}

input PurchaseCreateOrConnectWithoutUserInput {
  create: PurchaseUncheckedCreateWithoutUserInput!
  where: PurchaseWhereUniqueInput!
}

input PurchaseCreateWithoutInventoryInput {
  amount: Int!
  createdAt: DateTime
  lostBonusBalance: Int!
  lostMainBalance: Int!
  product: ProductCreateNestedOneWithoutPurchaseInput!
  refund: Boolean!
  user: UserCreateNestedOneWithoutPurchaseInput
}

input PurchaseCreateWithoutProductInput {
  Inventory: InventoryCreateNestedManyWithoutPurchaseInput
  amount: Int!
  createdAt: DateTime
  lostBonusBalance: Int!
  lostMainBalance: Int!
  refund: Boolean!
  user: UserCreateNestedOneWithoutPurchaseInput
}

input PurchaseCreateWithoutUserInput {
  Inventory: InventoryCreateNestedManyWithoutPurchaseInput
  amount: Int!
  createdAt: DateTime
  lostBonusBalance: Int!
  lostMainBalance: Int!
  product: ProductCreateNestedOneWithoutPurchaseInput!
  refund: Boolean!
}

input PurchaseListRelationFilter {
  every: PurchaseWhereInput
  none: PurchaseWhereInput
  some: PurchaseWhereInput
}

type PurchaseMaxAggregateOutputType {
  amount: Int
  createdAt: DateTime
  id: Int
  lostBonusBalance: Int
  lostMainBalance: Int
  productId: Int
  refund: Boolean
  userId: Int
}

input PurchaseMaxOrderByAggregateInput {
  amount: SortOrder
  createdAt: SortOrder
  id: SortOrder
  lostBonusBalance: SortOrder
  lostMainBalance: SortOrder
  productId: SortOrder
  refund: SortOrder
  userId: SortOrder
}

type PurchaseMinAggregateOutputType {
  amount: Int
  createdAt: DateTime
  id: Int
  lostBonusBalance: Int
  lostMainBalance: Int
  productId: Int
  refund: Boolean
  userId: Int
}

input PurchaseMinOrderByAggregateInput {
  amount: SortOrder
  createdAt: SortOrder
  id: SortOrder
  lostBonusBalance: SortOrder
  lostMainBalance: SortOrder
  productId: SortOrder
  refund: SortOrder
  userId: SortOrder
}

input PurchaseOrderByRelationAggregateInput {
  _count: SortOrder
}

input PurchaseOrderByWithAggregationInput {
  _avg: PurchaseAvgOrderByAggregateInput
  _count: PurchaseCountOrderByAggregateInput
  _max: PurchaseMaxOrderByAggregateInput
  _min: PurchaseMinOrderByAggregateInput
  _sum: PurchaseSumOrderByAggregateInput
  amount: SortOrder
  createdAt: SortOrder
  id: SortOrder
  lostBonusBalance: SortOrder
  lostMainBalance: SortOrder
  productId: SortOrder
  refund: SortOrder
  userId: SortOrder
}

input PurchaseOrderByWithRelationInput {
  Inventory: InventoryOrderByRelationAggregateInput
  amount: SortOrder
  createdAt: SortOrder
  id: SortOrder
  lostBonusBalance: SortOrder
  lostMainBalance: SortOrder
  product: ProductOrderByWithRelationInput
  productId: SortOrder
  refund: SortOrder
  user: UserOrderByWithRelationInput
  userId: SortOrder
}

input PurchaseRelationFilter {
  is: PurchaseWhereInput
  isNot: PurchaseWhereInput
}

enum PurchaseScalarFieldEnum {
  amount
  createdAt
  id
  lostBonusBalance
  lostMainBalance
  productId
  refund
  userId
}

input PurchaseScalarWhereInput {
  AND: [PurchaseScalarWhereInput]
  NOT: [PurchaseScalarWhereInput]
  OR: [PurchaseScalarWhereInput]
  amount: IntFilter
  createdAt: DateTimeFilter
  id: IntFilter
  lostBonusBalance: IntFilter
  lostMainBalance: IntFilter
  productId: IntFilter
  refund: BoolFilter
  userId: IntNullableFilter
}

input PurchaseScalarWhereWithAggregatesInput {
  AND: [PurchaseScalarWhereWithAggregatesInput]
  NOT: [PurchaseScalarWhereWithAggregatesInput]
  OR: [PurchaseScalarWhereWithAggregatesInput]
  amount: IntWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  lostBonusBalance: IntWithAggregatesFilter
  lostMainBalance: IntWithAggregatesFilter
  productId: IntWithAggregatesFilter
  refund: BoolWithAggregatesFilter
  userId: IntNullableWithAggregatesFilter
}

type PurchaseSumAggregateOutputType {
  amount: Int
  id: Int
  lostBonusBalance: Int
  lostMainBalance: Int
  productId: Int
  userId: Int
}

input PurchaseSumOrderByAggregateInput {
  amount: SortOrder
  id: SortOrder
  lostBonusBalance: SortOrder
  lostMainBalance: SortOrder
  productId: SortOrder
  userId: SortOrder
}

input PurchaseUncheckedCreateInput {
  Inventory: InventoryUncheckedCreateNestedManyWithoutPurchaseInput
  amount: Int!
  createdAt: DateTime
  id: Int
  lostBonusBalance: Int!
  lostMainBalance: Int!
  productId: Int!
  refund: Boolean!
  userId: Int
}

input PurchaseUncheckedCreateNestedManyWithoutProductInput {
  connect: [PurchaseWhereUniqueInput]
  connectOrCreate: [PurchaseCreateOrConnectWithoutProductInput]
  create: [PurchaseCreateWithoutProductInput]
  createMany: PurchaseCreateManyProductInputEnvelope
}

input PurchaseUncheckedCreateNestedManyWithoutUserInput {
  connect: [PurchaseWhereUniqueInput]
  connectOrCreate: [PurchaseCreateOrConnectWithoutUserInput]
  create: [PurchaseCreateWithoutUserInput]
  createMany: PurchaseCreateManyUserInputEnvelope
}

input PurchaseUncheckedCreateWithoutInventoryInput {
  amount: Int!
  createdAt: DateTime
  id: Int
  lostBonusBalance: Int!
  lostMainBalance: Int!
  productId: Int!
  refund: Boolean!
  userId: Int
}

input PurchaseUncheckedCreateWithoutProductInput {
  Inventory: InventoryUncheckedCreateNestedManyWithoutPurchaseInput
  amount: Int!
  createdAt: DateTime
  id: Int
  lostBonusBalance: Int!
  lostMainBalance: Int!
  refund: Boolean!
  userId: Int
}

input PurchaseUncheckedCreateWithoutUserInput {
  Inventory: InventoryUncheckedCreateNestedManyWithoutPurchaseInput
  amount: Int!
  createdAt: DateTime
  id: Int
  lostBonusBalance: Int!
  lostMainBalance: Int!
  productId: Int!
  refund: Boolean!
}

input PurchaseUncheckedUpdateInput {
  Inventory: InventoryUncheckedUpdateManyWithoutPurchaseInput
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  lostBonusBalance: IntFieldUpdateOperationsInput
  lostMainBalance: IntFieldUpdateOperationsInput
  productId: IntFieldUpdateOperationsInput
  refund: BoolFieldUpdateOperationsInput
  userId: NullableIntFieldUpdateOperationsInput
}

input PurchaseUncheckedUpdateManyInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  lostBonusBalance: IntFieldUpdateOperationsInput
  lostMainBalance: IntFieldUpdateOperationsInput
  productId: IntFieldUpdateOperationsInput
  refund: BoolFieldUpdateOperationsInput
  userId: NullableIntFieldUpdateOperationsInput
}

input PurchaseUncheckedUpdateManyWithoutProductInput {
  connect: [PurchaseWhereUniqueInput]
  connectOrCreate: [PurchaseCreateOrConnectWithoutProductInput]
  create: [PurchaseCreateWithoutProductInput]
  createMany: PurchaseCreateManyProductInputEnvelope
  delete: [PurchaseWhereUniqueInput]
  deleteMany: [PurchaseScalarWhereInput]
  disconnect: [PurchaseWhereUniqueInput]
  set: [PurchaseWhereUniqueInput]
  update: [PurchaseUpdateWithWhereUniqueWithoutProductInput]
  updateMany: [PurchaseUpdateManyWithWhereWithoutProductInput]
  upsert: [PurchaseUpsertWithWhereUniqueWithoutProductInput]
}

input PurchaseUncheckedUpdateManyWithoutPurchaseInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  lostBonusBalance: IntFieldUpdateOperationsInput
  lostMainBalance: IntFieldUpdateOperationsInput
  productId: IntFieldUpdateOperationsInput
  refund: BoolFieldUpdateOperationsInput
}

input PurchaseUncheckedUpdateManyWithoutUserInput {
  connect: [PurchaseWhereUniqueInput]
  connectOrCreate: [PurchaseCreateOrConnectWithoutUserInput]
  create: [PurchaseCreateWithoutUserInput]
  createMany: PurchaseCreateManyUserInputEnvelope
  delete: [PurchaseWhereUniqueInput]
  deleteMany: [PurchaseScalarWhereInput]
  disconnect: [PurchaseWhereUniqueInput]
  set: [PurchaseWhereUniqueInput]
  update: [PurchaseUpdateWithWhereUniqueWithoutUserInput]
  updateMany: [PurchaseUpdateManyWithWhereWithoutUserInput]
  upsert: [PurchaseUpsertWithWhereUniqueWithoutUserInput]
}

input PurchaseUncheckedUpdateWithoutInventoryInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  lostBonusBalance: IntFieldUpdateOperationsInput
  lostMainBalance: IntFieldUpdateOperationsInput
  productId: IntFieldUpdateOperationsInput
  refund: BoolFieldUpdateOperationsInput
  userId: NullableIntFieldUpdateOperationsInput
}

input PurchaseUncheckedUpdateWithoutProductInput {
  Inventory: InventoryUncheckedUpdateManyWithoutPurchaseInput
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  lostBonusBalance: IntFieldUpdateOperationsInput
  lostMainBalance: IntFieldUpdateOperationsInput
  refund: BoolFieldUpdateOperationsInput
  userId: NullableIntFieldUpdateOperationsInput
}

input PurchaseUncheckedUpdateWithoutUserInput {
  Inventory: InventoryUncheckedUpdateManyWithoutPurchaseInput
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  lostBonusBalance: IntFieldUpdateOperationsInput
  lostMainBalance: IntFieldUpdateOperationsInput
  productId: IntFieldUpdateOperationsInput
  refund: BoolFieldUpdateOperationsInput
}

input PurchaseUpdateInput {
  Inventory: InventoryUpdateManyWithoutPurchaseInput
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  lostBonusBalance: IntFieldUpdateOperationsInput
  lostMainBalance: IntFieldUpdateOperationsInput
  product: ProductUpdateOneRequiredWithoutPurchaseInput
  refund: BoolFieldUpdateOperationsInput
  user: UserUpdateOneWithoutPurchaseInput
}

input PurchaseUpdateManyMutationInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  lostBonusBalance: IntFieldUpdateOperationsInput
  lostMainBalance: IntFieldUpdateOperationsInput
  refund: BoolFieldUpdateOperationsInput
}

input PurchaseUpdateManyWithWhereWithoutProductInput {
  data: PurchaseUncheckedUpdateManyWithoutPurchaseInput!
  where: PurchaseScalarWhereInput!
}

input PurchaseUpdateManyWithWhereWithoutUserInput {
  data: PurchaseUncheckedUpdateManyWithoutPurchaseInput!
  where: PurchaseScalarWhereInput!
}

input PurchaseUpdateManyWithoutProductInput {
  connect: [PurchaseWhereUniqueInput]
  connectOrCreate: [PurchaseCreateOrConnectWithoutProductInput]
  create: [PurchaseCreateWithoutProductInput]
  createMany: PurchaseCreateManyProductInputEnvelope
  delete: [PurchaseWhereUniqueInput]
  deleteMany: [PurchaseScalarWhereInput]
  disconnect: [PurchaseWhereUniqueInput]
  set: [PurchaseWhereUniqueInput]
  update: [PurchaseUpdateWithWhereUniqueWithoutProductInput]
  updateMany: [PurchaseUpdateManyWithWhereWithoutProductInput]
  upsert: [PurchaseUpsertWithWhereUniqueWithoutProductInput]
}

input PurchaseUpdateManyWithoutUserInput {
  connect: [PurchaseWhereUniqueInput]
  connectOrCreate: [PurchaseCreateOrConnectWithoutUserInput]
  create: [PurchaseCreateWithoutUserInput]
  createMany: PurchaseCreateManyUserInputEnvelope
  delete: [PurchaseWhereUniqueInput]
  deleteMany: [PurchaseScalarWhereInput]
  disconnect: [PurchaseWhereUniqueInput]
  set: [PurchaseWhereUniqueInput]
  update: [PurchaseUpdateWithWhereUniqueWithoutUserInput]
  updateMany: [PurchaseUpdateManyWithWhereWithoutUserInput]
  upsert: [PurchaseUpsertWithWhereUniqueWithoutUserInput]
}

input PurchaseUpdateOneRequiredWithoutInventoryInput {
  connect: PurchaseWhereUniqueInput
  connectOrCreate: PurchaseCreateOrConnectWithoutInventoryInput
  create: PurchaseUncheckedCreateWithoutInventoryInput
  update: PurchaseUncheckedUpdateWithoutInventoryInput
  upsert: PurchaseUpsertWithoutInventoryInput
}

input PurchaseUpdateWithWhereUniqueWithoutProductInput {
  data: PurchaseUncheckedUpdateWithoutProductInput!
  where: PurchaseWhereUniqueInput!
}

input PurchaseUpdateWithWhereUniqueWithoutUserInput {
  data: PurchaseUncheckedUpdateWithoutUserInput!
  where: PurchaseWhereUniqueInput!
}

input PurchaseUpdateWithoutInventoryInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  lostBonusBalance: IntFieldUpdateOperationsInput
  lostMainBalance: IntFieldUpdateOperationsInput
  product: ProductUpdateOneRequiredWithoutPurchaseInput
  refund: BoolFieldUpdateOperationsInput
  user: UserUpdateOneWithoutPurchaseInput
}

input PurchaseUpdateWithoutProductInput {
  Inventory: InventoryUpdateManyWithoutPurchaseInput
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  lostBonusBalance: IntFieldUpdateOperationsInput
  lostMainBalance: IntFieldUpdateOperationsInput
  refund: BoolFieldUpdateOperationsInput
  user: UserUpdateOneWithoutPurchaseInput
}

input PurchaseUpdateWithoutUserInput {
  Inventory: InventoryUpdateManyWithoutPurchaseInput
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  lostBonusBalance: IntFieldUpdateOperationsInput
  lostMainBalance: IntFieldUpdateOperationsInput
  product: ProductUpdateOneRequiredWithoutPurchaseInput
  refund: BoolFieldUpdateOperationsInput
}

input PurchaseUpsertWithWhereUniqueWithoutProductInput {
  create: PurchaseUncheckedCreateWithoutProductInput!
  update: PurchaseUncheckedUpdateWithoutProductInput!
  where: PurchaseWhereUniqueInput!
}

input PurchaseUpsertWithWhereUniqueWithoutUserInput {
  create: PurchaseUncheckedCreateWithoutUserInput!
  update: PurchaseUncheckedUpdateWithoutUserInput!
  where: PurchaseWhereUniqueInput!
}

input PurchaseUpsertWithoutInventoryInput {
  create: PurchaseUncheckedCreateWithoutInventoryInput!
  update: PurchaseUncheckedUpdateWithoutInventoryInput!
}

input PurchaseWhereInput {
  AND: [PurchaseWhereInput]
  Inventory: InventoryListRelationFilter
  NOT: [PurchaseWhereInput]
  OR: [PurchaseWhereInput]
  amount: IntFilter
  createdAt: DateTimeFilter
  id: IntFilter
  lostBonusBalance: IntFilter
  lostMainBalance: IntFilter
  product: ProductWhereInput
  productId: IntFilter
  refund: BoolFilter
  user: UserWhereInput
  userId: IntNullableFilter
}

input PurchaseWhereUniqueInput {
  id: Int
}

type Query {
  aggregateBaseSettings: AggregateBaseSettings
  aggregateInventory(cursor: InventoryWhereUniqueInput, orderBy: [InventoryOrderByWithRelationInput], skip: Int, take: Int, where: InventoryWhereInput): AggregateInventory
  aggregateProduct(cursor: ProductWhereUniqueInput, orderBy: [ProductOrderByWithRelationInput], skip: Int, take: Int, where: ProductWhereInput): AggregateProduct
  aggregatePromocodes(cursor: PromocodesWhereUniqueInput, orderBy: [PromocodesOrderByWithRelationInput], skip: Int, take: Int, where: PromocodesWhereInput): AggregatePromocodes
  aggregatePurchase(cursor: PurchaseWhereUniqueInput, orderBy: [PurchaseOrderByWithRelationInput], skip: Int, take: Int, where: PurchaseWhereInput): AggregatePurchase
  aggregateServer(cursor: ServerWhereUniqueInput, orderBy: [ServerOrderByWithRelationInput], skip: Int, take: Int, where: ServerWhereInput): AggregateServer
  aggregateServerType(cursor: ServerTypeWhereUniqueInput, orderBy: [ServerTypeOrderByWithRelationInput], skip: Int, take: Int, where: ServerTypeWhereInput): AggregateServerType
  aggregateToken(cursor: TokenWhereUniqueInput, orderBy: [TokenOrderByWithRelationInput], skip: Int, take: Int, where: TokenWhereInput): AggregateToken
  aggregateTransaction(cursor: TransactionWhereUniqueInput, orderBy: [TransactionOrderByWithRelationInput], skip: Int, take: Int, where: TransactionWhereInput): AggregateTransaction
  aggregateTransfers(cursor: TransfersWhereUniqueInput, orderBy: [TransfersOrderByWithRelationInput], skip: Int, take: Int, where: TransfersWhereInput): AggregateTransfers
  aggregateUrlSettings: AggregateUrlSettings
  aggregateUser(cursor: UserWhereUniqueInput, orderBy: [UserOrderByWithRelationInput], skip: Int, take: Int, where: UserWhereInput): AggregateUser
  findFirstBaseSettings: baseSettings
  findFirstInventory(cursor: InventoryWhereUniqueInput, distinct: [InventoryScalarFieldEnum], orderBy: [InventoryOrderByWithRelationInput], skip: Int, take: Int, where: InventoryWhereInput): Inventory
  findFirstProduct(cursor: ProductWhereUniqueInput, distinct: [ProductScalarFieldEnum], orderBy: [ProductOrderByWithRelationInput], skip: Int, take: Int, where: ProductWhereInput): Product
  findFirstPromocodes(cursor: PromocodesWhereUniqueInput, distinct: [PromocodesScalarFieldEnum], orderBy: [PromocodesOrderByWithRelationInput], skip: Int, take: Int, where: PromocodesWhereInput): Promocodes
  findFirstPurchase(cursor: PurchaseWhereUniqueInput, distinct: [PurchaseScalarFieldEnum], orderBy: [PurchaseOrderByWithRelationInput], skip: Int, take: Int, where: PurchaseWhereInput): Purchase
  findFirstServer(cursor: ServerWhereUniqueInput, distinct: [ServerScalarFieldEnum], orderBy: [ServerOrderByWithRelationInput], skip: Int, take: Int, where: ServerWhereInput): Server
  findFirstServerType(cursor: ServerTypeWhereUniqueInput, distinct: [ServerTypeScalarFieldEnum], orderBy: [ServerTypeOrderByWithRelationInput], skip: Int, take: Int, where: ServerTypeWhereInput): ServerType
  findFirstToken(cursor: TokenWhereUniqueInput, distinct: [TokenScalarFieldEnum], orderBy: [TokenOrderByWithRelationInput], skip: Int, take: Int, where: TokenWhereInput): Token
  findFirstTransaction(cursor: TransactionWhereUniqueInput, distinct: [TransactionScalarFieldEnum], orderBy: [TransactionOrderByWithRelationInput], skip: Int, take: Int, where: TransactionWhereInput): Transaction
  findFirstTransfers(cursor: TransfersWhereUniqueInput, distinct: [TransfersScalarFieldEnum], orderBy: [TransfersOrderByWithRelationInput], skip: Int, take: Int, where: TransfersWhereInput): Transfers
  findFirstUrlSettings: urlSettings
  findFirstUser(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum], orderBy: [UserOrderByWithRelationInput], skip: Int, take: Int, where: UserWhereInput): User
  findManyBaseSettings: [baseSettings!]!
  findManyBaseSettingsCount: Int!
  findManyInventory(cursor: InventoryWhereUniqueInput, distinct: [InventoryScalarFieldEnum], orderBy: [InventoryOrderByWithRelationInput], skip: Int, take: Int, where: InventoryWhereInput): [Inventory!]!
  findManyInventoryCount(cursor: InventoryWhereUniqueInput, distinct: [InventoryScalarFieldEnum], orderBy: [InventoryOrderByWithRelationInput], skip: Int, take: Int, where: InventoryWhereInput): Int!
  findManyProduct(cursor: ProductWhereUniqueInput, distinct: [ProductScalarFieldEnum], orderBy: [ProductOrderByWithRelationInput], skip: Int, take: Int, where: ProductWhereInput): [Product!]!
  findManyProductCount(cursor: ProductWhereUniqueInput, distinct: [ProductScalarFieldEnum], orderBy: [ProductOrderByWithRelationInput], skip: Int, take: Int, where: ProductWhereInput): Int!
  findManyPromocodes(cursor: PromocodesWhereUniqueInput, distinct: [PromocodesScalarFieldEnum], orderBy: [PromocodesOrderByWithRelationInput], skip: Int, take: Int, where: PromocodesWhereInput): [Promocodes!]!
  findManyPromocodesCount(cursor: PromocodesWhereUniqueInput, distinct: [PromocodesScalarFieldEnum], orderBy: [PromocodesOrderByWithRelationInput], skip: Int, take: Int, where: PromocodesWhereInput): Int!
  findManyPurchase(cursor: PurchaseWhereUniqueInput, distinct: [PurchaseScalarFieldEnum], orderBy: [PurchaseOrderByWithRelationInput], skip: Int, take: Int, where: PurchaseWhereInput): [Purchase!]!
  findManyPurchaseCount(cursor: PurchaseWhereUniqueInput, distinct: [PurchaseScalarFieldEnum], orderBy: [PurchaseOrderByWithRelationInput], skip: Int, take: Int, where: PurchaseWhereInput): Int!
  findManyServer(cursor: ServerWhereUniqueInput, distinct: [ServerScalarFieldEnum], orderBy: [ServerOrderByWithRelationInput], skip: Int, take: Int, where: ServerWhereInput): [Server!]!
  findManyServerCount(cursor: ServerWhereUniqueInput, distinct: [ServerScalarFieldEnum], orderBy: [ServerOrderByWithRelationInput], skip: Int, take: Int, where: ServerWhereInput): Int!
  findManyServerType(cursor: ServerTypeWhereUniqueInput, distinct: [ServerTypeScalarFieldEnum], orderBy: [ServerTypeOrderByWithRelationInput], skip: Int, take: Int, where: ServerTypeWhereInput): [ServerType!]!
  findManyServerTypeCount(cursor: ServerTypeWhereUniqueInput, distinct: [ServerTypeScalarFieldEnum], orderBy: [ServerTypeOrderByWithRelationInput], skip: Int, take: Int, where: ServerTypeWhereInput): Int!
  findManyToken(cursor: TokenWhereUniqueInput, distinct: [TokenScalarFieldEnum], orderBy: [TokenOrderByWithRelationInput], skip: Int, take: Int, where: TokenWhereInput): [Token!]!
  findManyTokenCount(cursor: TokenWhereUniqueInput, distinct: [TokenScalarFieldEnum], orderBy: [TokenOrderByWithRelationInput], skip: Int, take: Int, where: TokenWhereInput): Int!
  findManyTransaction(cursor: TransactionWhereUniqueInput, distinct: [TransactionScalarFieldEnum], orderBy: [TransactionOrderByWithRelationInput], skip: Int, take: Int, where: TransactionWhereInput): [Transaction!]!
  findManyTransactionCount(cursor: TransactionWhereUniqueInput, distinct: [TransactionScalarFieldEnum], orderBy: [TransactionOrderByWithRelationInput], skip: Int, take: Int, where: TransactionWhereInput): Int!
  findManyTransfers(cursor: TransfersWhereUniqueInput, distinct: [TransfersScalarFieldEnum], orderBy: [TransfersOrderByWithRelationInput], skip: Int, take: Int, where: TransfersWhereInput): [Transfers!]!
  findManyTransfersCount(cursor: TransfersWhereUniqueInput, distinct: [TransfersScalarFieldEnum], orderBy: [TransfersOrderByWithRelationInput], skip: Int, take: Int, where: TransfersWhereInput): Int!
  findManyUrlSettings: [urlSettings!]!
  findManyUrlSettingsCount: Int!
  findManyUser(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum], orderBy: [UserOrderByWithRelationInput], skip: Int, take: Int, where: UserWhereInput): [User!]!
  findManyUserCount(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum], orderBy: [UserOrderByWithRelationInput], skip: Int, take: Int, where: UserWhereInput): Int!
  findUniqueBaseSettings: baseSettings
  findUniqueInventory(where: InventoryWhereUniqueInput!): Inventory
  findUniqueProduct(where: ProductWhereUniqueInput!): Product
  findUniquePromocodes(where: PromocodesWhereUniqueInput!): Promocodes
  findUniquePurchase(where: PurchaseWhereUniqueInput!): Purchase
  findUniqueServer(where: ServerWhereUniqueInput!): Server
  findUniqueServerType(where: ServerTypeWhereUniqueInput!): ServerType
  findUniqueToken(where: TokenWhereUniqueInput!): Token
  findUniqueTransaction(where: TransactionWhereUniqueInput!): Transaction
  findUniqueTransfers(where: TransfersWhereUniqueInput!): Transfers
  findUniqueUrlSettings: urlSettings
  findUniqueUser(where: UserWhereUniqueInput!): User
  getSchema: Schema!
}

type Schema {
  enums: [Enum!]!
  models: [Model!]!
}

type Server {
  IP: String!
  Inventory(cursor: InventoryWhereUniqueInput, distinct: InventoryScalarFieldEnum, orderBy: InventoryOrderByWithRelationInput, skip: Int, take: Int, where: InventoryWhereInput): [Inventory!]!
  _count: ServerCountOutputType
  apiKey: String!
  id: Int!
  name: String!
  port: String!
  serverID: Int!
  serverTypeId: Int!
  typeOfSever: ServerType!
}

type ServerAvgAggregateOutputType {
  id: Float
  serverID: Float
  serverTypeId: Float
}

input ServerAvgOrderByAggregateInput {
  id: SortOrder
  serverID: SortOrder
  serverTypeId: SortOrder
}

type ServerCountAggregateOutputType {
  IP: Int!
  _all: Int!
  apiKey: Int!
  id: Int!
  name: Int!
  port: Int!
  serverID: Int!
  serverTypeId: Int!
}

input ServerCountOrderByAggregateInput {
  IP: SortOrder
  apiKey: SortOrder
  id: SortOrder
  name: SortOrder
  port: SortOrder
  serverID: SortOrder
  serverTypeId: SortOrder
}

type ServerCountOutputType {
  Inventory: Int!
}

input ServerCreateInput {
  IP: String!
  Inventory: InventoryCreateNestedManyWithoutServerInput
  apiKey: String!
  name: String
  port: String!
  serverID: Int!
  typeOfSever: ServerTypeCreateNestedOneWithoutServerInput!
}

input ServerCreateManyInput {
  IP: String!
  apiKey: String!
  id: Int
  name: String
  port: String!
  serverID: Int!
  serverTypeId: Int!
}

input ServerCreateManyTypeOfSeverInput {
  IP: String!
  apiKey: String!
  id: Int
  name: String
  port: String!
  serverID: Int!
}

input ServerCreateManyTypeOfSeverInputEnvelope {
  data: ServerCreateManyTypeOfSeverInput!
  skipDuplicates: Boolean
}

input ServerCreateNestedManyWithoutTypeOfSeverInput {
  connect: [ServerWhereUniqueInput]
  connectOrCreate: [ServerCreateOrConnectWithoutTypeOfSeverInput]
  create: [ServerCreateWithoutTypeOfSeverInput]
  createMany: ServerCreateManyTypeOfSeverInputEnvelope
}

input ServerCreateNestedOneWithoutInventoryInput {
  connect: ServerWhereUniqueInput
  connectOrCreate: ServerCreateOrConnectWithoutInventoryInput
  create: ServerUncheckedCreateWithoutInventoryInput
}

input ServerCreateOrConnectWithoutInventoryInput {
  create: ServerUncheckedCreateWithoutInventoryInput!
  where: ServerWhereUniqueInput!
}

input ServerCreateOrConnectWithoutTypeOfSeverInput {
  create: ServerUncheckedCreateWithoutTypeOfSeverInput!
  where: ServerWhereUniqueInput!
}

input ServerCreateWithoutInventoryInput {
  IP: String!
  apiKey: String!
  name: String
  port: String!
  serverID: Int!
  typeOfSever: ServerTypeCreateNestedOneWithoutServerInput!
}

input ServerCreateWithoutTypeOfSeverInput {
  IP: String!
  Inventory: InventoryCreateNestedManyWithoutServerInput
  apiKey: String!
  name: String
  port: String!
  serverID: Int!
}

input ServerListRelationFilter {
  every: ServerWhereInput
  none: ServerWhereInput
  some: ServerWhereInput
}

type ServerMaxAggregateOutputType {
  IP: String
  apiKey: String
  id: Int
  name: String
  port: String
  serverID: Int
  serverTypeId: Int
}

input ServerMaxOrderByAggregateInput {
  IP: SortOrder
  apiKey: SortOrder
  id: SortOrder
  name: SortOrder
  port: SortOrder
  serverID: SortOrder
  serverTypeId: SortOrder
}

type ServerMinAggregateOutputType {
  IP: String
  apiKey: String
  id: Int
  name: String
  port: String
  serverID: Int
  serverTypeId: Int
}

input ServerMinOrderByAggregateInput {
  IP: SortOrder
  apiKey: SortOrder
  id: SortOrder
  name: SortOrder
  port: SortOrder
  serverID: SortOrder
  serverTypeId: SortOrder
}

input ServerOrderByRelationAggregateInput {
  _count: SortOrder
}

input ServerOrderByWithAggregationInput {
  IP: SortOrder
  _avg: ServerAvgOrderByAggregateInput
  _count: ServerCountOrderByAggregateInput
  _max: ServerMaxOrderByAggregateInput
  _min: ServerMinOrderByAggregateInput
  _sum: ServerSumOrderByAggregateInput
  apiKey: SortOrder
  id: SortOrder
  name: SortOrder
  port: SortOrder
  serverID: SortOrder
  serverTypeId: SortOrder
}

input ServerOrderByWithRelationInput {
  IP: SortOrder
  Inventory: InventoryOrderByRelationAggregateInput
  apiKey: SortOrder
  id: SortOrder
  name: SortOrder
  port: SortOrder
  serverID: SortOrder
  serverTypeId: SortOrder
  typeOfSever: ServerTypeOrderByWithRelationInput
}

input ServerRelationFilter {
  is: ServerWhereInput
  isNot: ServerWhereInput
}

enum ServerScalarFieldEnum {
  IP
  apiKey
  id
  name
  port
  serverID
  serverTypeId
}

input ServerScalarWhereInput {
  AND: [ServerScalarWhereInput]
  IP: StringFilter
  NOT: [ServerScalarWhereInput]
  OR: [ServerScalarWhereInput]
  apiKey: StringFilter
  id: IntFilter
  name: StringFilter
  port: StringFilter
  serverID: IntFilter
  serverTypeId: IntFilter
}

input ServerScalarWhereWithAggregatesInput {
  AND: [ServerScalarWhereWithAggregatesInput]
  IP: StringWithAggregatesFilter
  NOT: [ServerScalarWhereWithAggregatesInput]
  OR: [ServerScalarWhereWithAggregatesInput]
  apiKey: StringWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
  port: StringWithAggregatesFilter
  serverID: IntWithAggregatesFilter
  serverTypeId: IntWithAggregatesFilter
}

type ServerSumAggregateOutputType {
  id: Int
  serverID: Int
  serverTypeId: Int
}

input ServerSumOrderByAggregateInput {
  id: SortOrder
  serverID: SortOrder
  serverTypeId: SortOrder
}

type ServerType {
  Inventory(cursor: InventoryWhereUniqueInput, distinct: InventoryScalarFieldEnum, orderBy: InventoryOrderByWithRelationInput, skip: Int, take: Int, where: InventoryWhereInput): [Inventory!]!
  Product(cursor: ProductWhereUniqueInput, distinct: ProductScalarFieldEnum, orderBy: ProductOrderByWithRelationInput, skip: Int, take: Int, where: ProductWhereInput): [Product!]!
  Server(cursor: ServerWhereUniqueInput, distinct: ServerScalarFieldEnum, orderBy: ServerOrderByWithRelationInput, skip: Int, take: Int, where: ServerWhereInput): [Server!]!
  _count: ServerTypeCountOutputType
  description: String!
  hidden: Boolean!
  id: Int!
  name: String!
  number: Int!
}

type ServerTypeAvgAggregateOutputType {
  id: Float
  number: Float
}

input ServerTypeAvgOrderByAggregateInput {
  id: SortOrder
  number: SortOrder
}

type ServerTypeCountAggregateOutputType {
  _all: Int!
  description: Int!
  hidden: Int!
  id: Int!
  name: Int!
  number: Int!
}

input ServerTypeCountOrderByAggregateInput {
  description: SortOrder
  hidden: SortOrder
  id: SortOrder
  name: SortOrder
  number: SortOrder
}

type ServerTypeCountOutputType {
  Inventory: Int!
  Product: Int!
  Server: Int!
}

input ServerTypeCreateInput {
  Inventory: InventoryCreateNestedManyWithoutServerTypeInput
  Product: ProductCreateNestedManyWithoutServerTypeInput
  Server: ServerCreateNestedManyWithoutTypeOfSeverInput
  description: String!
  hidden: Boolean
  name: String!
  number: Int!
}

input ServerTypeCreateManyInput {
  description: String!
  hidden: Boolean
  id: Int
  name: String!
  number: Int!
}

input ServerTypeCreateNestedOneWithoutInventoryInput {
  connect: ServerTypeWhereUniqueInput
  connectOrCreate: ServerTypeCreateOrConnectWithoutInventoryInput
  create: ServerTypeUncheckedCreateWithoutInventoryInput
}

input ServerTypeCreateNestedOneWithoutProductInput {
  connect: ServerTypeWhereUniqueInput
  connectOrCreate: ServerTypeCreateOrConnectWithoutProductInput
  create: ServerTypeUncheckedCreateWithoutProductInput
}

input ServerTypeCreateNestedOneWithoutServerInput {
  connect: ServerTypeWhereUniqueInput
  connectOrCreate: ServerTypeCreateOrConnectWithoutServerInput
  create: ServerTypeUncheckedCreateWithoutServerInput
}

input ServerTypeCreateOrConnectWithoutInventoryInput {
  create: ServerTypeUncheckedCreateWithoutInventoryInput!
  where: ServerTypeWhereUniqueInput!
}

input ServerTypeCreateOrConnectWithoutProductInput {
  create: ServerTypeUncheckedCreateWithoutProductInput!
  where: ServerTypeWhereUniqueInput!
}

input ServerTypeCreateOrConnectWithoutServerInput {
  create: ServerTypeUncheckedCreateWithoutServerInput!
  where: ServerTypeWhereUniqueInput!
}

input ServerTypeCreateWithoutInventoryInput {
  Product: ProductCreateNestedManyWithoutServerTypeInput
  Server: ServerCreateNestedManyWithoutTypeOfSeverInput
  description: String!
  hidden: Boolean
  name: String!
  number: Int!
}

input ServerTypeCreateWithoutProductInput {
  Inventory: InventoryCreateNestedManyWithoutServerTypeInput
  Server: ServerCreateNestedManyWithoutTypeOfSeverInput
  description: String!
  hidden: Boolean
  name: String!
  number: Int!
}

input ServerTypeCreateWithoutServerInput {
  Inventory: InventoryCreateNestedManyWithoutServerTypeInput
  Product: ProductCreateNestedManyWithoutServerTypeInput
  description: String!
  hidden: Boolean
  name: String!
  number: Int!
}

type ServerTypeMaxAggregateOutputType {
  description: String
  hidden: Boolean
  id: Int
  name: String
  number: Int
}

input ServerTypeMaxOrderByAggregateInput {
  description: SortOrder
  hidden: SortOrder
  id: SortOrder
  name: SortOrder
  number: SortOrder
}

type ServerTypeMinAggregateOutputType {
  description: String
  hidden: Boolean
  id: Int
  name: String
  number: Int
}

input ServerTypeMinOrderByAggregateInput {
  description: SortOrder
  hidden: SortOrder
  id: SortOrder
  name: SortOrder
  number: SortOrder
}

input ServerTypeOrderByWithAggregationInput {
  _avg: ServerTypeAvgOrderByAggregateInput
  _count: ServerTypeCountOrderByAggregateInput
  _max: ServerTypeMaxOrderByAggregateInput
  _min: ServerTypeMinOrderByAggregateInput
  _sum: ServerTypeSumOrderByAggregateInput
  description: SortOrder
  hidden: SortOrder
  id: SortOrder
  name: SortOrder
  number: SortOrder
}

input ServerTypeOrderByWithRelationInput {
  Inventory: InventoryOrderByRelationAggregateInput
  Product: ProductOrderByRelationAggregateInput
  Server: ServerOrderByRelationAggregateInput
  description: SortOrder
  hidden: SortOrder
  id: SortOrder
  name: SortOrder
  number: SortOrder
}

input ServerTypeRelationFilter {
  is: ServerTypeWhereInput
  isNot: ServerTypeWhereInput
}

enum ServerTypeScalarFieldEnum {
  description
  hidden
  id
  name
  number
}

input ServerTypeScalarWhereWithAggregatesInput {
  AND: [ServerTypeScalarWhereWithAggregatesInput]
  NOT: [ServerTypeScalarWhereWithAggregatesInput]
  OR: [ServerTypeScalarWhereWithAggregatesInput]
  description: StringWithAggregatesFilter
  hidden: BoolWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
  number: IntWithAggregatesFilter
}

type ServerTypeSumAggregateOutputType {
  id: Int
  number: Int
}

input ServerTypeSumOrderByAggregateInput {
  id: SortOrder
  number: SortOrder
}

input ServerTypeUncheckedCreateInput {
  Inventory: InventoryUncheckedCreateNestedManyWithoutServerTypeInput
  Product: ProductUncheckedCreateNestedManyWithoutServerTypeInput
  Server: ServerUncheckedCreateNestedManyWithoutTypeOfSeverInput
  description: String!
  hidden: Boolean
  id: Int
  name: String!
  number: Int!
}

input ServerTypeUncheckedCreateWithoutInventoryInput {
  Product: ProductUncheckedCreateNestedManyWithoutServerTypeInput
  Server: ServerUncheckedCreateNestedManyWithoutTypeOfSeverInput
  description: String!
  hidden: Boolean
  id: Int
  name: String!
  number: Int!
}

input ServerTypeUncheckedCreateWithoutProductInput {
  Inventory: InventoryUncheckedCreateNestedManyWithoutServerTypeInput
  Server: ServerUncheckedCreateNestedManyWithoutTypeOfSeverInput
  description: String!
  hidden: Boolean
  id: Int
  name: String!
  number: Int!
}

input ServerTypeUncheckedCreateWithoutServerInput {
  Inventory: InventoryUncheckedCreateNestedManyWithoutServerTypeInput
  Product: ProductUncheckedCreateNestedManyWithoutServerTypeInput
  description: String!
  hidden: Boolean
  id: Int
  name: String!
  number: Int!
}

input ServerTypeUncheckedUpdateInput {
  Inventory: InventoryUncheckedUpdateManyWithoutServerTypeInput
  Product: ProductUncheckedUpdateManyWithoutServerTypeInput
  Server: ServerUncheckedUpdateManyWithoutTypeOfSeverInput
  description: StringFieldUpdateOperationsInput
  hidden: BoolFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  number: IntFieldUpdateOperationsInput
}

input ServerTypeUncheckedUpdateManyInput {
  description: StringFieldUpdateOperationsInput
  hidden: BoolFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  number: IntFieldUpdateOperationsInput
}

input ServerTypeUncheckedUpdateWithoutInventoryInput {
  Product: ProductUncheckedUpdateManyWithoutServerTypeInput
  Server: ServerUncheckedUpdateManyWithoutTypeOfSeverInput
  description: StringFieldUpdateOperationsInput
  hidden: BoolFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  number: IntFieldUpdateOperationsInput
}

input ServerTypeUncheckedUpdateWithoutProductInput {
  Inventory: InventoryUncheckedUpdateManyWithoutServerTypeInput
  Server: ServerUncheckedUpdateManyWithoutTypeOfSeverInput
  description: StringFieldUpdateOperationsInput
  hidden: BoolFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  number: IntFieldUpdateOperationsInput
}

input ServerTypeUncheckedUpdateWithoutServerInput {
  Inventory: InventoryUncheckedUpdateManyWithoutServerTypeInput
  Product: ProductUncheckedUpdateManyWithoutServerTypeInput
  description: StringFieldUpdateOperationsInput
  hidden: BoolFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  number: IntFieldUpdateOperationsInput
}

input ServerTypeUpdateInput {
  Inventory: InventoryUpdateManyWithoutServerTypeInput
  Product: ProductUpdateManyWithoutServerTypeInput
  Server: ServerUpdateManyWithoutTypeOfSeverInput
  description: StringFieldUpdateOperationsInput
  hidden: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  number: IntFieldUpdateOperationsInput
}

input ServerTypeUpdateManyMutationInput {
  description: StringFieldUpdateOperationsInput
  hidden: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  number: IntFieldUpdateOperationsInput
}

input ServerTypeUpdateOneRequiredWithoutServerInput {
  connect: ServerTypeWhereUniqueInput
  connectOrCreate: ServerTypeCreateOrConnectWithoutServerInput
  create: ServerTypeUncheckedCreateWithoutServerInput
  update: ServerTypeUncheckedUpdateWithoutServerInput
  upsert: ServerTypeUpsertWithoutServerInput
}

input ServerTypeUpdateOneWithoutInventoryInput {
  connect: ServerTypeWhereUniqueInput
  connectOrCreate: ServerTypeCreateOrConnectWithoutInventoryInput
  create: ServerTypeUncheckedCreateWithoutInventoryInput
  delete: Boolean
  disconnect: Boolean
  update: ServerTypeUncheckedUpdateWithoutInventoryInput
  upsert: ServerTypeUpsertWithoutInventoryInput
}

input ServerTypeUpdateOneWithoutProductInput {
  connect: ServerTypeWhereUniqueInput
  connectOrCreate: ServerTypeCreateOrConnectWithoutProductInput
  create: ServerTypeUncheckedCreateWithoutProductInput
  delete: Boolean
  disconnect: Boolean
  update: ServerTypeUncheckedUpdateWithoutProductInput
  upsert: ServerTypeUpsertWithoutProductInput
}

input ServerTypeUpdateWithoutInventoryInput {
  Product: ProductUpdateManyWithoutServerTypeInput
  Server: ServerUpdateManyWithoutTypeOfSeverInput
  description: StringFieldUpdateOperationsInput
  hidden: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  number: IntFieldUpdateOperationsInput
}

input ServerTypeUpdateWithoutProductInput {
  Inventory: InventoryUpdateManyWithoutServerTypeInput
  Server: ServerUpdateManyWithoutTypeOfSeverInput
  description: StringFieldUpdateOperationsInput
  hidden: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  number: IntFieldUpdateOperationsInput
}

input ServerTypeUpdateWithoutServerInput {
  Inventory: InventoryUpdateManyWithoutServerTypeInput
  Product: ProductUpdateManyWithoutServerTypeInput
  description: StringFieldUpdateOperationsInput
  hidden: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  number: IntFieldUpdateOperationsInput
}

input ServerTypeUpsertWithoutInventoryInput {
  create: ServerTypeUncheckedCreateWithoutInventoryInput!
  update: ServerTypeUncheckedUpdateWithoutInventoryInput!
}

input ServerTypeUpsertWithoutProductInput {
  create: ServerTypeUncheckedCreateWithoutProductInput!
  update: ServerTypeUncheckedUpdateWithoutProductInput!
}

input ServerTypeUpsertWithoutServerInput {
  create: ServerTypeUncheckedCreateWithoutServerInput!
  update: ServerTypeUncheckedUpdateWithoutServerInput!
}

input ServerTypeWhereInput {
  AND: [ServerTypeWhereInput]
  Inventory: InventoryListRelationFilter
  NOT: [ServerTypeWhereInput]
  OR: [ServerTypeWhereInput]
  Product: ProductListRelationFilter
  Server: ServerListRelationFilter
  description: StringFilter
  hidden: BoolFilter
  id: IntFilter
  name: StringFilter
  number: IntFilter
}

input ServerTypeWhereUniqueInput {
  id: Int
}

input ServerUncheckedCreateInput {
  IP: String!
  Inventory: InventoryUncheckedCreateNestedManyWithoutServerInput
  apiKey: String!
  id: Int
  name: String
  port: String!
  serverID: Int!
  serverTypeId: Int!
}

input ServerUncheckedCreateNestedManyWithoutTypeOfSeverInput {
  connect: [ServerWhereUniqueInput]
  connectOrCreate: [ServerCreateOrConnectWithoutTypeOfSeverInput]
  create: [ServerCreateWithoutTypeOfSeverInput]
  createMany: ServerCreateManyTypeOfSeverInputEnvelope
}

input ServerUncheckedCreateWithoutInventoryInput {
  IP: String!
  apiKey: String!
  id: Int
  name: String
  port: String!
  serverID: Int!
  serverTypeId: Int!
}

input ServerUncheckedCreateWithoutTypeOfSeverInput {
  IP: String!
  Inventory: InventoryUncheckedCreateNestedManyWithoutServerInput
  apiKey: String!
  id: Int
  name: String
  port: String!
  serverID: Int!
}

input ServerUncheckedUpdateInput {
  IP: StringFieldUpdateOperationsInput
  Inventory: InventoryUncheckedUpdateManyWithoutServerInput
  apiKey: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  port: StringFieldUpdateOperationsInput
  serverID: IntFieldUpdateOperationsInput
  serverTypeId: IntFieldUpdateOperationsInput
}

input ServerUncheckedUpdateManyInput {
  IP: StringFieldUpdateOperationsInput
  apiKey: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  port: StringFieldUpdateOperationsInput
  serverID: IntFieldUpdateOperationsInput
  serverTypeId: IntFieldUpdateOperationsInput
}

input ServerUncheckedUpdateManyWithoutServerInput {
  IP: StringFieldUpdateOperationsInput
  apiKey: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  port: StringFieldUpdateOperationsInput
  serverID: IntFieldUpdateOperationsInput
}

input ServerUncheckedUpdateManyWithoutTypeOfSeverInput {
  connect: [ServerWhereUniqueInput]
  connectOrCreate: [ServerCreateOrConnectWithoutTypeOfSeverInput]
  create: [ServerCreateWithoutTypeOfSeverInput]
  createMany: ServerCreateManyTypeOfSeverInputEnvelope
  delete: [ServerWhereUniqueInput]
  deleteMany: [ServerScalarWhereInput]
  disconnect: [ServerWhereUniqueInput]
  set: [ServerWhereUniqueInput]
  update: [ServerUpdateWithWhereUniqueWithoutTypeOfSeverInput]
  updateMany: [ServerUpdateManyWithWhereWithoutTypeOfSeverInput]
  upsert: [ServerUpsertWithWhereUniqueWithoutTypeOfSeverInput]
}

input ServerUncheckedUpdateWithoutInventoryInput {
  IP: StringFieldUpdateOperationsInput
  apiKey: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  port: StringFieldUpdateOperationsInput
  serverID: IntFieldUpdateOperationsInput
  serverTypeId: IntFieldUpdateOperationsInput
}

input ServerUncheckedUpdateWithoutTypeOfSeverInput {
  IP: StringFieldUpdateOperationsInput
  Inventory: InventoryUncheckedUpdateManyWithoutServerInput
  apiKey: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  port: StringFieldUpdateOperationsInput
  serverID: IntFieldUpdateOperationsInput
}

input ServerUpdateInput {
  IP: StringFieldUpdateOperationsInput
  Inventory: InventoryUpdateManyWithoutServerInput
  apiKey: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  port: StringFieldUpdateOperationsInput
  serverID: IntFieldUpdateOperationsInput
  typeOfSever: ServerTypeUpdateOneRequiredWithoutServerInput
}

input ServerUpdateManyMutationInput {
  IP: StringFieldUpdateOperationsInput
  apiKey: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  port: StringFieldUpdateOperationsInput
  serverID: IntFieldUpdateOperationsInput
}

input ServerUpdateManyWithWhereWithoutTypeOfSeverInput {
  data: ServerUncheckedUpdateManyWithoutServerInput!
  where: ServerScalarWhereInput!
}

input ServerUpdateManyWithoutTypeOfSeverInput {
  connect: [ServerWhereUniqueInput]
  connectOrCreate: [ServerCreateOrConnectWithoutTypeOfSeverInput]
  create: [ServerCreateWithoutTypeOfSeverInput]
  createMany: ServerCreateManyTypeOfSeverInputEnvelope
  delete: [ServerWhereUniqueInput]
  deleteMany: [ServerScalarWhereInput]
  disconnect: [ServerWhereUniqueInput]
  set: [ServerWhereUniqueInput]
  update: [ServerUpdateWithWhereUniqueWithoutTypeOfSeverInput]
  updateMany: [ServerUpdateManyWithWhereWithoutTypeOfSeverInput]
  upsert: [ServerUpsertWithWhereUniqueWithoutTypeOfSeverInput]
}

input ServerUpdateOneWithoutInventoryInput {
  connect: ServerWhereUniqueInput
  connectOrCreate: ServerCreateOrConnectWithoutInventoryInput
  create: ServerUncheckedCreateWithoutInventoryInput
  delete: Boolean
  disconnect: Boolean
  update: ServerUncheckedUpdateWithoutInventoryInput
  upsert: ServerUpsertWithoutInventoryInput
}

input ServerUpdateWithWhereUniqueWithoutTypeOfSeverInput {
  data: ServerUncheckedUpdateWithoutTypeOfSeverInput!
  where: ServerWhereUniqueInput!
}

input ServerUpdateWithoutInventoryInput {
  IP: StringFieldUpdateOperationsInput
  apiKey: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  port: StringFieldUpdateOperationsInput
  serverID: IntFieldUpdateOperationsInput
  typeOfSever: ServerTypeUpdateOneRequiredWithoutServerInput
}

input ServerUpdateWithoutTypeOfSeverInput {
  IP: StringFieldUpdateOperationsInput
  Inventory: InventoryUpdateManyWithoutServerInput
  apiKey: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  port: StringFieldUpdateOperationsInput
  serverID: IntFieldUpdateOperationsInput
}

input ServerUpsertWithWhereUniqueWithoutTypeOfSeverInput {
  create: ServerUncheckedCreateWithoutTypeOfSeverInput!
  update: ServerUncheckedUpdateWithoutTypeOfSeverInput!
  where: ServerWhereUniqueInput!
}

input ServerUpsertWithoutInventoryInput {
  create: ServerUncheckedCreateWithoutInventoryInput!
  update: ServerUncheckedUpdateWithoutInventoryInput!
}

input ServerWhereInput {
  AND: [ServerWhereInput]
  IP: StringFilter
  Inventory: InventoryListRelationFilter
  NOT: [ServerWhereInput]
  OR: [ServerWhereInput]
  apiKey: StringFilter
  id: IntFilter
  name: StringFilter
  port: StringFilter
  serverID: IntFilter
  serverTypeId: IntFilter
  typeOfSever: ServerTypeWhereInput
}

input ServerWhereUniqueInput {
  id: Int
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String]
  startsWith: String
}

input StringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String]
  startsWith: String
}

input StringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String]
  startsWith: String
}

type Token {
  User: User
  browser: String
  clientIp: String
  deviceName: String
  deviceType: String
  id: Int!
  os: String
  token: String!
  userId: Int!
}

type TokenAvgAggregateOutputType {
  id: Float
  userId: Float
}

input TokenAvgOrderByAggregateInput {
  id: SortOrder
  userId: SortOrder
}

type TokenCountAggregateOutputType {
  _all: Int!
  browser: Int!
  clientIp: Int!
  deviceName: Int!
  deviceType: Int!
  id: Int!
  os: Int!
  token: Int!
  userId: Int!
}

input TokenCountOrderByAggregateInput {
  browser: SortOrder
  clientIp: SortOrder
  deviceName: SortOrder
  deviceType: SortOrder
  id: SortOrder
  os: SortOrder
  token: SortOrder
  userId: SortOrder
}

input TokenCreateInput {
  User: UserCreateNestedOneWithoutTokensInput
  browser: String
  clientIp: String
  deviceName: String
  deviceType: String
  os: String
  token: String!
}

input TokenCreateManyInput {
  browser: String
  clientIp: String
  deviceName: String
  deviceType: String
  id: Int
  os: String
  token: String!
  userId: Int!
}

input TokenCreateManyUserInput {
  browser: String
  clientIp: String
  deviceName: String
  deviceType: String
  id: Int
  os: String
  token: String!
}

input TokenCreateManyUserInputEnvelope {
  data: TokenCreateManyUserInput!
  skipDuplicates: Boolean
}

input TokenCreateNestedManyWithoutUserInput {
  connect: [TokenWhereUniqueInput]
  connectOrCreate: [TokenCreateOrConnectWithoutUserInput]
  create: [TokenCreateWithoutUserInput]
  createMany: TokenCreateManyUserInputEnvelope
}

input TokenCreateOrConnectWithoutUserInput {
  create: TokenUncheckedCreateWithoutUserInput!
  where: TokenWhereUniqueInput!
}

input TokenCreateWithoutUserInput {
  browser: String
  clientIp: String
  deviceName: String
  deviceType: String
  os: String
  token: String!
}

input TokenListRelationFilter {
  every: TokenWhereInput
  none: TokenWhereInput
  some: TokenWhereInput
}

type TokenMaxAggregateOutputType {
  browser: String
  clientIp: String
  deviceName: String
  deviceType: String
  id: Int
  os: String
  token: String
  userId: Int
}

input TokenMaxOrderByAggregateInput {
  browser: SortOrder
  clientIp: SortOrder
  deviceName: SortOrder
  deviceType: SortOrder
  id: SortOrder
  os: SortOrder
  token: SortOrder
  userId: SortOrder
}

type TokenMinAggregateOutputType {
  browser: String
  clientIp: String
  deviceName: String
  deviceType: String
  id: Int
  os: String
  token: String
  userId: Int
}

input TokenMinOrderByAggregateInput {
  browser: SortOrder
  clientIp: SortOrder
  deviceName: SortOrder
  deviceType: SortOrder
  id: SortOrder
  os: SortOrder
  token: SortOrder
  userId: SortOrder
}

input TokenOrderByRelationAggregateInput {
  _count: SortOrder
}

input TokenOrderByWithAggregationInput {
  _avg: TokenAvgOrderByAggregateInput
  _count: TokenCountOrderByAggregateInput
  _max: TokenMaxOrderByAggregateInput
  _min: TokenMinOrderByAggregateInput
  _sum: TokenSumOrderByAggregateInput
  browser: SortOrder
  clientIp: SortOrder
  deviceName: SortOrder
  deviceType: SortOrder
  id: SortOrder
  os: SortOrder
  token: SortOrder
  userId: SortOrder
}

input TokenOrderByWithRelationInput {
  User: UserOrderByWithRelationInput
  browser: SortOrder
  clientIp: SortOrder
  deviceName: SortOrder
  deviceType: SortOrder
  id: SortOrder
  os: SortOrder
  token: SortOrder
  userId: SortOrder
}

enum TokenScalarFieldEnum {
  browser
  clientIp
  deviceName
  deviceType
  id
  os
  token
  userId
}

input TokenScalarWhereInput {
  AND: [TokenScalarWhereInput]
  NOT: [TokenScalarWhereInput]
  OR: [TokenScalarWhereInput]
  browser: StringNullableFilter
  clientIp: StringNullableFilter
  deviceName: StringNullableFilter
  deviceType: StringNullableFilter
  id: IntFilter
  os: StringNullableFilter
  token: StringFilter
  userId: IntFilter
}

input TokenScalarWhereWithAggregatesInput {
  AND: [TokenScalarWhereWithAggregatesInput]
  NOT: [TokenScalarWhereWithAggregatesInput]
  OR: [TokenScalarWhereWithAggregatesInput]
  browser: StringNullableWithAggregatesFilter
  clientIp: StringNullableWithAggregatesFilter
  deviceName: StringNullableWithAggregatesFilter
  deviceType: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  os: StringNullableWithAggregatesFilter
  token: StringWithAggregatesFilter
  userId: IntWithAggregatesFilter
}

type TokenSumAggregateOutputType {
  id: Int
  userId: Int
}

input TokenSumOrderByAggregateInput {
  id: SortOrder
  userId: SortOrder
}

input TokenUncheckedCreateInput {
  browser: String
  clientIp: String
  deviceName: String
  deviceType: String
  id: Int
  os: String
  token: String!
  userId: Int!
}

input TokenUncheckedCreateNestedManyWithoutUserInput {
  connect: [TokenWhereUniqueInput]
  connectOrCreate: [TokenCreateOrConnectWithoutUserInput]
  create: [TokenCreateWithoutUserInput]
  createMany: TokenCreateManyUserInputEnvelope
}

input TokenUncheckedCreateWithoutUserInput {
  browser: String
  clientIp: String
  deviceName: String
  deviceType: String
  id: Int
  os: String
  token: String!
}

input TokenUncheckedUpdateInput {
  browser: NullableStringFieldUpdateOperationsInput
  clientIp: NullableStringFieldUpdateOperationsInput
  deviceName: NullableStringFieldUpdateOperationsInput
  deviceType: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  os: NullableStringFieldUpdateOperationsInput
  token: StringFieldUpdateOperationsInput
  userId: IntFieldUpdateOperationsInput
}

input TokenUncheckedUpdateManyInput {
  browser: NullableStringFieldUpdateOperationsInput
  clientIp: NullableStringFieldUpdateOperationsInput
  deviceName: NullableStringFieldUpdateOperationsInput
  deviceType: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  os: NullableStringFieldUpdateOperationsInput
  token: StringFieldUpdateOperationsInput
  userId: IntFieldUpdateOperationsInput
}

input TokenUncheckedUpdateManyWithoutTokensInput {
  browser: NullableStringFieldUpdateOperationsInput
  clientIp: NullableStringFieldUpdateOperationsInput
  deviceName: NullableStringFieldUpdateOperationsInput
  deviceType: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  os: NullableStringFieldUpdateOperationsInput
  token: StringFieldUpdateOperationsInput
}

input TokenUncheckedUpdateManyWithoutUserInput {
  connect: [TokenWhereUniqueInput]
  connectOrCreate: [TokenCreateOrConnectWithoutUserInput]
  create: [TokenCreateWithoutUserInput]
  createMany: TokenCreateManyUserInputEnvelope
  delete: [TokenWhereUniqueInput]
  deleteMany: [TokenScalarWhereInput]
  disconnect: [TokenWhereUniqueInput]
  set: [TokenWhereUniqueInput]
  update: [TokenUpdateWithWhereUniqueWithoutUserInput]
  updateMany: [TokenUpdateManyWithWhereWithoutUserInput]
  upsert: [TokenUpsertWithWhereUniqueWithoutUserInput]
}

input TokenUncheckedUpdateWithoutUserInput {
  browser: NullableStringFieldUpdateOperationsInput
  clientIp: NullableStringFieldUpdateOperationsInput
  deviceName: NullableStringFieldUpdateOperationsInput
  deviceType: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  os: NullableStringFieldUpdateOperationsInput
  token: StringFieldUpdateOperationsInput
}

input TokenUpdateInput {
  User: UserUpdateOneWithoutTokensInput
  browser: NullableStringFieldUpdateOperationsInput
  clientIp: NullableStringFieldUpdateOperationsInput
  deviceName: NullableStringFieldUpdateOperationsInput
  deviceType: NullableStringFieldUpdateOperationsInput
  os: NullableStringFieldUpdateOperationsInput
  token: StringFieldUpdateOperationsInput
}

input TokenUpdateManyMutationInput {
  browser: NullableStringFieldUpdateOperationsInput
  clientIp: NullableStringFieldUpdateOperationsInput
  deviceName: NullableStringFieldUpdateOperationsInput
  deviceType: NullableStringFieldUpdateOperationsInput
  os: NullableStringFieldUpdateOperationsInput
  token: StringFieldUpdateOperationsInput
}

input TokenUpdateManyWithWhereWithoutUserInput {
  data: TokenUncheckedUpdateManyWithoutTokensInput!
  where: TokenScalarWhereInput!
}

input TokenUpdateManyWithoutUserInput {
  connect: [TokenWhereUniqueInput]
  connectOrCreate: [TokenCreateOrConnectWithoutUserInput]
  create: [TokenCreateWithoutUserInput]
  createMany: TokenCreateManyUserInputEnvelope
  delete: [TokenWhereUniqueInput]
  deleteMany: [TokenScalarWhereInput]
  disconnect: [TokenWhereUniqueInput]
  set: [TokenWhereUniqueInput]
  update: [TokenUpdateWithWhereUniqueWithoutUserInput]
  updateMany: [TokenUpdateManyWithWhereWithoutUserInput]
  upsert: [TokenUpsertWithWhereUniqueWithoutUserInput]
}

input TokenUpdateWithWhereUniqueWithoutUserInput {
  data: TokenUncheckedUpdateWithoutUserInput!
  where: TokenWhereUniqueInput!
}

input TokenUpdateWithoutUserInput {
  browser: NullableStringFieldUpdateOperationsInput
  clientIp: NullableStringFieldUpdateOperationsInput
  deviceName: NullableStringFieldUpdateOperationsInput
  deviceType: NullableStringFieldUpdateOperationsInput
  os: NullableStringFieldUpdateOperationsInput
  token: StringFieldUpdateOperationsInput
}

input TokenUpsertWithWhereUniqueWithoutUserInput {
  create: TokenUncheckedCreateWithoutUserInput!
  update: TokenUncheckedUpdateWithoutUserInput!
  where: TokenWhereUniqueInput!
}

input TokenWhereInput {
  AND: [TokenWhereInput]
  NOT: [TokenWhereInput]
  OR: [TokenWhereInput]
  User: UserWhereInput
  browser: StringNullableFilter
  clientIp: StringNullableFilter
  deviceName: StringNullableFilter
  deviceType: StringNullableFilter
  id: IntFilter
  os: StringNullableFilter
  token: StringFilter
  userId: IntFilter
}

input TokenWhereUniqueInput {
  id: Int
}

type Transaction {
  amount: Int!
  createdAt: DateTime!
  id: Int!
  method: String!
  status: EStatusOfRefill!
  user: User
  userId: Int
}

type TransactionAvgAggregateOutputType {
  amount: Float
  id: Float
  userId: Float
}

input TransactionAvgOrderByAggregateInput {
  amount: SortOrder
  id: SortOrder
  userId: SortOrder
}

type TransactionCountAggregateOutputType {
  _all: Int!
  amount: Int!
  createdAt: Int!
  id: Int!
  method: Int!
  status: Int!
  userId: Int!
}

input TransactionCountOrderByAggregateInput {
  amount: SortOrder
  createdAt: SortOrder
  id: SortOrder
  method: SortOrder
  status: SortOrder
  userId: SortOrder
}

input TransactionCreateInput {
  amount: Int!
  createdAt: DateTime
  method: String!
  status: EStatusOfRefill
  user: UserCreateNestedOneWithoutTransactionInput
}

input TransactionCreateManyInput {
  amount: Int!
  createdAt: DateTime
  id: Int
  method: String!
  status: EStatusOfRefill
  userId: Int
}

input TransactionCreateManyUserInput {
  amount: Int!
  createdAt: DateTime
  id: Int
  method: String!
  status: EStatusOfRefill
}

input TransactionCreateManyUserInputEnvelope {
  data: TransactionCreateManyUserInput!
  skipDuplicates: Boolean
}

input TransactionCreateNestedManyWithoutUserInput {
  connect: [TransactionWhereUniqueInput]
  connectOrCreate: [TransactionCreateOrConnectWithoutUserInput]
  create: [TransactionCreateWithoutUserInput]
  createMany: TransactionCreateManyUserInputEnvelope
}

input TransactionCreateOrConnectWithoutUserInput {
  create: TransactionUncheckedCreateWithoutUserInput!
  where: TransactionWhereUniqueInput!
}

input TransactionCreateWithoutUserInput {
  amount: Int!
  createdAt: DateTime
  method: String!
  status: EStatusOfRefill
}

input TransactionListRelationFilter {
  every: TransactionWhereInput
  none: TransactionWhereInput
  some: TransactionWhereInput
}

type TransactionMaxAggregateOutputType {
  amount: Int
  createdAt: DateTime
  id: Int
  method: String
  status: EStatusOfRefill
  userId: Int
}

input TransactionMaxOrderByAggregateInput {
  amount: SortOrder
  createdAt: SortOrder
  id: SortOrder
  method: SortOrder
  status: SortOrder
  userId: SortOrder
}

type TransactionMinAggregateOutputType {
  amount: Int
  createdAt: DateTime
  id: Int
  method: String
  status: EStatusOfRefill
  userId: Int
}

input TransactionMinOrderByAggregateInput {
  amount: SortOrder
  createdAt: SortOrder
  id: SortOrder
  method: SortOrder
  status: SortOrder
  userId: SortOrder
}

input TransactionOrderByRelationAggregateInput {
  _count: SortOrder
}

input TransactionOrderByWithAggregationInput {
  _avg: TransactionAvgOrderByAggregateInput
  _count: TransactionCountOrderByAggregateInput
  _max: TransactionMaxOrderByAggregateInput
  _min: TransactionMinOrderByAggregateInput
  _sum: TransactionSumOrderByAggregateInput
  amount: SortOrder
  createdAt: SortOrder
  id: SortOrder
  method: SortOrder
  status: SortOrder
  userId: SortOrder
}

input TransactionOrderByWithRelationInput {
  amount: SortOrder
  createdAt: SortOrder
  id: SortOrder
  method: SortOrder
  status: SortOrder
  user: UserOrderByWithRelationInput
  userId: SortOrder
}

enum TransactionScalarFieldEnum {
  amount
  createdAt
  id
  method
  status
  userId
}

input TransactionScalarWhereInput {
  AND: [TransactionScalarWhereInput]
  NOT: [TransactionScalarWhereInput]
  OR: [TransactionScalarWhereInput]
  amount: IntFilter
  createdAt: DateTimeFilter
  id: IntFilter
  method: StringFilter
  status: EnumEStatusOfRefillFilter
  userId: IntNullableFilter
}

input TransactionScalarWhereWithAggregatesInput {
  AND: [TransactionScalarWhereWithAggregatesInput]
  NOT: [TransactionScalarWhereWithAggregatesInput]
  OR: [TransactionScalarWhereWithAggregatesInput]
  amount: IntWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  method: StringWithAggregatesFilter
  status: EnumEStatusOfRefillWithAggregatesFilter
  userId: IntNullableWithAggregatesFilter
}

type TransactionSumAggregateOutputType {
  amount: Int
  id: Int
  userId: Int
}

input TransactionSumOrderByAggregateInput {
  amount: SortOrder
  id: SortOrder
  userId: SortOrder
}

input TransactionUncheckedCreateInput {
  amount: Int!
  createdAt: DateTime
  id: Int
  method: String!
  status: EStatusOfRefill
  userId: Int
}

input TransactionUncheckedCreateNestedManyWithoutUserInput {
  connect: [TransactionWhereUniqueInput]
  connectOrCreate: [TransactionCreateOrConnectWithoutUserInput]
  create: [TransactionCreateWithoutUserInput]
  createMany: TransactionCreateManyUserInputEnvelope
}

input TransactionUncheckedCreateWithoutUserInput {
  amount: Int!
  createdAt: DateTime
  id: Int
  method: String!
  status: EStatusOfRefill
}

input TransactionUncheckedUpdateInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  method: StringFieldUpdateOperationsInput
  status: EnumEStatusOfRefillFieldUpdateOperationsInput
  userId: NullableIntFieldUpdateOperationsInput
}

input TransactionUncheckedUpdateManyInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  method: StringFieldUpdateOperationsInput
  status: EnumEStatusOfRefillFieldUpdateOperationsInput
  userId: NullableIntFieldUpdateOperationsInput
}

input TransactionUncheckedUpdateManyWithoutTransactionInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  method: StringFieldUpdateOperationsInput
  status: EnumEStatusOfRefillFieldUpdateOperationsInput
}

input TransactionUncheckedUpdateManyWithoutUserInput {
  connect: [TransactionWhereUniqueInput]
  connectOrCreate: [TransactionCreateOrConnectWithoutUserInput]
  create: [TransactionCreateWithoutUserInput]
  createMany: TransactionCreateManyUserInputEnvelope
  delete: [TransactionWhereUniqueInput]
  deleteMany: [TransactionScalarWhereInput]
  disconnect: [TransactionWhereUniqueInput]
  set: [TransactionWhereUniqueInput]
  update: [TransactionUpdateWithWhereUniqueWithoutUserInput]
  updateMany: [TransactionUpdateManyWithWhereWithoutUserInput]
  upsert: [TransactionUpsertWithWhereUniqueWithoutUserInput]
}

input TransactionUncheckedUpdateWithoutUserInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  method: StringFieldUpdateOperationsInput
  status: EnumEStatusOfRefillFieldUpdateOperationsInput
}

input TransactionUpdateInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  method: StringFieldUpdateOperationsInput
  status: EnumEStatusOfRefillFieldUpdateOperationsInput
  user: UserUpdateOneWithoutTransactionInput
}

input TransactionUpdateManyMutationInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  method: StringFieldUpdateOperationsInput
  status: EnumEStatusOfRefillFieldUpdateOperationsInput
}

input TransactionUpdateManyWithWhereWithoutUserInput {
  data: TransactionUncheckedUpdateManyWithoutTransactionInput!
  where: TransactionScalarWhereInput!
}

input TransactionUpdateManyWithoutUserInput {
  connect: [TransactionWhereUniqueInput]
  connectOrCreate: [TransactionCreateOrConnectWithoutUserInput]
  create: [TransactionCreateWithoutUserInput]
  createMany: TransactionCreateManyUserInputEnvelope
  delete: [TransactionWhereUniqueInput]
  deleteMany: [TransactionScalarWhereInput]
  disconnect: [TransactionWhereUniqueInput]
  set: [TransactionWhereUniqueInput]
  update: [TransactionUpdateWithWhereUniqueWithoutUserInput]
  updateMany: [TransactionUpdateManyWithWhereWithoutUserInput]
  upsert: [TransactionUpsertWithWhereUniqueWithoutUserInput]
}

input TransactionUpdateWithWhereUniqueWithoutUserInput {
  data: TransactionUncheckedUpdateWithoutUserInput!
  where: TransactionWhereUniqueInput!
}

input TransactionUpdateWithoutUserInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  method: StringFieldUpdateOperationsInput
  status: EnumEStatusOfRefillFieldUpdateOperationsInput
}

input TransactionUpsertWithWhereUniqueWithoutUserInput {
  create: TransactionUncheckedCreateWithoutUserInput!
  update: TransactionUncheckedUpdateWithoutUserInput!
  where: TransactionWhereUniqueInput!
}

input TransactionWhereInput {
  AND: [TransactionWhereInput]
  NOT: [TransactionWhereInput]
  OR: [TransactionWhereInput]
  amount: IntFilter
  createdAt: DateTimeFilter
  id: IntFilter
  method: StringFilter
  status: EnumEStatusOfRefillFilter
  user: UserWhereInput
  userId: IntNullableFilter
}

input TransactionWhereUniqueInput {
  id: Int
}

type Transfers {
  amount: Int!
  createdAt: DateTime!
  id: Int!
  receiver: User!
  receiverId: Int!
  sender: User!
  senderId: Int!
}

type TransfersAvgAggregateOutputType {
  amount: Float
  id: Float
  receiverId: Float
  senderId: Float
}

input TransfersAvgOrderByAggregateInput {
  amount: SortOrder
  id: SortOrder
  receiverId: SortOrder
  senderId: SortOrder
}

type TransfersCountAggregateOutputType {
  _all: Int!
  amount: Int!
  createdAt: Int!
  id: Int!
  receiverId: Int!
  senderId: Int!
}

input TransfersCountOrderByAggregateInput {
  amount: SortOrder
  createdAt: SortOrder
  id: SortOrder
  receiverId: SortOrder
  senderId: SortOrder
}

input TransfersCreateInput {
  amount: Int!
  createdAt: DateTime
  receiver: UserCreateNestedOneWithoutTransfersReceiverInput!
  sender: UserCreateNestedOneWithoutTransfersSenderInput!
}

input TransfersCreateManyInput {
  amount: Int!
  createdAt: DateTime
  id: Int
  receiverId: Int!
  senderId: Int!
}

input TransfersCreateManyReceiverInput {
  amount: Int!
  createdAt: DateTime
  id: Int
  senderId: Int!
}

input TransfersCreateManyReceiverInputEnvelope {
  data: TransfersCreateManyReceiverInput!
  skipDuplicates: Boolean
}

input TransfersCreateManySenderInput {
  amount: Int!
  createdAt: DateTime
  id: Int
  receiverId: Int!
}

input TransfersCreateManySenderInputEnvelope {
  data: TransfersCreateManySenderInput!
  skipDuplicates: Boolean
}

input TransfersCreateNestedManyWithoutReceiverInput {
  connect: [TransfersWhereUniqueInput]
  connectOrCreate: [TransfersCreateOrConnectWithoutReceiverInput]
  create: [TransfersCreateWithoutReceiverInput]
  createMany: TransfersCreateManyReceiverInputEnvelope
}

input TransfersCreateNestedManyWithoutSenderInput {
  connect: [TransfersWhereUniqueInput]
  connectOrCreate: [TransfersCreateOrConnectWithoutSenderInput]
  create: [TransfersCreateWithoutSenderInput]
  createMany: TransfersCreateManySenderInputEnvelope
}

input TransfersCreateOrConnectWithoutReceiverInput {
  create: TransfersUncheckedCreateWithoutReceiverInput!
  where: TransfersWhereUniqueInput!
}

input TransfersCreateOrConnectWithoutSenderInput {
  create: TransfersUncheckedCreateWithoutSenderInput!
  where: TransfersWhereUniqueInput!
}

input TransfersCreateWithoutReceiverInput {
  amount: Int!
  createdAt: DateTime
  sender: UserCreateNestedOneWithoutTransfersSenderInput!
}

input TransfersCreateWithoutSenderInput {
  amount: Int!
  createdAt: DateTime
  receiver: UserCreateNestedOneWithoutTransfersReceiverInput!
}

input TransfersListRelationFilter {
  every: TransfersWhereInput
  none: TransfersWhereInput
  some: TransfersWhereInput
}

type TransfersMaxAggregateOutputType {
  amount: Int
  createdAt: DateTime
  id: Int
  receiverId: Int
  senderId: Int
}

input TransfersMaxOrderByAggregateInput {
  amount: SortOrder
  createdAt: SortOrder
  id: SortOrder
  receiverId: SortOrder
  senderId: SortOrder
}

type TransfersMinAggregateOutputType {
  amount: Int
  createdAt: DateTime
  id: Int
  receiverId: Int
  senderId: Int
}

input TransfersMinOrderByAggregateInput {
  amount: SortOrder
  createdAt: SortOrder
  id: SortOrder
  receiverId: SortOrder
  senderId: SortOrder
}

input TransfersOrderByRelationAggregateInput {
  _count: SortOrder
}

input TransfersOrderByWithAggregationInput {
  _avg: TransfersAvgOrderByAggregateInput
  _count: TransfersCountOrderByAggregateInput
  _max: TransfersMaxOrderByAggregateInput
  _min: TransfersMinOrderByAggregateInput
  _sum: TransfersSumOrderByAggregateInput
  amount: SortOrder
  createdAt: SortOrder
  id: SortOrder
  receiverId: SortOrder
  senderId: SortOrder
}

input TransfersOrderByWithRelationInput {
  amount: SortOrder
  createdAt: SortOrder
  id: SortOrder
  receiver: UserOrderByWithRelationInput
  receiverId: SortOrder
  sender: UserOrderByWithRelationInput
  senderId: SortOrder
}

enum TransfersScalarFieldEnum {
  amount
  createdAt
  id
  receiverId
  senderId
}

input TransfersScalarWhereInput {
  AND: [TransfersScalarWhereInput]
  NOT: [TransfersScalarWhereInput]
  OR: [TransfersScalarWhereInput]
  amount: IntFilter
  createdAt: DateTimeFilter
  id: IntFilter
  receiverId: IntFilter
  senderId: IntFilter
}

input TransfersScalarWhereWithAggregatesInput {
  AND: [TransfersScalarWhereWithAggregatesInput]
  NOT: [TransfersScalarWhereWithAggregatesInput]
  OR: [TransfersScalarWhereWithAggregatesInput]
  amount: IntWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  receiverId: IntWithAggregatesFilter
  senderId: IntWithAggregatesFilter
}

type TransfersSumAggregateOutputType {
  amount: Int
  id: Int
  receiverId: Int
  senderId: Int
}

input TransfersSumOrderByAggregateInput {
  amount: SortOrder
  id: SortOrder
  receiverId: SortOrder
  senderId: SortOrder
}

input TransfersUncheckedCreateInput {
  amount: Int!
  createdAt: DateTime
  id: Int
  receiverId: Int!
  senderId: Int!
}

input TransfersUncheckedCreateNestedManyWithoutReceiverInput {
  connect: [TransfersWhereUniqueInput]
  connectOrCreate: [TransfersCreateOrConnectWithoutReceiverInput]
  create: [TransfersCreateWithoutReceiverInput]
  createMany: TransfersCreateManyReceiverInputEnvelope
}

input TransfersUncheckedCreateNestedManyWithoutSenderInput {
  connect: [TransfersWhereUniqueInput]
  connectOrCreate: [TransfersCreateOrConnectWithoutSenderInput]
  create: [TransfersCreateWithoutSenderInput]
  createMany: TransfersCreateManySenderInputEnvelope
}

input TransfersUncheckedCreateWithoutReceiverInput {
  amount: Int!
  createdAt: DateTime
  id: Int
  senderId: Int!
}

input TransfersUncheckedCreateWithoutSenderInput {
  amount: Int!
  createdAt: DateTime
  id: Int
  receiverId: Int!
}

input TransfersUncheckedUpdateInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  receiverId: IntFieldUpdateOperationsInput
  senderId: IntFieldUpdateOperationsInput
}

input TransfersUncheckedUpdateManyInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  receiverId: IntFieldUpdateOperationsInput
  senderId: IntFieldUpdateOperationsInput
}

input TransfersUncheckedUpdateManyWithoutReceiverInput {
  connect: [TransfersWhereUniqueInput]
  connectOrCreate: [TransfersCreateOrConnectWithoutReceiverInput]
  create: [TransfersCreateWithoutReceiverInput]
  createMany: TransfersCreateManyReceiverInputEnvelope
  delete: [TransfersWhereUniqueInput]
  deleteMany: [TransfersScalarWhereInput]
  disconnect: [TransfersWhereUniqueInput]
  set: [TransfersWhereUniqueInput]
  update: [TransfersUpdateWithWhereUniqueWithoutReceiverInput]
  updateMany: [TransfersUpdateManyWithWhereWithoutReceiverInput]
  upsert: [TransfersUpsertWithWhereUniqueWithoutReceiverInput]
}

input TransfersUncheckedUpdateManyWithoutSenderInput {
  connect: [TransfersWhereUniqueInput]
  connectOrCreate: [TransfersCreateOrConnectWithoutSenderInput]
  create: [TransfersCreateWithoutSenderInput]
  createMany: TransfersCreateManySenderInputEnvelope
  delete: [TransfersWhereUniqueInput]
  deleteMany: [TransfersScalarWhereInput]
  disconnect: [TransfersWhereUniqueInput]
  set: [TransfersWhereUniqueInput]
  update: [TransfersUpdateWithWhereUniqueWithoutSenderInput]
  updateMany: [TransfersUpdateManyWithWhereWithoutSenderInput]
  upsert: [TransfersUpsertWithWhereUniqueWithoutSenderInput]
}

input TransfersUncheckedUpdateManyWithoutTransfersReceiverInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  senderId: IntFieldUpdateOperationsInput
}

input TransfersUncheckedUpdateManyWithoutTransfersSenderInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  receiverId: IntFieldUpdateOperationsInput
}

input TransfersUncheckedUpdateWithoutReceiverInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  senderId: IntFieldUpdateOperationsInput
}

input TransfersUncheckedUpdateWithoutSenderInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  receiverId: IntFieldUpdateOperationsInput
}

input TransfersUpdateInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  receiver: UserUpdateOneRequiredWithoutTransfersReceiverInput
  sender: UserUpdateOneRequiredWithoutTransfersSenderInput
}

input TransfersUpdateManyMutationInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
}

input TransfersUpdateManyWithWhereWithoutReceiverInput {
  data: TransfersUncheckedUpdateManyWithoutTransfersReceiverInput!
  where: TransfersScalarWhereInput!
}

input TransfersUpdateManyWithWhereWithoutSenderInput {
  data: TransfersUncheckedUpdateManyWithoutTransfersSenderInput!
  where: TransfersScalarWhereInput!
}

input TransfersUpdateManyWithoutReceiverInput {
  connect: [TransfersWhereUniqueInput]
  connectOrCreate: [TransfersCreateOrConnectWithoutReceiverInput]
  create: [TransfersCreateWithoutReceiverInput]
  createMany: TransfersCreateManyReceiverInputEnvelope
  delete: [TransfersWhereUniqueInput]
  deleteMany: [TransfersScalarWhereInput]
  disconnect: [TransfersWhereUniqueInput]
  set: [TransfersWhereUniqueInput]
  update: [TransfersUpdateWithWhereUniqueWithoutReceiverInput]
  updateMany: [TransfersUpdateManyWithWhereWithoutReceiverInput]
  upsert: [TransfersUpsertWithWhereUniqueWithoutReceiverInput]
}

input TransfersUpdateManyWithoutSenderInput {
  connect: [TransfersWhereUniqueInput]
  connectOrCreate: [TransfersCreateOrConnectWithoutSenderInput]
  create: [TransfersCreateWithoutSenderInput]
  createMany: TransfersCreateManySenderInputEnvelope
  delete: [TransfersWhereUniqueInput]
  deleteMany: [TransfersScalarWhereInput]
  disconnect: [TransfersWhereUniqueInput]
  set: [TransfersWhereUniqueInput]
  update: [TransfersUpdateWithWhereUniqueWithoutSenderInput]
  updateMany: [TransfersUpdateManyWithWhereWithoutSenderInput]
  upsert: [TransfersUpsertWithWhereUniqueWithoutSenderInput]
}

input TransfersUpdateWithWhereUniqueWithoutReceiverInput {
  data: TransfersUncheckedUpdateWithoutReceiverInput!
  where: TransfersWhereUniqueInput!
}

input TransfersUpdateWithWhereUniqueWithoutSenderInput {
  data: TransfersUncheckedUpdateWithoutSenderInput!
  where: TransfersWhereUniqueInput!
}

input TransfersUpdateWithoutReceiverInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  sender: UserUpdateOneRequiredWithoutTransfersSenderInput
}

input TransfersUpdateWithoutSenderInput {
  amount: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  receiver: UserUpdateOneRequiredWithoutTransfersReceiverInput
}

input TransfersUpsertWithWhereUniqueWithoutReceiverInput {
  create: TransfersUncheckedCreateWithoutReceiverInput!
  update: TransfersUncheckedUpdateWithoutReceiverInput!
  where: TransfersWhereUniqueInput!
}

input TransfersUpsertWithWhereUniqueWithoutSenderInput {
  create: TransfersUncheckedCreateWithoutSenderInput!
  update: TransfersUncheckedUpdateWithoutSenderInput!
  where: TransfersWhereUniqueInput!
}

input TransfersWhereInput {
  AND: [TransfersWhereInput]
  NOT: [TransfersWhereInput]
  OR: [TransfersWhereInput]
  amount: IntFilter
  createdAt: DateTimeFilter
  id: IntFilter
  receiver: UserWhereInput
  receiverId: IntFilter
  sender: UserWhereInput
  senderId: IntFilter
}

input TransfersWhereUniqueInput {
  id: Int
}

enum USER_ROLE {
  ADMINISTRATOR
  CLIENT
}

input UpdateFieldInput {
  create: Boolean
  editor: Boolean
  filter: Boolean
  id: String
  isId: Boolean
  kind: KindEnum
  list: Boolean
  name: String
  order: Int
  read: Boolean
  relationField: Boolean
  required: Boolean
  sort: Boolean
  title: String
  type: String
  unique: Boolean
  update: Boolean
  upload: Boolean
}

input UpdateModelInput {
  create: Boolean
  delete: Boolean
  displayFields: [String]
  fields: [UpdateFieldInput]
  idField: String
  name: String
  update: Boolean
}

type UrlSettingsAvgAggregateOutputType {
  id: Float
}

type UrlSettingsCountAggregateOutputType {
  _all: Int!
  hidden: Int!
  icon: Int!
  id: Int!
  isHaveSidebar: Int!
  sections: Int!
  text: Int!
  typeUrl: Int!
  url: Int!
}

type UrlSettingsMaxAggregateOutputType {
  hidden: Boolean
  icon: String
  id: Int
  isHaveSidebar: Boolean
  text: String
  typeUrl: ETypeOfURL
  url: String
}

type UrlSettingsMinAggregateOutputType {
  hidden: Boolean
  icon: String
  id: Int
  isHaveSidebar: Boolean
  text: String
  typeUrl: ETypeOfURL
  url: String
}

enum UrlSettingsScalarFieldEnum {
  hidden
  icon
  id
  isHaveSidebar
  sections
  text
  typeUrl
  url
}

type UrlSettingsSumAggregateOutputType {
  id: Int
}

type User {
  Inventory(cursor: InventoryWhereUniqueInput, distinct: InventoryScalarFieldEnum, orderBy: InventoryOrderByWithRelationInput, skip: Int, take: Int, where: InventoryWhereInput): [Inventory!]!
  Purchase(cursor: PurchaseWhereUniqueInput, distinct: PurchaseScalarFieldEnum, orderBy: PurchaseOrderByWithRelationInput, skip: Int, take: Int, where: PurchaseWhereInput): [Purchase!]!
  TGLink: String
  Tokens(cursor: TokenWhereUniqueInput, distinct: TokenScalarFieldEnum, orderBy: TokenOrderByWithRelationInput, skip: Int, take: Int, where: TokenWhereInput): [Token!]!
  Transaction(cursor: TransactionWhereUniqueInput, distinct: TransactionScalarFieldEnum, orderBy: TransactionOrderByWithRelationInput, skip: Int, take: Int, where: TransactionWhereInput): [Transaction!]!
  TransfersReceiver(cursor: TransfersWhereUniqueInput, distinct: TransfersScalarFieldEnum, orderBy: TransfersOrderByWithRelationInput, skip: Int, take: Int, where: TransfersWhereInput): [Transfers!]!
  TransfersSender(cursor: TransfersWhereUniqueInput, distinct: TransfersScalarFieldEnum, orderBy: TransfersOrderByWithRelationInput, skip: Int, take: Int, where: TransfersWhereInput): [Transfers!]!
  VKLink: String
  _count: UserCountOutputType
  bonusBalance: Int!
  createdAt: DateTime!
  discordLink: String
  email: String
  experience: Int!
  firstDateAuth: DateTime!
  id: Int!
  lastActivity: DateTime
  lvl: Int!
  mainBalance: Int!
  role: USER_ROLE!
  steamAvatar: String!
  steamID: String!
  steamName: String!
  sumOfDeposits: Int!
  sumOfRefunds: Int!
}

type UserAvgAggregateOutputType {
  bonusBalance: Float
  experience: Float
  id: Float
  lvl: Float
  mainBalance: Float
  sumOfDeposits: Float
  sumOfRefunds: Float
}

input UserAvgOrderByAggregateInput {
  bonusBalance: SortOrder
  experience: SortOrder
  id: SortOrder
  lvl: SortOrder
  mainBalance: SortOrder
  sumOfDeposits: SortOrder
  sumOfRefunds: SortOrder
}

type UserCountAggregateOutputType {
  TGLink: Int!
  VKLink: Int!
  _all: Int!
  bonusBalance: Int!
  createdAt: Int!
  discordLink: Int!
  email: Int!
  experience: Int!
  firstDateAuth: Int!
  id: Int!
  lastActivity: Int!
  lvl: Int!
  mainBalance: Int!
  role: Int!
  steamAvatar: Int!
  steamID: Int!
  steamName: Int!
  sumOfDeposits: Int!
  sumOfRefunds: Int!
}

input UserCountOrderByAggregateInput {
  TGLink: SortOrder
  VKLink: SortOrder
  bonusBalance: SortOrder
  createdAt: SortOrder
  discordLink: SortOrder
  email: SortOrder
  experience: SortOrder
  firstDateAuth: SortOrder
  id: SortOrder
  lastActivity: SortOrder
  lvl: SortOrder
  mainBalance: SortOrder
  role: SortOrder
  steamAvatar: SortOrder
  steamID: SortOrder
  steamName: SortOrder
  sumOfDeposits: SortOrder
  sumOfRefunds: SortOrder
}

type UserCountOutputType {
  Inventory: Int!
  Purchase: Int!
  Tokens: Int!
  Transaction: Int!
  TransfersReceiver: Int!
  TransfersSender: Int!
}

input UserCreateInput {
  Inventory: InventoryCreateNestedManyWithoutUserInput
  Purchase: PurchaseCreateNestedManyWithoutUserInput
  TGLink: String
  Tokens: TokenCreateNestedManyWithoutUserInput
  Transaction: TransactionCreateNestedManyWithoutUserInput
  TransfersReceiver: TransfersCreateNestedManyWithoutReceiverInput
  TransfersSender: TransfersCreateNestedManyWithoutSenderInput
  VKLink: String
  bonusBalance: Int
  createdAt: DateTime
  discordLink: String
  email: String
  experience: Int
  firstDateAuth: DateTime
  lastActivity: DateTime
  lvl: Int
  mainBalance: Int!
  role: USER_ROLE
  steamAvatar: String!
  steamID: String!
  steamName: String!
  sumOfDeposits: Int
  sumOfRefunds: Int
}

input UserCreateManyInput {
  TGLink: String
  VKLink: String
  bonusBalance: Int
  createdAt: DateTime
  discordLink: String
  email: String
  experience: Int
  firstDateAuth: DateTime
  id: Int
  lastActivity: DateTime
  lvl: Int
  mainBalance: Int!
  role: USER_ROLE
  steamAvatar: String!
  steamID: String!
  steamName: String!
  sumOfDeposits: Int
  sumOfRefunds: Int
}

input UserCreateNestedOneWithoutInventoryInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutInventoryInput
  create: UserUncheckedCreateWithoutInventoryInput
}

input UserCreateNestedOneWithoutPurchaseInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutPurchaseInput
  create: UserUncheckedCreateWithoutPurchaseInput
}

input UserCreateNestedOneWithoutTokensInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutTokensInput
  create: UserUncheckedCreateWithoutTokensInput
}

input UserCreateNestedOneWithoutTransactionInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutTransactionInput
  create: UserUncheckedCreateWithoutTransactionInput
}

input UserCreateNestedOneWithoutTransfersReceiverInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutTransfersReceiverInput
  create: UserUncheckedCreateWithoutTransfersReceiverInput
}

input UserCreateNestedOneWithoutTransfersSenderInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutTransfersSenderInput
  create: UserUncheckedCreateWithoutTransfersSenderInput
}

input UserCreateOrConnectWithoutInventoryInput {
  create: UserUncheckedCreateWithoutInventoryInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutPurchaseInput {
  create: UserUncheckedCreateWithoutPurchaseInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutTokensInput {
  create: UserUncheckedCreateWithoutTokensInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutTransactionInput {
  create: UserUncheckedCreateWithoutTransactionInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutTransfersReceiverInput {
  create: UserUncheckedCreateWithoutTransfersReceiverInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutTransfersSenderInput {
  create: UserUncheckedCreateWithoutTransfersSenderInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutInventoryInput {
  Purchase: PurchaseCreateNestedManyWithoutUserInput
  TGLink: String
  Tokens: TokenCreateNestedManyWithoutUserInput
  Transaction: TransactionCreateNestedManyWithoutUserInput
  TransfersReceiver: TransfersCreateNestedManyWithoutReceiverInput
  TransfersSender: TransfersCreateNestedManyWithoutSenderInput
  VKLink: String
  bonusBalance: Int
  createdAt: DateTime
  discordLink: String
  email: String
  experience: Int
  firstDateAuth: DateTime
  lastActivity: DateTime
  lvl: Int
  mainBalance: Int!
  role: USER_ROLE
  steamAvatar: String!
  steamID: String!
  steamName: String!
  sumOfDeposits: Int
  sumOfRefunds: Int
}

input UserCreateWithoutPurchaseInput {
  Inventory: InventoryCreateNestedManyWithoutUserInput
  TGLink: String
  Tokens: TokenCreateNestedManyWithoutUserInput
  Transaction: TransactionCreateNestedManyWithoutUserInput
  TransfersReceiver: TransfersCreateNestedManyWithoutReceiverInput
  TransfersSender: TransfersCreateNestedManyWithoutSenderInput
  VKLink: String
  bonusBalance: Int
  createdAt: DateTime
  discordLink: String
  email: String
  experience: Int
  firstDateAuth: DateTime
  lastActivity: DateTime
  lvl: Int
  mainBalance: Int!
  role: USER_ROLE
  steamAvatar: String!
  steamID: String!
  steamName: String!
  sumOfDeposits: Int
  sumOfRefunds: Int
}

input UserCreateWithoutTokensInput {
  Inventory: InventoryCreateNestedManyWithoutUserInput
  Purchase: PurchaseCreateNestedManyWithoutUserInput
  TGLink: String
  Transaction: TransactionCreateNestedManyWithoutUserInput
  TransfersReceiver: TransfersCreateNestedManyWithoutReceiverInput
  TransfersSender: TransfersCreateNestedManyWithoutSenderInput
  VKLink: String
  bonusBalance: Int
  createdAt: DateTime
  discordLink: String
  email: String
  experience: Int
  firstDateAuth: DateTime
  lastActivity: DateTime
  lvl: Int
  mainBalance: Int!
  role: USER_ROLE
  steamAvatar: String!
  steamID: String!
  steamName: String!
  sumOfDeposits: Int
  sumOfRefunds: Int
}

input UserCreateWithoutTransactionInput {
  Inventory: InventoryCreateNestedManyWithoutUserInput
  Purchase: PurchaseCreateNestedManyWithoutUserInput
  TGLink: String
  Tokens: TokenCreateNestedManyWithoutUserInput
  TransfersReceiver: TransfersCreateNestedManyWithoutReceiverInput
  TransfersSender: TransfersCreateNestedManyWithoutSenderInput
  VKLink: String
  bonusBalance: Int
  createdAt: DateTime
  discordLink: String
  email: String
  experience: Int
  firstDateAuth: DateTime
  lastActivity: DateTime
  lvl: Int
  mainBalance: Int!
  role: USER_ROLE
  steamAvatar: String!
  steamID: String!
  steamName: String!
  sumOfDeposits: Int
  sumOfRefunds: Int
}

input UserCreateWithoutTransfersReceiverInput {
  Inventory: InventoryCreateNestedManyWithoutUserInput
  Purchase: PurchaseCreateNestedManyWithoutUserInput
  TGLink: String
  Tokens: TokenCreateNestedManyWithoutUserInput
  Transaction: TransactionCreateNestedManyWithoutUserInput
  TransfersSender: TransfersCreateNestedManyWithoutSenderInput
  VKLink: String
  bonusBalance: Int
  createdAt: DateTime
  discordLink: String
  email: String
  experience: Int
  firstDateAuth: DateTime
  lastActivity: DateTime
  lvl: Int
  mainBalance: Int!
  role: USER_ROLE
  steamAvatar: String!
  steamID: String!
  steamName: String!
  sumOfDeposits: Int
  sumOfRefunds: Int
}

input UserCreateWithoutTransfersSenderInput {
  Inventory: InventoryCreateNestedManyWithoutUserInput
  Purchase: PurchaseCreateNestedManyWithoutUserInput
  TGLink: String
  Tokens: TokenCreateNestedManyWithoutUserInput
  Transaction: TransactionCreateNestedManyWithoutUserInput
  TransfersReceiver: TransfersCreateNestedManyWithoutReceiverInput
  VKLink: String
  bonusBalance: Int
  createdAt: DateTime
  discordLink: String
  email: String
  experience: Int
  firstDateAuth: DateTime
  lastActivity: DateTime
  lvl: Int
  mainBalance: Int!
  role: USER_ROLE
  steamAvatar: String!
  steamID: String!
  steamName: String!
  sumOfDeposits: Int
  sumOfRefunds: Int
}

type UserMaxAggregateOutputType {
  TGLink: String
  VKLink: String
  bonusBalance: Int
  createdAt: DateTime
  discordLink: String
  email: String
  experience: Int
  firstDateAuth: DateTime
  id: Int
  lastActivity: DateTime
  lvl: Int
  mainBalance: Int
  role: USER_ROLE
  steamAvatar: String
  steamID: String
  steamName: String
  sumOfDeposits: Int
  sumOfRefunds: Int
}

input UserMaxOrderByAggregateInput {
  TGLink: SortOrder
  VKLink: SortOrder
  bonusBalance: SortOrder
  createdAt: SortOrder
  discordLink: SortOrder
  email: SortOrder
  experience: SortOrder
  firstDateAuth: SortOrder
  id: SortOrder
  lastActivity: SortOrder
  lvl: SortOrder
  mainBalance: SortOrder
  role: SortOrder
  steamAvatar: SortOrder
  steamID: SortOrder
  steamName: SortOrder
  sumOfDeposits: SortOrder
  sumOfRefunds: SortOrder
}

type UserMinAggregateOutputType {
  TGLink: String
  VKLink: String
  bonusBalance: Int
  createdAt: DateTime
  discordLink: String
  email: String
  experience: Int
  firstDateAuth: DateTime
  id: Int
  lastActivity: DateTime
  lvl: Int
  mainBalance: Int
  role: USER_ROLE
  steamAvatar: String
  steamID: String
  steamName: String
  sumOfDeposits: Int
  sumOfRefunds: Int
}

input UserMinOrderByAggregateInput {
  TGLink: SortOrder
  VKLink: SortOrder
  bonusBalance: SortOrder
  createdAt: SortOrder
  discordLink: SortOrder
  email: SortOrder
  experience: SortOrder
  firstDateAuth: SortOrder
  id: SortOrder
  lastActivity: SortOrder
  lvl: SortOrder
  mainBalance: SortOrder
  role: SortOrder
  steamAvatar: SortOrder
  steamID: SortOrder
  steamName: SortOrder
  sumOfDeposits: SortOrder
  sumOfRefunds: SortOrder
}

input UserOrderByWithAggregationInput {
  TGLink: SortOrder
  VKLink: SortOrder
  _avg: UserAvgOrderByAggregateInput
  _count: UserCountOrderByAggregateInput
  _max: UserMaxOrderByAggregateInput
  _min: UserMinOrderByAggregateInput
  _sum: UserSumOrderByAggregateInput
  bonusBalance: SortOrder
  createdAt: SortOrder
  discordLink: SortOrder
  email: SortOrder
  experience: SortOrder
  firstDateAuth: SortOrder
  id: SortOrder
  lastActivity: SortOrder
  lvl: SortOrder
  mainBalance: SortOrder
  role: SortOrder
  steamAvatar: SortOrder
  steamID: SortOrder
  steamName: SortOrder
  sumOfDeposits: SortOrder
  sumOfRefunds: SortOrder
}

input UserOrderByWithRelationInput {
  Inventory: InventoryOrderByRelationAggregateInput
  Purchase: PurchaseOrderByRelationAggregateInput
  TGLink: SortOrder
  Tokens: TokenOrderByRelationAggregateInput
  Transaction: TransactionOrderByRelationAggregateInput
  TransfersReceiver: TransfersOrderByRelationAggregateInput
  TransfersSender: TransfersOrderByRelationAggregateInput
  VKLink: SortOrder
  bonusBalance: SortOrder
  createdAt: SortOrder
  discordLink: SortOrder
  email: SortOrder
  experience: SortOrder
  firstDateAuth: SortOrder
  id: SortOrder
  lastActivity: SortOrder
  lvl: SortOrder
  mainBalance: SortOrder
  role: SortOrder
  steamAvatar: SortOrder
  steamID: SortOrder
  steamName: SortOrder
  sumOfDeposits: SortOrder
  sumOfRefunds: SortOrder
}

input UserRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

enum UserScalarFieldEnum {
  TGLink
  VKLink
  bonusBalance
  createdAt
  discordLink
  email
  experience
  firstDateAuth
  id
  lastActivity
  lvl
  mainBalance
  role
  steamAvatar
  steamID
  steamName
  sumOfDeposits
  sumOfRefunds
}

input UserScalarWhereWithAggregatesInput {
  AND: [UserScalarWhereWithAggregatesInput]
  NOT: [UserScalarWhereWithAggregatesInput]
  OR: [UserScalarWhereWithAggregatesInput]
  TGLink: StringNullableWithAggregatesFilter
  VKLink: StringNullableWithAggregatesFilter
  bonusBalance: IntWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  discordLink: StringNullableWithAggregatesFilter
  email: StringNullableWithAggregatesFilter
  experience: IntWithAggregatesFilter
  firstDateAuth: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  lastActivity: DateTimeNullableWithAggregatesFilter
  lvl: IntWithAggregatesFilter
  mainBalance: IntWithAggregatesFilter
  role: EnumUSER_ROLEWithAggregatesFilter
  steamAvatar: StringWithAggregatesFilter
  steamID: StringWithAggregatesFilter
  steamName: StringWithAggregatesFilter
  sumOfDeposits: IntWithAggregatesFilter
  sumOfRefunds: IntWithAggregatesFilter
}

type UserSumAggregateOutputType {
  bonusBalance: Int
  experience: Int
  id: Int
  lvl: Int
  mainBalance: Int
  sumOfDeposits: Int
  sumOfRefunds: Int
}

input UserSumOrderByAggregateInput {
  bonusBalance: SortOrder
  experience: SortOrder
  id: SortOrder
  lvl: SortOrder
  mainBalance: SortOrder
  sumOfDeposits: SortOrder
  sumOfRefunds: SortOrder
}

input UserUncheckedCreateInput {
  Inventory: InventoryUncheckedCreateNestedManyWithoutUserInput
  Purchase: PurchaseUncheckedCreateNestedManyWithoutUserInput
  TGLink: String
  Tokens: TokenUncheckedCreateNestedManyWithoutUserInput
  Transaction: TransactionUncheckedCreateNestedManyWithoutUserInput
  TransfersReceiver: TransfersUncheckedCreateNestedManyWithoutReceiverInput
  TransfersSender: TransfersUncheckedCreateNestedManyWithoutSenderInput
  VKLink: String
  bonusBalance: Int
  createdAt: DateTime
  discordLink: String
  email: String
  experience: Int
  firstDateAuth: DateTime
  id: Int
  lastActivity: DateTime
  lvl: Int
  mainBalance: Int!
  role: USER_ROLE
  steamAvatar: String!
  steamID: String!
  steamName: String!
  sumOfDeposits: Int
  sumOfRefunds: Int
}

input UserUncheckedCreateWithoutInventoryInput {
  Purchase: PurchaseUncheckedCreateNestedManyWithoutUserInput
  TGLink: String
  Tokens: TokenUncheckedCreateNestedManyWithoutUserInput
  Transaction: TransactionUncheckedCreateNestedManyWithoutUserInput
  TransfersReceiver: TransfersUncheckedCreateNestedManyWithoutReceiverInput
  TransfersSender: TransfersUncheckedCreateNestedManyWithoutSenderInput
  VKLink: String
  bonusBalance: Int
  createdAt: DateTime
  discordLink: String
  email: String
  experience: Int
  firstDateAuth: DateTime
  id: Int
  lastActivity: DateTime
  lvl: Int
  mainBalance: Int!
  role: USER_ROLE
  steamAvatar: String!
  steamID: String!
  steamName: String!
  sumOfDeposits: Int
  sumOfRefunds: Int
}

input UserUncheckedCreateWithoutPurchaseInput {
  Inventory: InventoryUncheckedCreateNestedManyWithoutUserInput
  TGLink: String
  Tokens: TokenUncheckedCreateNestedManyWithoutUserInput
  Transaction: TransactionUncheckedCreateNestedManyWithoutUserInput
  TransfersReceiver: TransfersUncheckedCreateNestedManyWithoutReceiverInput
  TransfersSender: TransfersUncheckedCreateNestedManyWithoutSenderInput
  VKLink: String
  bonusBalance: Int
  createdAt: DateTime
  discordLink: String
  email: String
  experience: Int
  firstDateAuth: DateTime
  id: Int
  lastActivity: DateTime
  lvl: Int
  mainBalance: Int!
  role: USER_ROLE
  steamAvatar: String!
  steamID: String!
  steamName: String!
  sumOfDeposits: Int
  sumOfRefunds: Int
}

input UserUncheckedCreateWithoutTokensInput {
  Inventory: InventoryUncheckedCreateNestedManyWithoutUserInput
  Purchase: PurchaseUncheckedCreateNestedManyWithoutUserInput
  TGLink: String
  Transaction: TransactionUncheckedCreateNestedManyWithoutUserInput
  TransfersReceiver: TransfersUncheckedCreateNestedManyWithoutReceiverInput
  TransfersSender: TransfersUncheckedCreateNestedManyWithoutSenderInput
  VKLink: String
  bonusBalance: Int
  createdAt: DateTime
  discordLink: String
  email: String
  experience: Int
  firstDateAuth: DateTime
  id: Int
  lastActivity: DateTime
  lvl: Int
  mainBalance: Int!
  role: USER_ROLE
  steamAvatar: String!
  steamID: String!
  steamName: String!
  sumOfDeposits: Int
  sumOfRefunds: Int
}

input UserUncheckedCreateWithoutTransactionInput {
  Inventory: InventoryUncheckedCreateNestedManyWithoutUserInput
  Purchase: PurchaseUncheckedCreateNestedManyWithoutUserInput
  TGLink: String
  Tokens: TokenUncheckedCreateNestedManyWithoutUserInput
  TransfersReceiver: TransfersUncheckedCreateNestedManyWithoutReceiverInput
  TransfersSender: TransfersUncheckedCreateNestedManyWithoutSenderInput
  VKLink: String
  bonusBalance: Int
  createdAt: DateTime
  discordLink: String
  email: String
  experience: Int
  firstDateAuth: DateTime
  id: Int
  lastActivity: DateTime
  lvl: Int
  mainBalance: Int!
  role: USER_ROLE
  steamAvatar: String!
  steamID: String!
  steamName: String!
  sumOfDeposits: Int
  sumOfRefunds: Int
}

input UserUncheckedCreateWithoutTransfersReceiverInput {
  Inventory: InventoryUncheckedCreateNestedManyWithoutUserInput
  Purchase: PurchaseUncheckedCreateNestedManyWithoutUserInput
  TGLink: String
  Tokens: TokenUncheckedCreateNestedManyWithoutUserInput
  Transaction: TransactionUncheckedCreateNestedManyWithoutUserInput
  TransfersSender: TransfersUncheckedCreateNestedManyWithoutSenderInput
  VKLink: String
  bonusBalance: Int
  createdAt: DateTime
  discordLink: String
  email: String
  experience: Int
  firstDateAuth: DateTime
  id: Int
  lastActivity: DateTime
  lvl: Int
  mainBalance: Int!
  role: USER_ROLE
  steamAvatar: String!
  steamID: String!
  steamName: String!
  sumOfDeposits: Int
  sumOfRefunds: Int
}

input UserUncheckedCreateWithoutTransfersSenderInput {
  Inventory: InventoryUncheckedCreateNestedManyWithoutUserInput
  Purchase: PurchaseUncheckedCreateNestedManyWithoutUserInput
  TGLink: String
  Tokens: TokenUncheckedCreateNestedManyWithoutUserInput
  Transaction: TransactionUncheckedCreateNestedManyWithoutUserInput
  TransfersReceiver: TransfersUncheckedCreateNestedManyWithoutReceiverInput
  VKLink: String
  bonusBalance: Int
  createdAt: DateTime
  discordLink: String
  email: String
  experience: Int
  firstDateAuth: DateTime
  id: Int
  lastActivity: DateTime
  lvl: Int
  mainBalance: Int!
  role: USER_ROLE
  steamAvatar: String!
  steamID: String!
  steamName: String!
  sumOfDeposits: Int
  sumOfRefunds: Int
}

input UserUncheckedUpdateInput {
  Inventory: InventoryUncheckedUpdateManyWithoutUserInput
  Purchase: PurchaseUncheckedUpdateManyWithoutUserInput
  TGLink: NullableStringFieldUpdateOperationsInput
  Tokens: TokenUncheckedUpdateManyWithoutUserInput
  Transaction: TransactionUncheckedUpdateManyWithoutUserInput
  TransfersReceiver: TransfersUncheckedUpdateManyWithoutReceiverInput
  TransfersSender: TransfersUncheckedUpdateManyWithoutSenderInput
  VKLink: NullableStringFieldUpdateOperationsInput
  bonusBalance: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discordLink: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  experience: IntFieldUpdateOperationsInput
  firstDateAuth: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  lastActivity: NullableDateTimeFieldUpdateOperationsInput
  lvl: IntFieldUpdateOperationsInput
  mainBalance: IntFieldUpdateOperationsInput
  role: EnumUSER_ROLEFieldUpdateOperationsInput
  steamAvatar: StringFieldUpdateOperationsInput
  steamID: StringFieldUpdateOperationsInput
  steamName: StringFieldUpdateOperationsInput
  sumOfDeposits: IntFieldUpdateOperationsInput
  sumOfRefunds: IntFieldUpdateOperationsInput
}

input UserUncheckedUpdateManyInput {
  TGLink: NullableStringFieldUpdateOperationsInput
  VKLink: NullableStringFieldUpdateOperationsInput
  bonusBalance: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discordLink: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  experience: IntFieldUpdateOperationsInput
  firstDateAuth: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  lastActivity: NullableDateTimeFieldUpdateOperationsInput
  lvl: IntFieldUpdateOperationsInput
  mainBalance: IntFieldUpdateOperationsInput
  role: EnumUSER_ROLEFieldUpdateOperationsInput
  steamAvatar: StringFieldUpdateOperationsInput
  steamID: StringFieldUpdateOperationsInput
  steamName: StringFieldUpdateOperationsInput
  sumOfDeposits: IntFieldUpdateOperationsInput
  sumOfRefunds: IntFieldUpdateOperationsInput
}

input UserUncheckedUpdateWithoutInventoryInput {
  Purchase: PurchaseUncheckedUpdateManyWithoutUserInput
  TGLink: NullableStringFieldUpdateOperationsInput
  Tokens: TokenUncheckedUpdateManyWithoutUserInput
  Transaction: TransactionUncheckedUpdateManyWithoutUserInput
  TransfersReceiver: TransfersUncheckedUpdateManyWithoutReceiverInput
  TransfersSender: TransfersUncheckedUpdateManyWithoutSenderInput
  VKLink: NullableStringFieldUpdateOperationsInput
  bonusBalance: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discordLink: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  experience: IntFieldUpdateOperationsInput
  firstDateAuth: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  lastActivity: NullableDateTimeFieldUpdateOperationsInput
  lvl: IntFieldUpdateOperationsInput
  mainBalance: IntFieldUpdateOperationsInput
  role: EnumUSER_ROLEFieldUpdateOperationsInput
  steamAvatar: StringFieldUpdateOperationsInput
  steamID: StringFieldUpdateOperationsInput
  steamName: StringFieldUpdateOperationsInput
  sumOfDeposits: IntFieldUpdateOperationsInput
  sumOfRefunds: IntFieldUpdateOperationsInput
}

input UserUncheckedUpdateWithoutPurchaseInput {
  Inventory: InventoryUncheckedUpdateManyWithoutUserInput
  TGLink: NullableStringFieldUpdateOperationsInput
  Tokens: TokenUncheckedUpdateManyWithoutUserInput
  Transaction: TransactionUncheckedUpdateManyWithoutUserInput
  TransfersReceiver: TransfersUncheckedUpdateManyWithoutReceiverInput
  TransfersSender: TransfersUncheckedUpdateManyWithoutSenderInput
  VKLink: NullableStringFieldUpdateOperationsInput
  bonusBalance: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discordLink: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  experience: IntFieldUpdateOperationsInput
  firstDateAuth: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  lastActivity: NullableDateTimeFieldUpdateOperationsInput
  lvl: IntFieldUpdateOperationsInput
  mainBalance: IntFieldUpdateOperationsInput
  role: EnumUSER_ROLEFieldUpdateOperationsInput
  steamAvatar: StringFieldUpdateOperationsInput
  steamID: StringFieldUpdateOperationsInput
  steamName: StringFieldUpdateOperationsInput
  sumOfDeposits: IntFieldUpdateOperationsInput
  sumOfRefunds: IntFieldUpdateOperationsInput
}

input UserUncheckedUpdateWithoutTokensInput {
  Inventory: InventoryUncheckedUpdateManyWithoutUserInput
  Purchase: PurchaseUncheckedUpdateManyWithoutUserInput
  TGLink: NullableStringFieldUpdateOperationsInput
  Transaction: TransactionUncheckedUpdateManyWithoutUserInput
  TransfersReceiver: TransfersUncheckedUpdateManyWithoutReceiverInput
  TransfersSender: TransfersUncheckedUpdateManyWithoutSenderInput
  VKLink: NullableStringFieldUpdateOperationsInput
  bonusBalance: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discordLink: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  experience: IntFieldUpdateOperationsInput
  firstDateAuth: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  lastActivity: NullableDateTimeFieldUpdateOperationsInput
  lvl: IntFieldUpdateOperationsInput
  mainBalance: IntFieldUpdateOperationsInput
  role: EnumUSER_ROLEFieldUpdateOperationsInput
  steamAvatar: StringFieldUpdateOperationsInput
  steamID: StringFieldUpdateOperationsInput
  steamName: StringFieldUpdateOperationsInput
  sumOfDeposits: IntFieldUpdateOperationsInput
  sumOfRefunds: IntFieldUpdateOperationsInput
}

input UserUncheckedUpdateWithoutTransactionInput {
  Inventory: InventoryUncheckedUpdateManyWithoutUserInput
  Purchase: PurchaseUncheckedUpdateManyWithoutUserInput
  TGLink: NullableStringFieldUpdateOperationsInput
  Tokens: TokenUncheckedUpdateManyWithoutUserInput
  TransfersReceiver: TransfersUncheckedUpdateManyWithoutReceiverInput
  TransfersSender: TransfersUncheckedUpdateManyWithoutSenderInput
  VKLink: NullableStringFieldUpdateOperationsInput
  bonusBalance: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discordLink: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  experience: IntFieldUpdateOperationsInput
  firstDateAuth: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  lastActivity: NullableDateTimeFieldUpdateOperationsInput
  lvl: IntFieldUpdateOperationsInput
  mainBalance: IntFieldUpdateOperationsInput
  role: EnumUSER_ROLEFieldUpdateOperationsInput
  steamAvatar: StringFieldUpdateOperationsInput
  steamID: StringFieldUpdateOperationsInput
  steamName: StringFieldUpdateOperationsInput
  sumOfDeposits: IntFieldUpdateOperationsInput
  sumOfRefunds: IntFieldUpdateOperationsInput
}

input UserUncheckedUpdateWithoutTransfersReceiverInput {
  Inventory: InventoryUncheckedUpdateManyWithoutUserInput
  Purchase: PurchaseUncheckedUpdateManyWithoutUserInput
  TGLink: NullableStringFieldUpdateOperationsInput
  Tokens: TokenUncheckedUpdateManyWithoutUserInput
  Transaction: TransactionUncheckedUpdateManyWithoutUserInput
  TransfersSender: TransfersUncheckedUpdateManyWithoutSenderInput
  VKLink: NullableStringFieldUpdateOperationsInput
  bonusBalance: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discordLink: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  experience: IntFieldUpdateOperationsInput
  firstDateAuth: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  lastActivity: NullableDateTimeFieldUpdateOperationsInput
  lvl: IntFieldUpdateOperationsInput
  mainBalance: IntFieldUpdateOperationsInput
  role: EnumUSER_ROLEFieldUpdateOperationsInput
  steamAvatar: StringFieldUpdateOperationsInput
  steamID: StringFieldUpdateOperationsInput
  steamName: StringFieldUpdateOperationsInput
  sumOfDeposits: IntFieldUpdateOperationsInput
  sumOfRefunds: IntFieldUpdateOperationsInput
}

input UserUncheckedUpdateWithoutTransfersSenderInput {
  Inventory: InventoryUncheckedUpdateManyWithoutUserInput
  Purchase: PurchaseUncheckedUpdateManyWithoutUserInput
  TGLink: NullableStringFieldUpdateOperationsInput
  Tokens: TokenUncheckedUpdateManyWithoutUserInput
  Transaction: TransactionUncheckedUpdateManyWithoutUserInput
  TransfersReceiver: TransfersUncheckedUpdateManyWithoutReceiverInput
  VKLink: NullableStringFieldUpdateOperationsInput
  bonusBalance: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discordLink: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  experience: IntFieldUpdateOperationsInput
  firstDateAuth: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  lastActivity: NullableDateTimeFieldUpdateOperationsInput
  lvl: IntFieldUpdateOperationsInput
  mainBalance: IntFieldUpdateOperationsInput
  role: EnumUSER_ROLEFieldUpdateOperationsInput
  steamAvatar: StringFieldUpdateOperationsInput
  steamID: StringFieldUpdateOperationsInput
  steamName: StringFieldUpdateOperationsInput
  sumOfDeposits: IntFieldUpdateOperationsInput
  sumOfRefunds: IntFieldUpdateOperationsInput
}

input UserUpdateInput {
  Inventory: InventoryUpdateManyWithoutUserInput
  Purchase: PurchaseUpdateManyWithoutUserInput
  TGLink: NullableStringFieldUpdateOperationsInput
  Tokens: TokenUpdateManyWithoutUserInput
  Transaction: TransactionUpdateManyWithoutUserInput
  TransfersReceiver: TransfersUpdateManyWithoutReceiverInput
  TransfersSender: TransfersUpdateManyWithoutSenderInput
  VKLink: NullableStringFieldUpdateOperationsInput
  bonusBalance: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discordLink: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  experience: IntFieldUpdateOperationsInput
  firstDateAuth: DateTimeFieldUpdateOperationsInput
  lastActivity: NullableDateTimeFieldUpdateOperationsInput
  lvl: IntFieldUpdateOperationsInput
  mainBalance: IntFieldUpdateOperationsInput
  role: EnumUSER_ROLEFieldUpdateOperationsInput
  steamAvatar: StringFieldUpdateOperationsInput
  steamID: StringFieldUpdateOperationsInput
  steamName: StringFieldUpdateOperationsInput
  sumOfDeposits: IntFieldUpdateOperationsInput
  sumOfRefunds: IntFieldUpdateOperationsInput
}

input UserUpdateManyMutationInput {
  TGLink: NullableStringFieldUpdateOperationsInput
  VKLink: NullableStringFieldUpdateOperationsInput
  bonusBalance: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discordLink: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  experience: IntFieldUpdateOperationsInput
  firstDateAuth: DateTimeFieldUpdateOperationsInput
  lastActivity: NullableDateTimeFieldUpdateOperationsInput
  lvl: IntFieldUpdateOperationsInput
  mainBalance: IntFieldUpdateOperationsInput
  role: EnumUSER_ROLEFieldUpdateOperationsInput
  steamAvatar: StringFieldUpdateOperationsInput
  steamID: StringFieldUpdateOperationsInput
  steamName: StringFieldUpdateOperationsInput
  sumOfDeposits: IntFieldUpdateOperationsInput
  sumOfRefunds: IntFieldUpdateOperationsInput
}

input UserUpdateOneRequiredWithoutInventoryInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutInventoryInput
  create: UserUncheckedCreateWithoutInventoryInput
  update: UserUncheckedUpdateWithoutInventoryInput
  upsert: UserUpsertWithoutInventoryInput
}

input UserUpdateOneRequiredWithoutTransfersReceiverInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutTransfersReceiverInput
  create: UserUncheckedCreateWithoutTransfersReceiverInput
  update: UserUncheckedUpdateWithoutTransfersReceiverInput
  upsert: UserUpsertWithoutTransfersReceiverInput
}

input UserUpdateOneRequiredWithoutTransfersSenderInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutTransfersSenderInput
  create: UserUncheckedCreateWithoutTransfersSenderInput
  update: UserUncheckedUpdateWithoutTransfersSenderInput
  upsert: UserUpsertWithoutTransfersSenderInput
}

input UserUpdateOneWithoutPurchaseInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutPurchaseInput
  create: UserUncheckedCreateWithoutPurchaseInput
  delete: Boolean
  disconnect: Boolean
  update: UserUncheckedUpdateWithoutPurchaseInput
  upsert: UserUpsertWithoutPurchaseInput
}

input UserUpdateOneWithoutTokensInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutTokensInput
  create: UserUncheckedCreateWithoutTokensInput
  delete: Boolean
  disconnect: Boolean
  update: UserUncheckedUpdateWithoutTokensInput
  upsert: UserUpsertWithoutTokensInput
}

input UserUpdateOneWithoutTransactionInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutTransactionInput
  create: UserUncheckedCreateWithoutTransactionInput
  delete: Boolean
  disconnect: Boolean
  update: UserUncheckedUpdateWithoutTransactionInput
  upsert: UserUpsertWithoutTransactionInput
}

input UserUpdateWithoutInventoryInput {
  Purchase: PurchaseUpdateManyWithoutUserInput
  TGLink: NullableStringFieldUpdateOperationsInput
  Tokens: TokenUpdateManyWithoutUserInput
  Transaction: TransactionUpdateManyWithoutUserInput
  TransfersReceiver: TransfersUpdateManyWithoutReceiverInput
  TransfersSender: TransfersUpdateManyWithoutSenderInput
  VKLink: NullableStringFieldUpdateOperationsInput
  bonusBalance: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discordLink: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  experience: IntFieldUpdateOperationsInput
  firstDateAuth: DateTimeFieldUpdateOperationsInput
  lastActivity: NullableDateTimeFieldUpdateOperationsInput
  lvl: IntFieldUpdateOperationsInput
  mainBalance: IntFieldUpdateOperationsInput
  role: EnumUSER_ROLEFieldUpdateOperationsInput
  steamAvatar: StringFieldUpdateOperationsInput
  steamID: StringFieldUpdateOperationsInput
  steamName: StringFieldUpdateOperationsInput
  sumOfDeposits: IntFieldUpdateOperationsInput
  sumOfRefunds: IntFieldUpdateOperationsInput
}

input UserUpdateWithoutPurchaseInput {
  Inventory: InventoryUpdateManyWithoutUserInput
  TGLink: NullableStringFieldUpdateOperationsInput
  Tokens: TokenUpdateManyWithoutUserInput
  Transaction: TransactionUpdateManyWithoutUserInput
  TransfersReceiver: TransfersUpdateManyWithoutReceiverInput
  TransfersSender: TransfersUpdateManyWithoutSenderInput
  VKLink: NullableStringFieldUpdateOperationsInput
  bonusBalance: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discordLink: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  experience: IntFieldUpdateOperationsInput
  firstDateAuth: DateTimeFieldUpdateOperationsInput
  lastActivity: NullableDateTimeFieldUpdateOperationsInput
  lvl: IntFieldUpdateOperationsInput
  mainBalance: IntFieldUpdateOperationsInput
  role: EnumUSER_ROLEFieldUpdateOperationsInput
  steamAvatar: StringFieldUpdateOperationsInput
  steamID: StringFieldUpdateOperationsInput
  steamName: StringFieldUpdateOperationsInput
  sumOfDeposits: IntFieldUpdateOperationsInput
  sumOfRefunds: IntFieldUpdateOperationsInput
}

input UserUpdateWithoutTokensInput {
  Inventory: InventoryUpdateManyWithoutUserInput
  Purchase: PurchaseUpdateManyWithoutUserInput
  TGLink: NullableStringFieldUpdateOperationsInput
  Transaction: TransactionUpdateManyWithoutUserInput
  TransfersReceiver: TransfersUpdateManyWithoutReceiverInput
  TransfersSender: TransfersUpdateManyWithoutSenderInput
  VKLink: NullableStringFieldUpdateOperationsInput
  bonusBalance: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discordLink: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  experience: IntFieldUpdateOperationsInput
  firstDateAuth: DateTimeFieldUpdateOperationsInput
  lastActivity: NullableDateTimeFieldUpdateOperationsInput
  lvl: IntFieldUpdateOperationsInput
  mainBalance: IntFieldUpdateOperationsInput
  role: EnumUSER_ROLEFieldUpdateOperationsInput
  steamAvatar: StringFieldUpdateOperationsInput
  steamID: StringFieldUpdateOperationsInput
  steamName: StringFieldUpdateOperationsInput
  sumOfDeposits: IntFieldUpdateOperationsInput
  sumOfRefunds: IntFieldUpdateOperationsInput
}

input UserUpdateWithoutTransactionInput {
  Inventory: InventoryUpdateManyWithoutUserInput
  Purchase: PurchaseUpdateManyWithoutUserInput
  TGLink: NullableStringFieldUpdateOperationsInput
  Tokens: TokenUpdateManyWithoutUserInput
  TransfersReceiver: TransfersUpdateManyWithoutReceiverInput
  TransfersSender: TransfersUpdateManyWithoutSenderInput
  VKLink: NullableStringFieldUpdateOperationsInput
  bonusBalance: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discordLink: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  experience: IntFieldUpdateOperationsInput
  firstDateAuth: DateTimeFieldUpdateOperationsInput
  lastActivity: NullableDateTimeFieldUpdateOperationsInput
  lvl: IntFieldUpdateOperationsInput
  mainBalance: IntFieldUpdateOperationsInput
  role: EnumUSER_ROLEFieldUpdateOperationsInput
  steamAvatar: StringFieldUpdateOperationsInput
  steamID: StringFieldUpdateOperationsInput
  steamName: StringFieldUpdateOperationsInput
  sumOfDeposits: IntFieldUpdateOperationsInput
  sumOfRefunds: IntFieldUpdateOperationsInput
}

input UserUpdateWithoutTransfersReceiverInput {
  Inventory: InventoryUpdateManyWithoutUserInput
  Purchase: PurchaseUpdateManyWithoutUserInput
  TGLink: NullableStringFieldUpdateOperationsInput
  Tokens: TokenUpdateManyWithoutUserInput
  Transaction: TransactionUpdateManyWithoutUserInput
  TransfersSender: TransfersUpdateManyWithoutSenderInput
  VKLink: NullableStringFieldUpdateOperationsInput
  bonusBalance: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discordLink: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  experience: IntFieldUpdateOperationsInput
  firstDateAuth: DateTimeFieldUpdateOperationsInput
  lastActivity: NullableDateTimeFieldUpdateOperationsInput
  lvl: IntFieldUpdateOperationsInput
  mainBalance: IntFieldUpdateOperationsInput
  role: EnumUSER_ROLEFieldUpdateOperationsInput
  steamAvatar: StringFieldUpdateOperationsInput
  steamID: StringFieldUpdateOperationsInput
  steamName: StringFieldUpdateOperationsInput
  sumOfDeposits: IntFieldUpdateOperationsInput
  sumOfRefunds: IntFieldUpdateOperationsInput
}

input UserUpdateWithoutTransfersSenderInput {
  Inventory: InventoryUpdateManyWithoutUserInput
  Purchase: PurchaseUpdateManyWithoutUserInput
  TGLink: NullableStringFieldUpdateOperationsInput
  Tokens: TokenUpdateManyWithoutUserInput
  Transaction: TransactionUpdateManyWithoutUserInput
  TransfersReceiver: TransfersUpdateManyWithoutReceiverInput
  VKLink: NullableStringFieldUpdateOperationsInput
  bonusBalance: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discordLink: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  experience: IntFieldUpdateOperationsInput
  firstDateAuth: DateTimeFieldUpdateOperationsInput
  lastActivity: NullableDateTimeFieldUpdateOperationsInput
  lvl: IntFieldUpdateOperationsInput
  mainBalance: IntFieldUpdateOperationsInput
  role: EnumUSER_ROLEFieldUpdateOperationsInput
  steamAvatar: StringFieldUpdateOperationsInput
  steamID: StringFieldUpdateOperationsInput
  steamName: StringFieldUpdateOperationsInput
  sumOfDeposits: IntFieldUpdateOperationsInput
  sumOfRefunds: IntFieldUpdateOperationsInput
}

input UserUpsertWithoutInventoryInput {
  create: UserUncheckedCreateWithoutInventoryInput!
  update: UserUncheckedUpdateWithoutInventoryInput!
}

input UserUpsertWithoutPurchaseInput {
  create: UserUncheckedCreateWithoutPurchaseInput!
  update: UserUncheckedUpdateWithoutPurchaseInput!
}

input UserUpsertWithoutTokensInput {
  create: UserUncheckedCreateWithoutTokensInput!
  update: UserUncheckedUpdateWithoutTokensInput!
}

input UserUpsertWithoutTransactionInput {
  create: UserUncheckedCreateWithoutTransactionInput!
  update: UserUncheckedUpdateWithoutTransactionInput!
}

input UserUpsertWithoutTransfersReceiverInput {
  create: UserUncheckedCreateWithoutTransfersReceiverInput!
  update: UserUncheckedUpdateWithoutTransfersReceiverInput!
}

input UserUpsertWithoutTransfersSenderInput {
  create: UserUncheckedCreateWithoutTransfersSenderInput!
  update: UserUncheckedUpdateWithoutTransfersSenderInput!
}

input UserWhereInput {
  AND: [UserWhereInput]
  Inventory: InventoryListRelationFilter
  NOT: [UserWhereInput]
  OR: [UserWhereInput]
  Purchase: PurchaseListRelationFilter
  TGLink: StringNullableFilter
  Tokens: TokenListRelationFilter
  Transaction: TransactionListRelationFilter
  TransfersReceiver: TransfersListRelationFilter
  TransfersSender: TransfersListRelationFilter
  VKLink: StringNullableFilter
  bonusBalance: IntFilter
  createdAt: DateTimeFilter
  discordLink: StringNullableFilter
  email: StringNullableFilter
  experience: IntFilter
  firstDateAuth: DateTimeFilter
  id: IntFilter
  lastActivity: DateTimeNullableFilter
  lvl: IntFilter
  mainBalance: IntFilter
  role: EnumUSER_ROLEFilter
  steamAvatar: StringFilter
  steamID: StringFilter
  steamName: StringFilter
  sumOfDeposits: IntFilter
  sumOfRefunds: IntFilter
}

input UserWhereUniqueInput {
  email: String
  id: Int
  steamID: String
}

type baseSettings {
  IPWhiteList: String!
  apiKey: String!
  header: String!
  id: Int!
  mainPage: String!
  panelURLs: Json
  saleMode: Boolean!
  startBalance: Int!
}

input baseSettingsAvgOrderByAggregateInput {
  id: SortOrder
  startBalance: SortOrder
}

input baseSettingsCountOrderByAggregateInput {
  IPWhiteList: SortOrder
  apiKey: SortOrder
  header: SortOrder
  id: SortOrder
  mainPage: SortOrder
  panelURLs: SortOrder
  saleMode: SortOrder
  startBalance: SortOrder
}

input baseSettingsCreateInput {
  IPWhiteList: String!
  apiKey: String!
  header: String!
  mainPage: String!
  panelURLs: Json
  saleMode: Boolean
  startBalance: Int!
}

input baseSettingsCreateManyInput {
  IPWhiteList: String!
  apiKey: String!
  header: String!
  id: Int
  mainPage: String!
  panelURLs: Json
  saleMode: Boolean
  startBalance: Int!
}

input baseSettingsMaxOrderByAggregateInput {
  IPWhiteList: SortOrder
  apiKey: SortOrder
  header: SortOrder
  id: SortOrder
  mainPage: SortOrder
  saleMode: SortOrder
  startBalance: SortOrder
}

input baseSettingsMinOrderByAggregateInput {
  IPWhiteList: SortOrder
  apiKey: SortOrder
  header: SortOrder
  id: SortOrder
  mainPage: SortOrder
  saleMode: SortOrder
  startBalance: SortOrder
}

input baseSettingsOrderByWithAggregationInput {
  IPWhiteList: SortOrder
  _avg: baseSettingsAvgOrderByAggregateInput
  _count: baseSettingsCountOrderByAggregateInput
  _max: baseSettingsMaxOrderByAggregateInput
  _min: baseSettingsMinOrderByAggregateInput
  _sum: baseSettingsSumOrderByAggregateInput
  apiKey: SortOrder
  header: SortOrder
  id: SortOrder
  mainPage: SortOrder
  panelURLs: SortOrder
  saleMode: SortOrder
  startBalance: SortOrder
}

input baseSettingsOrderByWithRelationInput {
  IPWhiteList: SortOrder
  apiKey: SortOrder
  header: SortOrder
  id: SortOrder
  mainPage: SortOrder
  panelURLs: SortOrder
  saleMode: SortOrder
  startBalance: SortOrder
}

input baseSettingsScalarWhereWithAggregatesInput {
  AND: [baseSettingsScalarWhereWithAggregatesInput]
  IPWhiteList: StringWithAggregatesFilter
  NOT: [baseSettingsScalarWhereWithAggregatesInput]
  OR: [baseSettingsScalarWhereWithAggregatesInput]
  apiKey: StringWithAggregatesFilter
  header: StringWithAggregatesFilter
  id: IntWithAggregatesFilter
  mainPage: StringWithAggregatesFilter
  panelURLs: JsonNullableWithAggregatesFilter
  saleMode: BoolWithAggregatesFilter
  startBalance: IntWithAggregatesFilter
}

input baseSettingsSumOrderByAggregateInput {
  id: SortOrder
  startBalance: SortOrder
}

input baseSettingsUncheckedCreateInput {
  IPWhiteList: String!
  apiKey: String!
  header: String!
  id: Int
  mainPage: String!
  panelURLs: Json
  saleMode: Boolean
  startBalance: Int!
}

input baseSettingsUncheckedUpdateInput {
  IPWhiteList: StringFieldUpdateOperationsInput
  apiKey: StringFieldUpdateOperationsInput
  header: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  mainPage: StringFieldUpdateOperationsInput
  panelURLs: Json
  saleMode: BoolFieldUpdateOperationsInput
  startBalance: IntFieldUpdateOperationsInput
}

input baseSettingsUncheckedUpdateManyInput {
  IPWhiteList: StringFieldUpdateOperationsInput
  apiKey: StringFieldUpdateOperationsInput
  header: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  mainPage: StringFieldUpdateOperationsInput
  panelURLs: Json
  saleMode: BoolFieldUpdateOperationsInput
  startBalance: IntFieldUpdateOperationsInput
}

input baseSettingsUpdateInput {
  IPWhiteList: StringFieldUpdateOperationsInput
  apiKey: StringFieldUpdateOperationsInput
  header: StringFieldUpdateOperationsInput
  mainPage: StringFieldUpdateOperationsInput
  panelURLs: Json
  saleMode: BoolFieldUpdateOperationsInput
  startBalance: IntFieldUpdateOperationsInput
}

input baseSettingsUpdateManyMutationInput {
  IPWhiteList: StringFieldUpdateOperationsInput
  apiKey: StringFieldUpdateOperationsInput
  header: StringFieldUpdateOperationsInput
  mainPage: StringFieldUpdateOperationsInput
  panelURLs: Json
  saleMode: BoolFieldUpdateOperationsInput
  startBalance: IntFieldUpdateOperationsInput
}

input baseSettingsWhereInput {
  AND: [baseSettingsWhereInput]
  IPWhiteList: StringFilter
  NOT: [baseSettingsWhereInput]
  OR: [baseSettingsWhereInput]
  apiKey: StringFilter
  header: StringFilter
  id: IntFilter
  mainPage: StringFilter
  panelURLs: JsonNullableFilter
  saleMode: BoolFilter
  startBalance: IntFilter
}

input baseSettingsWhereUniqueInput {
  id: Int
}

type urlSettings {
  hidden: Boolean!
  icon: String
  id: Int!
  isHaveSidebar: Boolean
  sections: Json
  text: String
  typeUrl: ETypeOfURL!
  url: String!
}

input urlSettingsAvgOrderByAggregateInput {
  id: SortOrder
}

input urlSettingsCountOrderByAggregateInput {
  hidden: SortOrder
  icon: SortOrder
  id: SortOrder
  isHaveSidebar: SortOrder
  sections: SortOrder
  text: SortOrder
  typeUrl: SortOrder
  url: SortOrder
}

input urlSettingsCreateInput {
  hidden: Boolean
  icon: String
  isHaveSidebar: Boolean
  sections: Json
  text: String
  typeUrl: ETypeOfURL
  url: String!
}

input urlSettingsCreateManyInput {
  hidden: Boolean
  icon: String
  id: Int
  isHaveSidebar: Boolean
  sections: Json
  text: String
  typeUrl: ETypeOfURL
  url: String!
}

input urlSettingsMaxOrderByAggregateInput {
  hidden: SortOrder
  icon: SortOrder
  id: SortOrder
  isHaveSidebar: SortOrder
  text: SortOrder
  typeUrl: SortOrder
  url: SortOrder
}

input urlSettingsMinOrderByAggregateInput {
  hidden: SortOrder
  icon: SortOrder
  id: SortOrder
  isHaveSidebar: SortOrder
  text: SortOrder
  typeUrl: SortOrder
  url: SortOrder
}

input urlSettingsOrderByWithAggregationInput {
  _avg: urlSettingsAvgOrderByAggregateInput
  _count: urlSettingsCountOrderByAggregateInput
  _max: urlSettingsMaxOrderByAggregateInput
  _min: urlSettingsMinOrderByAggregateInput
  _sum: urlSettingsSumOrderByAggregateInput
  hidden: SortOrder
  icon: SortOrder
  id: SortOrder
  isHaveSidebar: SortOrder
  sections: SortOrder
  text: SortOrder
  typeUrl: SortOrder
  url: SortOrder
}

input urlSettingsOrderByWithRelationInput {
  hidden: SortOrder
  icon: SortOrder
  id: SortOrder
  isHaveSidebar: SortOrder
  sections: SortOrder
  text: SortOrder
  typeUrl: SortOrder
  url: SortOrder
}

input urlSettingsScalarWhereWithAggregatesInput {
  AND: [urlSettingsScalarWhereWithAggregatesInput]
  NOT: [urlSettingsScalarWhereWithAggregatesInput]
  OR: [urlSettingsScalarWhereWithAggregatesInput]
  hidden: BoolWithAggregatesFilter
  icon: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  isHaveSidebar: BoolNullableWithAggregatesFilter
  sections: JsonNullableWithAggregatesFilter
  text: StringNullableWithAggregatesFilter
  typeUrl: EnumETypeOfURLWithAggregatesFilter
  url: StringWithAggregatesFilter
}

input urlSettingsSumOrderByAggregateInput {
  id: SortOrder
}

input urlSettingsUncheckedCreateInput {
  hidden: Boolean
  icon: String
  id: Int
  isHaveSidebar: Boolean
  sections: Json
  text: String
  typeUrl: ETypeOfURL
  url: String!
}

input urlSettingsUncheckedUpdateInput {
  hidden: BoolFieldUpdateOperationsInput
  icon: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  isHaveSidebar: NullableBoolFieldUpdateOperationsInput
  sections: Json
  text: NullableStringFieldUpdateOperationsInput
  typeUrl: EnumETypeOfURLFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input urlSettingsUncheckedUpdateManyInput {
  hidden: BoolFieldUpdateOperationsInput
  icon: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  isHaveSidebar: NullableBoolFieldUpdateOperationsInput
  sections: Json
  text: NullableStringFieldUpdateOperationsInput
  typeUrl: EnumETypeOfURLFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input urlSettingsUpdateInput {
  hidden: BoolFieldUpdateOperationsInput
  icon: NullableStringFieldUpdateOperationsInput
  isHaveSidebar: NullableBoolFieldUpdateOperationsInput
  sections: Json
  text: NullableStringFieldUpdateOperationsInput
  typeUrl: EnumETypeOfURLFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input urlSettingsUpdateManyMutationInput {
  hidden: BoolFieldUpdateOperationsInput
  icon: NullableStringFieldUpdateOperationsInput
  isHaveSidebar: NullableBoolFieldUpdateOperationsInput
  sections: Json
  text: NullableStringFieldUpdateOperationsInput
  typeUrl: EnumETypeOfURLFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input urlSettingsWhereInput {
  AND: [urlSettingsWhereInput]
  NOT: [urlSettingsWhereInput]
  OR: [urlSettingsWhereInput]
  hidden: BoolFilter
  icon: StringNullableFilter
  id: IntFilter
  isHaveSidebar: BoolNullableFilter
  sections: JsonNullableFilter
  text: StringNullableFilter
  typeUrl: EnumETypeOfURLFilter
  url: StringFilter
}

input urlSettingsWhereUniqueInput {
  id: Int
}
